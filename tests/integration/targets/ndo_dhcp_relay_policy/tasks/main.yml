# Test code for the MSO modules
# Copyright: (c) 2024, Akini Ross (@akinross) <akinross@cisco.com>

# GNU General Public License v3.0+ (see LICENSE or https://www.gnu.org/licenses/gpl-3.0.txt)

- name: Test that we have an ACI MultiSite host, username and password
  ansible.builtin.fail:
    msg: 'Please define the following variables: mso_hostname, mso_username and mso_password.'
  when: mso_hostname is not defined or mso_username is not defined or mso_password is not defined

# CLEAN ENVIRONMENT
- name: Set vars
  ansible.builtin.set_fact:
    mso_info: &mso_info
      host: '{{ mso_hostname }}'
      username: '{{ mso_username }}'
      password: '{{ mso_password }}'
      validate_certs: '{{ mso_validate_certs | default(false) }}'
      use_ssl: '{{ mso_use_ssl | default(true) }}'
      use_proxy: '{{ mso_use_proxy | default(true) }}'
      output_level: '{{ mso_output_level | default("info") }}'

# QUERY VERSION
- name: Query MSO version
  cisco.mso.mso_version:
    <<: *mso_info
    state: query
  register: version


- name: Execute tasks only for MSO version > 4.3
  when: version.current.version is version('4.3', '>=')
  block:
    
    - name: Ensure sites exists
      cisco.mso.mso_site:
        <<: *mso_info
        site: '{{ item.site }}'
        apic_username: '{{ apic_username }}'
        apic_password: '{{ apic_password }}'
        apic_site_id: '{{ item.apic_site_id }}'
        urls:
          - https://{{ apic_hostname }}
        state: present
      loop:
        - {site: "ansible_test", apic_site_id: 101}
        - {site: "ansible_test_2", apic_site_id: 102}
    
    - name: Ensure tenant exist
      cisco.mso.mso_tenant: 
        <<: *mso_info
        tenant: '{{ item }}'
        users:
          - '{{ mso_username }}'
        sites:
          - '{{ mso_site | default("ansible_test") }}'
          - ansible_test_2
        state: present
      loop:
        - ansible_test
    
    - name: Ensure templates do not exist
      cisco.mso.ndo_template: &template_absent
        <<: *mso_info
        name: ansible_tenant_template
        template_type: tenant
        tenant: ansible_test
        state: absent

    - name: Ensure schemas do not exist
      cisco.mso.mso_schema: &remove_schemas
        <<: *mso_info
        schema: '{{ mso_schema | default("ansible_test") }}'
        state: absent
    
    - name: Ensure schema with template exists
      cisco.mso.mso_schema_template:
        <<: *mso_info
        schema: '{{ mso_schema | default("ansible_test") }}'
        tenant: ansible_test
        template: ansible_test
        state: present

    - name: Ensure ANP exist
      cisco.mso.mso_schema_template_anp: &ansible_test_anp
        <<: *mso_info
        schema: '{{ mso_schema | default("ansible_test") }}'
        template: ansible_test
        anp: ansible_test_anp
        state: present

    - name: Ensure EPGs exist
      cisco.mso.mso_schema_template_anp_epg:
        <<: *ansible_test_anp
        epg: "{{ item }}"
        state: present
      loop:
        - ansible_test_epg_1
        - ansible_test_epg_2

    - name: Ensure VRF exist
      cisco.mso.mso_schema_template_vrf:
        <<: *mso_info
        schema: '{{ mso_schema | default("ansible_test") }}'
        template: ansible_test
        vrf: ansible_test_vrf
        state: present

    - name: Ensure External EPGs exist
      cisco.mso.mso_schema_template_externalepg:
        <<: *mso_info
        schema: '{{ mso_schema | default("ansible_test") }}'
        template: ansible_test
        external_epg: "{{ item }}"
        vrf: 
          name: ansible_test_vrf
          template: ansible_test
          schema: '{{ mso_schema | default("ansible_test") }}'
        state: present
      loop:
        - ansible_test_external_epg_1
        - ansible_test_external_epg_2

    - name: Ensure templates exist
      cisco.mso.ndo_template:
        <<: *template_absent
        state: present

    # CREATE

    - name: Create a new dhcp relay policy (check_mode)
      cisco.mso.ndo_dhcp_relay_policy: &create_dhcp_relay_policy
        <<: *mso_info
        template: ansible_tenant_template
        relay_policy: ansible_test_relay_policy
        providers:
          - schema: '{{ mso_schema | default("ansible_test") }}'
            template: ansible_test
            anp: ansible_test_anp
            epg: ansible_test_epg_1
            ip: 1.1.1.1
        state: present
      check_mode: true
      register: cm_create_new_dhcp_relay_policy
    
    - name: Create a new dhcp relay policy
      cisco.mso.ndo_dhcp_relay_policy:
        <<: *create_dhcp_relay_policy
      register: nm_create_new_dhcp_relay_policy
    
    - name: Create a new dhcp relay policy again
      cisco.mso.ndo_dhcp_relay_policy:
        <<: *create_dhcp_relay_policy
      register: nm_create_new_dhcp_relay_policy_again

    - name: Assert dhcp relay policy was created
      assert:
        that:
          - cm_create_new_dhcp_relay_policy is changed
          - cm_create_new_dhcp_relay_policy.previous == {}
          - cm_create_new_dhcp_relay_policy.current.name == "ansible_test_relay_policy"
          - cm_create_new_dhcp_relay_policy.current.providers.0.epgRef is defined
          - cm_create_new_dhcp_relay_policy.current.providers.0.ip == "1.1.1.1"
          - cm_create_new_dhcp_relay_policy.current.providers.0.useServerVrf == false
          - nm_create_new_dhcp_relay_policy is changed
          - nm_create_new_dhcp_relay_policy.previous == {}
          - nm_create_new_dhcp_relay_policy.current.name == "ansible_test_relay_policy"
          - nm_create_new_dhcp_relay_policy.current.providers.0.epgRef is defined
          - nm_create_new_dhcp_relay_policy.current.providers.0.ip == "1.1.1.1"
          - nm_create_new_dhcp_relay_policy.current.providers.0.useServerVrf == false
          - nm_create_new_dhcp_relay_policy_again is not changed
          - nm_create_new_dhcp_relay_policy_again.previous.name == "ansible_test_relay_policy"
          - nm_create_new_dhcp_relay_policy_again.previous.description == ""
          - nm_create_new_dhcp_relay_policy_again.previous.uuid is defined
          - nm_create_new_dhcp_relay_policy_again.previous.providers.0.epgRef is defined
          - nm_create_new_dhcp_relay_policy_again.previous.providers.0.ip == "1.1.1.1"
          - nm_create_new_dhcp_relay_policy_again.previous.providers.0.useServerVrf == false
          - nm_create_new_dhcp_relay_policy_again.current.name == "ansible_test_relay_policy"
          - nm_create_new_dhcp_relay_policy_again.current.description == ""
          - nm_create_new_dhcp_relay_policy_again.current.uuid is defined
          - nm_create_new_dhcp_relay_policy_again.current.providers.0.epgRef is defined
          - nm_create_new_dhcp_relay_policy_again.current.providers.0.ip == "1.1.1.1"
          - nm_create_new_dhcp_relay_policy_again.current.providers.0.useServerVrf == false

    # UPDATE

    - name: Update a dhcp relay policy description (check_mode)
      cisco.mso.ndo_dhcp_relay_policy: &update_dhcp_relay_policy
        <<: *create_dhcp_relay_policy
        description: changed_description
      check_mode: true
      register: cm_update_dhcp_relay_policy_description
    
    - name: Update a dhcp relay policy description
      cisco.mso.ndo_dhcp_relay_policy:
        <<: *update_dhcp_relay_policy
      register: nm_update_dhcp_relay_policy_description
    
    - name: Update a dhcp relay policy description again
      cisco.mso.ndo_dhcp_relay_policy:
        <<: *update_dhcp_relay_policy
      register: nm_update_dhcp_relay_policy_description_again
    
    - name: Assert dhcp relay policy was updated
      assert:
        that:
          - cm_update_dhcp_relay_policy_description is changed
          - cm_update_dhcp_relay_policy_description.previous.description == ""
          - cm_update_dhcp_relay_policy_description.current.description == "changed_description"
          - nm_update_dhcp_relay_policy_description is changed
          - nm_update_dhcp_relay_policy_description.previous.description == ""
          - nm_update_dhcp_relay_policy_description.current.description == "changed_description"
          - nm_update_dhcp_relay_policy_description_again is not changed
          - nm_update_dhcp_relay_policy_description_again.previous.description == "changed_description"
          - nm_update_dhcp_relay_policy_description_again.current.description == "changed_description"

    - name: Update a dhcp relay policy name
      cisco.mso.ndo_dhcp_relay_policy: &update_dhcp_relay_policy_name
        <<: *update_dhcp_relay_policy
        relay_policy_uuid: '{{ nm_update_dhcp_relay_policy_description.current.uuid }}'
        relay_policy: ansible_test_relay_policy_changed
      register: nm_update_dhcp_relay_policy_name

    - name: Update a dhcp relay policy providers change input
      cisco.mso.ndo_dhcp_relay_policy:
        <<: *update_dhcp_relay_policy_name
        providers:
          - schema: '{{ mso_schema | default("ansible_test") }}'
            template: ansible_test
            external_epg: ansible_test_external_epg_1
            ip: 2.2.2.2
            use_server_vrf: true
      register: nm_update_dhcp_relay_policy_providers_change_input
    
    - name: Update a dhcp relay policy providers to 4
      cisco.mso.ndo_dhcp_relay_policy: &update_dhcp_relay_policy_providers_4
        <<: *update_dhcp_relay_policy_name
        providers:
          - schema: '{{ mso_schema | default("ansible_test") }}'
            template: ansible_test
            anp: ansible_test_anp
            epg: ansible_test_epg_1
            ip: 1.1.1.1
          - schema: '{{ mso_schema | default("ansible_test") }}'
            template: ansible_test
            anp: ansible_test_anp
            epg: ansible_test_epg_2
            ip: 2.2.2.2
            use_server_vrf: true
          - schema: '{{ mso_schema | default("ansible_test") }}'
            template: ansible_test
            external_epg: ansible_test_external_epg_1
            ip: 3.3.3.3
          - schema: '{{ mso_schema | default("ansible_test") }}'
            template: ansible_test
            external_epg: ansible_test_external_epg_2
            ip: 4.4.4.4
            use_server_vrf: true
      register: nm_update_dhcp_relay_policy_providers_4
    
    - name: Update a dhcp relay policy providers to 4 again
      cisco.mso.ndo_dhcp_relay_policy:
        <<: *update_dhcp_relay_policy_providers_4
      register: nm_update_dhcp_relay_policy_providers_4_again
    
    - name: Update a dhcp relay policy providers order without change
      cisco.mso.ndo_dhcp_relay_policy:
        <<: *update_dhcp_relay_policy_name
        providers:
          - schema: '{{ mso_schema | default("ansible_test") }}'
            template: ansible_test
            anp: ansible_test_anp
            epg: ansible_test_epg_1
            ip: 1.1.1.1
          - schema: '{{ mso_schema | default("ansible_test") }}'
            template: ansible_test
            anp: ansible_test_anp
            epg: ansible_test_epg_2
            ip: 2.2.2.2
            use_server_vrf: true
          - schema: '{{ mso_schema | default("ansible_test") }}'
            template: ansible_test
            external_epg: ansible_test_external_epg_2
            ip: 4.4.4.4
            use_server_vrf: true
          - schema: '{{ mso_schema | default("ansible_test") }}'
            template: ansible_test
            external_epg: ansible_test_external_epg_1
            ip: 3.3.3.3
      register: nm_update_dhcp_relay_policy_providers_4_order

    - name: Delete a dhcp relay policy relay from the list
      cisco.mso.ndo_dhcp_relay_policy:
        <<: *update_dhcp_relay_policy_name
        providers:
          - schema: '{{ mso_schema | default("ansible_test") }}'
            template: ansible_test
            anp: ansible_test_anp
            epg: ansible_test_epg_1
            ip: 1.1.1.1
          - schema: '{{ mso_schema | default("ansible_test") }}'
            template: ansible_test
            external_epg: ansible_test_external_epg_2
            ip: 4.4.4.4
            use_server_vrf: true
          - schema: '{{ mso_schema | default("ansible_test") }}'
            template: ansible_test
            external_epg: ansible_test_external_epg_1
            ip: 3.3.3.3
      register: nm_delete_dhcp_relay_policy_providers_3
    
    - name: Assert dhcp relay policy was updated
      assert:
        that:
          - nm_update_dhcp_relay_policy_name is changed
          - nm_update_dhcp_relay_policy_name.previous.name == "ansible_test_relay_policy"
          - nm_update_dhcp_relay_policy_name.current.name == "ansible_test_relay_policy_changed"
          - nm_update_dhcp_relay_policy_providers_change_input is changed
          - nm_update_dhcp_relay_policy_providers_change_input.previous.providers | length == 1
          - nm_update_dhcp_relay_policy_providers_change_input.previous.providers.0.epgRef is defined
          - nm_update_dhcp_relay_policy_providers_change_input.previous.providers.0.ip == "1.1.1.1"
          - nm_update_dhcp_relay_policy_providers_change_input.previous.providers.0.useServerVrf == false
          - nm_update_dhcp_relay_policy_providers_change_input.current.providers | length == 1
          - nm_update_dhcp_relay_policy_providers_change_input.current.providers.0.externalEpgRef is defined
          - nm_update_dhcp_relay_policy_providers_change_input.current.providers.0.ip == "2.2.2.2"
          - nm_update_dhcp_relay_policy_providers_change_input.current.providers.0.useServerVrf == true
          - nm_update_dhcp_relay_policy_providers_4 is changed
          - nm_update_dhcp_relay_policy_providers_4.previous.providers | length == 1
          - nm_update_dhcp_relay_policy_providers_4.current.providers | length == 4
          - nm_update_dhcp_relay_policy_providers_4_again is not changed
          - nm_update_dhcp_relay_policy_providers_4_again.previous.providers | length == 4
          - nm_update_dhcp_relay_policy_providers_4_again.current.providers | length == 4
          - nm_update_dhcp_relay_policy_providers_4_order is changed
          - nm_update_dhcp_relay_policy_providers_4_order.previous.providers | length == 4
          - nm_update_dhcp_relay_policy_providers_4_order.current.providers | length == 4
          - nm_delete_dhcp_relay_policy_providers_3 is changed
          - nm_delete_dhcp_relay_policy_providers_3.previous.providers | length == 4
          - nm_delete_dhcp_relay_policy_providers_3.current.providers | length == 3

    # QUERY

    - name: Create another dhcp relay policy
      cisco.mso.ndo_dhcp_relay_policy: &create_dhcp_relay_policy_2
        <<: *create_dhcp_relay_policy
        relay_policy: ansible_test_relay_policy_2
        description: "This is a test relay policy 2"

    - name: Query a dhcp relay policy with template_name
      cisco.mso.ndo_dhcp_relay_policy:
        <<: *create_dhcp_relay_policy_2
        state: query
      register: query_one

    - name: Query all dhcp relay policy in the template
      cisco.mso.ndo_dhcp_relay_policy:
        <<: *mso_info
        template: ansible_tenant_template
        state: query
      register: query_all
    
    - name: Assert dhcp relay policy was queried
      assert:
        that:
          - query_one is not changed
          - query_one.current.name == "ansible_test_relay_policy_2"
          - query_all is not changed
          - query_all.current | length == 2

    # ERRORS

    - name: Error providers provided as null on create
      cisco.mso.ndo_dhcp_relay_policy: &create_dhcp_relay_policy_null_providers
        <<: *create_dhcp_relay_policy
        relay_policy: ansible_test_relay_policy_3
        providers: '{{ fakevar | default(omit)}}'
      register: err_providers_create_null
      ignore_errors: true
    
    - name: Error providers provided as empty list on create
      cisco.mso.ndo_dhcp_relay_policy:
        <<: *create_dhcp_relay_policy_null_providers
        providers: []
      register: err_providers_create_empty_list
      ignore_errors: true

    - name: Error no providers provided on update
      cisco.mso.ndo_dhcp_relay_policy:
        <<: *update_dhcp_relay_policy_name
        providers: []
      register: err_providers_update_empty_list
      ignore_errors: true

    - name: Error providers provided no schema
      cisco.mso.ndo_dhcp_relay_policy:
        <<: *create_dhcp_relay_policy
        relay_policy: ansible_test_relay_policy_error
        providers:
          - template: ansible_test
            anp: ansible_test_anp
            epg: ansible_test_epg_1
            ip: 1.1.1.1
      register: err_providers_create_no_schema
      ignore_errors: true

    - name: Error providers provided no template
      cisco.mso.ndo_dhcp_relay_policy:
        <<: *create_dhcp_relay_policy
        relay_policy: ansible_test_relay_policy_error
        providers:
          - schema: '{{ mso_schema | default("ansible_test") }}'
            anp: ansible_test_anp
            epg: ansible_test_epg_1
            ip: 1.1.1.1
      register: err_providers_create_no_template
      ignore_errors: true

    - name: Error providers provided no ip
      cisco.mso.ndo_dhcp_relay_policy:
        <<: *create_dhcp_relay_policy
        relay_policy: ansible_test_relay_policy_error
        providers:
          - schema: '{{ mso_schema | default("ansible_test") }}'
            template: ansible_test
            anp: ansible_test_anp
            epg: ansible_test_epg_1
      register: err_providers_create_no_ip
      ignore_errors: true
    
    - name: Error providers provided no epg or external_epg
      cisco.mso.ndo_dhcp_relay_policy:
        <<: *create_dhcp_relay_policy
        relay_policy: ansible_test_relay_policy_error
        providers:
          - schema: '{{ mso_schema | default("ansible_test") }}'
            template: ansible_test
            ip: 1.1.1.1
      register: err_providers_create_no_epg_or_external_epg
      ignore_errors: true
    
    - name: Error providers provided epg and external_epg
      cisco.mso.ndo_dhcp_relay_policy:
        <<: *create_dhcp_relay_policy
        relay_policy: ansible_test_relay_policy_error
        providers:
          - schema: '{{ mso_schema | default("ansible_test") }}'
            template: ansible_test
            anp: ansible_test_anp
            epg: ansible_test_epg_1
            external_epg: ansible_test_external_epg_1
            ip: 1.1.1.1
      register: err_providers_create_epg_and_external_epg
      ignore_errors: true
    
    - name: Error providers provided anp and external_epg
      cisco.mso.ndo_dhcp_relay_policy:
        <<: *create_dhcp_relay_policy
        relay_policy: ansible_test_relay_policy_error
        providers:
          - schema: '{{ mso_schema | default("ansible_test") }}'
            template: ansible_test
            anp: ansible_test_anp
            external_epg: ansible_test_external_epg_1
            ip: 1.1.1.1
      register: err_providers_create_anp_and_external_epg
      ignore_errors: true

    - name: Error providers provided no anp with epg
      cisco.mso.ndo_dhcp_relay_policy:
        <<: *create_dhcp_relay_policy
        relay_policy: ansible_test_relay_policy_error
        providers:
          - schema: '{{ mso_schema | default("ansible_test") }}'
            template: ansible_test
            epg: ansible_test_epg_1
            ip: 1.1.1.1
      register: err_providers_create_no_anp
      ignore_errors: true

    - name: Assert errors
      assert:
        that:
          - err_providers_create_null is failed
          - err_providers_create_null.msg == "At least one provider is required when state is present."
          - err_providers_create_empty_list is failed
          - err_providers_create_empty_list.msg == "At least one provider is required when state is present."
          - err_providers_update_empty_list is failed
          - err_providers_update_empty_list.msg == "At least one provider is required when state is present."
          - err_providers_create_no_schema is failed
          - err_providers_create_no_schema.msg == "missing required arguments{{":"}} schema found in providers"
          - err_providers_create_no_template is failed
          - err_providers_create_no_template.msg == "missing required arguments{{":"}} template found in providers"
          - err_providers_create_no_ip is failed
          - err_providers_create_no_ip.msg == "missing required arguments{{":"}} ip found in providers"
          - err_providers_create_no_epg_or_external_epg is failed
          - err_providers_create_no_epg_or_external_epg.msg == "The epg or external_epg argument is required for each provider."
          - err_providers_create_epg_and_external_epg is failed
          - err_providers_create_epg_and_external_epg.msg == "The epg and external_epg arguments are mutually exclusive for each provider."
          - err_providers_create_anp_and_external_epg is failed
          - err_providers_create_anp_and_external_epg.msg == "The anp and external_epg arguments are mutually exclusive for each provider."
          - err_providers_create_no_anp is failed
          - err_providers_create_no_anp.msg == "The anp argument is required for each provider when the epg argument is provided."

    # DELETE

    - name: Delete a dhcp relay policy (check_mode)
      cisco.mso.ndo_dhcp_relay_policy: &delete_dhcp_relay_policy
        <<: *update_dhcp_relay_policy_name
        state: absent
      check_mode: true
      register: cm_delete_dhcp_relay_policy
    
    - name: Delete a dhcp relay policy
      cisco.mso.ndo_dhcp_relay_policy:
        <<: *delete_dhcp_relay_policy
      register: nm_delete_dhcp_relay_policy
    
    - name: Delete a dhcp relay policy again
      cisco.mso.ndo_dhcp_relay_policy:
        <<: *delete_dhcp_relay_policy
      register: nm_delete_dhcp_relay_policy_again

    - name: Assert dhcp relay policy was deleted
      assert:
        that:
          - cm_delete_dhcp_relay_policy is changed
          - cm_delete_dhcp_relay_policy.previous.name == 'ansible_test_relay_policy_changed'
          - cm_delete_dhcp_relay_policy.previous.providers | length == 3
          - cm_delete_dhcp_relay_policy.current == {}
          - nm_delete_dhcp_relay_policy is changed
          - nm_delete_dhcp_relay_policy.previous.name == 'ansible_test_relay_policy_changed'
          - nm_delete_dhcp_relay_policy.previous.providers | length == 3
          - nm_delete_dhcp_relay_policy.current == {}
          - nm_delete_dhcp_relay_policy_again is not changed
          - nm_delete_dhcp_relay_policy_again.previous == {}
          - nm_delete_dhcp_relay_policy_again.current == {}
    
    # CLEANUP TEMPLATE
    
    - name: Ensure templates do not exist
      cisco.mso.ndo_template:
        <<: *template_absent
    
    - name: Ensure schemas do not exist
      cisco.mso.mso_schema:
        <<: *remove_schemas
