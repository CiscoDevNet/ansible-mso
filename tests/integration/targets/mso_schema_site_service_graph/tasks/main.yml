# Test code for the MSO modules
# Copyright: (c) 2020, Shreyas Srish (@shrsr) <ssrish@cisco.com>

# GNU General Public License v3.0+ (see LICENSE or https://www.gnu.org/licenses/gpl-3.0.txt)

- name: Test that we have an ACI MultiSite host, username and password
  ansible.builtin.fail:
    msg: "Please define the following variables: mso_hostname, mso_username and mso_password."
  when: mso_hostname is not defined or mso_username is not defined or mso_password is not defined

# CLEAN ENVIRONMENT
- name: Set vars
  ansible.builtin.set_fact:
    mso_info: &mso_info
      host: "{{ mso_hostname }}"
      username: "{{ mso_username }}"
      password: "{{ mso_password }}"
      validate_certs: "{{ mso_validate_certs | default(false) }}"
      use_ssl: "{{ mso_use_ssl | default(true) }}"
      use_proxy: "{{ mso_use_proxy | default(false) }}"
      output_level: '{{ mso_output_level | default("info") }}'
    aci_info: &aci_info
      host: "{{ apic_hostname }}"
      username: "{{ apic_username }}"
      password: "{{ apic_password }}"
      validate_certs: "{{ apic_validate_certs | default(false) }}"
      use_ssl: "{{ apic_use_ssl | default(true) }}"
      use_proxy: "{{ apic_use_proxy | default(true) }}"
      output_level: '{{ mso_output_level | default("info") }}'

- name: Query MSO version
  cisco.mso.mso_version:
    <<: *mso_info
    state: query
  register: version

# Service Graph at Site Level is blocked by validations in MSO/NDO before v3.3.
# It is supported after v3.3 by using validate=false.
- name: Execute tasks only for MSO version >= 3.3
  when: version.current.version is version('3.3', '>=')
  block:
    - name: Ensure site exists
      cisco.mso.mso_site:
        <<: *mso_info
        site: '{{ mso_site | default("ansible_test") }}'
        apic_username: "{{ apic_username }}"
        apic_password: "{{ apic_password }}"
        apic_site_id: "{{ apic_site_id | default(101) }}"
        urls:
          - https://{{ apic_hostname }}
        state: present
      ignore_errors: true

    - name: Remove schemas
      cisco.mso.mso_schema:
        <<: *mso_info
        schema: '{{ mso_schema | default("ansible_test") }}'
        state: absent

    - name: Ensure sites removed from tenant ansible_test
      cisco.mso.mso_tenant_site:
        <<: *mso_info
        tenant: ansible_test
        site: "{{ item }}"
        state: absent
      loop:
        - '{{ mso_site | default("ansible_test") }}'
        - 'aws_{{ mso_site | default("ansible_test") }}'
        - 'azure_{{ mso_site | default("ansible_test") }}'
        - '{{ mso_site | default("azure_ansible_test_2") }}'
      ignore_errors: true

    - name: Ensure tenant ansible_test exist
      cisco.mso.mso_tenant:
        <<: *mso_info
        tenant: ansible_test
        users:
          - "{{ mso_username }}"
        state: present

    - name: Set ansible_network_os to cisco.aci.aci and ansible_connection to local
      ansible.builtin.set_fact:
        ansible_connection: local
        ansible_network_os: cisco.aci.aci

    - name: Reset the ansible_connection to access the APIC
      ansible.builtin.meta: reset_connection

    - name: Include tasks for L4-L7 devices
      ansible.builtin.include_tasks: l4_l7_devices.yml

    - name: Set ansible_network_os to cisco.nd.nd and ansible_connection to ansible.netcommon.httpapi
      ansible.builtin.set_fact:
        ansible_connection: ansible.netcommon.httpapi
        ansible_network_os: cisco.nd.nd

    - name: Reset the ansible_connection to access the MSO/NDO
      ansible.builtin.meta: reset_connection

    - name: Associate site with ansible_test
      cisco.mso.mso_tenant_site:
        <<: *mso_info
        tenant: ansible_test
        site: '{{ mso_site | default("ansible_test") }}'
        state: present
      when:
        - query_cloud.current | length == 0

    - name: Associate Azure site with ansible_test # Azure Task
      cisco.mso.mso_tenant_site:
        <<: *mso_info
        tenant: ansible_test
        site: azure_ansible_test_2
        cloud_account: "uni/tn-{{ mso_tenant | default('ansible_test') }}/act-[{{ azure_cloud_account | default(123) }}]-vendor-azure"
        state: present
      when:
        - query_cloud.current | length > 0
        - query_cloud.current.0.cloudProvP.attributes.vendor == "azure"

    - name: Ensure schema 1 with Template1, 2 and 3 exist
      cisco.mso.mso_schema_template:
        <<: *mso_info
        schema: '{{ mso_schema | default("ansible_test") }}'
        tenant: ansible_test
        template: "{{ item }}"
        state: present
      loop:
        - "Template1"
        - "Template2"
        - "Template3" # Azure Task

    - name: Ensure schema 2 with Template1 exists
      cisco.mso.mso_schema_template:
        <<: *mso_info
        schema: '{{ mso_schema | default("ansible_test") }}_2'
        tenant: ansible_test
        template: Template1
        state: present

    - name: Add Node1
      cisco.mso.mso_service_node_type:
        <<: *mso_info
        name: ansible_test_other1
        display_name: ansible_test_other1
        state: present

    - name: Add Node2
      cisco.mso.mso_service_node_type:
        <<: *mso_info
        name: ansible_test_other2
        display_name: ansible_test_other2
        state: present

    - name: Create a service graph 1 at Template level
      cisco.mso.mso_schema_template_service_graph:
        <<: *mso_info
        schema: '{{ mso_schema | default("ansible_test") }}'
        template: Template1
        service_graph: SG1
        display_name: sg1
        service_nodes:
          - type: firewall
        filter_after_first_node: allow_all
        state: present

    - name: Create service graph 2 at Template level
      cisco.mso.mso_schema_template_service_graph:
        <<: *mso_info
        schema: '{{ mso_schema | default("ansible_test") }}'
        template: Template1
        service_graph: SG2
        display_name: sg2
        service_nodes:
          - type: firewall
          - type: load-balancer
        filter_after_first_node: allow_all
        state: present
      register: sg1_again

    - name: Create service graph 3 at Template level
      cisco.mso.mso_schema_template_service_graph:
        <<: *mso_info
        schema: '{{ mso_schema | default("ansible_test") }}'
        template: Template1
        service_graph: SG3
        display_name: sg3
        service_nodes:
          - type: firewall
          - type: load-balancer
          - type: other
        filter_after_first_node: allow_all
        state: present
      register: sg1_again

    - name: Create a service graph 4 at Template level
      cisco.mso.mso_schema_template_service_graph:
        <<: *mso_info
        schema: '{{ mso_schema | default("ansible_test") }}'
        template: Template1
        service_graph: SG4
        display_name: sg4
        service_nodes:
          - type: other
          - type: load-balancer
          - type: firewall
        filter_after_first_node: filters_from_contract
        state: present

    - name: Create a service graph 5 at Template level
      cisco.mso.mso_schema_template_service_graph:
        <<: *mso_info
        schema: '{{ mso_schema | default("ansible_test") }}'
        template: Template1
        service_graph: SG5
        display_name: sg5
        service_nodes:
          - type: other
          - type: firewall
          - type: firewall
        filter_after_first_node: filters_from_contract
        state: present

    - name: Create a service graph 6 at Template level
      cisco.mso.mso_schema_template_service_graph:
        <<: *mso_info
        schema: '{{ mso_schema | default("ansible_test") }}'
        template: Template1
        service_graph: SG6
        display_name: sg6
        service_nodes:
          - type: other
          - type: other
          - type: other
        filter_after_first_node: filters_from_contract
        state: present

    - name: Create a service graph 7 at Template level
      cisco.mso.mso_schema_template_service_graph:
        <<: *mso_info
        schema: '{{ mso_schema | default("ansible_test") }}'
        template: Template1
        service_graph: SG7
        display_name: sg7
        service_nodes:
          - type: load-balancer
          - type: load-balancer
        filter_after_first_node: filters_from_contract
        state: present

    - name: Add physical site to a schema
      cisco.mso.mso_schema_site:
        <<: *mso_info
        schema: '{{ mso_schema | default("ansible_test") }}'
        site: '{{ mso_site | default("ansible_test") }}'
        template: Template1
        state: present

    - name: Add a new Graph at site level (check mode)
      cisco.mso.mso_schema_site_service_graph:
        <<: *mso_info
        schema: '{{ mso_schema | default("ansible_test") }}'
        template: Template1
        service_graph: SG1
        site: '{{ mso_site | default("ansible_test") }}'
        tenant: ansible_test
        devices:
          - name: ansible_test_firewall1
        state: present
      register: cm_sg1
      check_mode: true

    - name: Verify cm_sg1
      ansible.builtin.assert:
        that:
          - cm_sg1 is changed
          - cm_sg1.current.serviceGraphRef.serviceGraphName == "SG1"
          - cm_sg1.current.serviceGraphRef.templateName == "Template1"
          - cm_sg1.current.serviceNodes | length == 1
          - cm_sg1.current.serviceNodes.0.device.dn is match("uni/tn-ansible_test/(lDevVip|clb|cld)-ansible_test_firewall1")

    - name: Add a new Graph SG1 at site level (normal mode)
      cisco.mso.mso_schema_site_service_graph:
        <<: *mso_info
        schema: '{{ mso_schema | default("ansible_test") }}'
        template: Template1
        service_graph: SG1
        site: '{{ mso_site | default("ansible_test") }}'
        tenant: ansible_test
        devices:
          - name: ansible_test_firewall1
        state: present
      register: nm_sg1

    - name: Verify change_sg1
      ansible.builtin.assert:
        that:
          - nm_sg1 is changed
          - nm_sg1.current.serviceGraphRef.serviceGraphName == "SG1"
          - nm_sg1.current.serviceGraphRef.templateName == "Template1"
          - nm_sg1.current.serviceNodes | length == 1
          - nm_sg1.current.serviceNodes.0.device.dn is match("uni/tn-ansible_test/(lDevVip|clb|cld)-ansible_test_firewall1")

    - name: Add Graph SG1 at site level again
      cisco.mso.mso_schema_site_service_graph:
        <<: *mso_info
        schema: '{{ mso_schema | default("ansible_test") }}'
        template: Template1
        service_graph: SG1
        site: '{{ mso_site | default("ansible_test") }}'
        tenant: ansible_test
        devices:
          - name: ansible_test_firewall1
        state: present
      register: nm_sg1_again

    - name: Verify change_sg1
      ansible.builtin.assert:
        that:
          - nm_sg1_again is not changed
          - nm_sg1_again.current.serviceGraphRef.serviceGraphName == "SG1"
          - nm_sg1_again.current.serviceGraphRef.templateName == "Template1"
          - nm_sg1_again.current.serviceNodes | length == 1
          - nm_sg1_again.current.serviceNodes.0.device.dn is match("uni/tn-ansible_test/(lDevVip|clb|cld)-ansible_test_firewall1")

    - name: Change service graph SG1 at site level
      cisco.mso.mso_schema_site_service_graph:
        <<: *mso_info
        schema: '{{ mso_schema | default("ansible_test") }}'
        template: Template1
        service_graph: SG1
        site: '{{ mso_site | default("ansible_test") }}'
        tenant: ansible_test
        devices:
          - name: ansible_test_firewall2
        state: present
      register: change_sg1

    - name: Verify change_sg1
      ansible.builtin.assert:
        that:
          - change_sg1 is changed
          - change_sg1.current.serviceGraphRef.serviceGraphName == "SG1"
          - change_sg1.current.serviceGraphRef.templateName == "Template1"
          - change_sg1.current.serviceNodes | length == 1
          - change_sg1.current.serviceNodes.0.device.dn is match("uni/tn-ansible_test/(lDevVip|clb|cld)-ansible_test_firewall2")

    - name: Add a new Graph SG2 at site level
      cisco.mso.mso_schema_site_service_graph:
        <<: *mso_info
        schema: '{{ mso_schema | default("ansible_test") }}'
        template: Template1
        service_graph: SG2
        site: '{{ mso_site | default("ansible_test") }}'
        tenant: ansible_test
        devices:
          - name: ansible_test_firewall1
          - name: ansible_test_adc
        state: present
      register: sg2

    - name: Verify sg2
      ansible.builtin.assert:
        that:
          - sg2 is changed
          - sg2.current.serviceGraphRef.serviceGraphName == "SG2"
          - sg2.current.serviceGraphRef.templateName == "Template1"
          - sg2.current.serviceNodes | length == 2
          - sg2.current.serviceNodes.0.device.dn is match("uni/tn-ansible_test/(lDevVip|clb|cld)-ansible_test_firewall1")
          - sg2.current.serviceNodes.1.device.dn is match("uni/tn-ansible_test/(lDevVip|clb|cld)-ansible_test_adc")

    - name: Add a new Graph SG3 at site level
      cisco.mso.mso_schema_site_service_graph:
        <<: *mso_info
        schema: '{{ mso_schema | default("ansible_test") }}'
        template: Template1
        service_graph: SG3
        site: '{{ mso_site | default("ansible_test") }}'
        tenant: ansible_test
        devices:
          - name: ansible_test_firewall1
          - name: ansible_test_adc
          - name: ansible_test_other
        state: present
      register: sg3

    - name: Verify sg3
      ansible.builtin.assert:
        that:
          - sg3 is changed
          - sg3.current.serviceGraphRef.serviceGraphName == "SG3"
          - sg3.current.serviceGraphRef.templateName == "Template1"
          - sg3.current.serviceNodes | length == 3
          - sg3.current.serviceNodes.0.device.dn is match("uni/tn-ansible_test/(lDevVip|clb|cld)-ansible_test_firewall1")
          - sg3.current.serviceNodes.1.device.dn is match("uni/tn-ansible_test/(lDevVip|clb|cld)-ansible_test_adc")
          - sg3.current.serviceNodes.2.device.dn is match("uni/tn-ansible_test/(lDevVip|clb|cld)-ansible_test_other")

    - name: Add a new Graph SG4 at site level
      cisco.mso.mso_schema_site_service_graph:
        <<: *mso_info
        schema: '{{ mso_schema | default("ansible_test") }}'
        template: Template1
        service_graph: SG4
        site: '{{ mso_site | default("ansible_test") }}'
        tenant: ansible_test
        devices:
          - name: ansible_test_other
          - name: ansible_test_adc
          - name: ansible_test_firewall1
        state: present
      register: sg4

    - name: Verify sg4
      ansible.builtin.assert:
        that:
          - sg4 is changed
          - sg4.current.serviceGraphRef.serviceGraphName == "SG4"
          - sg4.current.serviceGraphRef.templateName == "Template1"
          - sg4.current.serviceNodes | length == 3
          - sg4.current.serviceNodes.0.device.dn is match("uni/tn-ansible_test/(lDevVip|clb|cld)-ansible_test_other")
          - sg4.current.serviceNodes.1.device.dn is match("uni/tn-ansible_test/(lDevVip|clb|cld)-ansible_test_adc")
          - sg4.current.serviceNodes.2.device.dn is match("uni/tn-ansible_test/(lDevVip|clb|cld)-ansible_test_firewall1")

    - name: Change Graph SG4 at site level
      cisco.mso.mso_schema_site_service_graph:
        <<: *mso_info
        schema: '{{ mso_schema | default("ansible_test") }}'
        template: Template1
        service_graph: SG4
        site: '{{ mso_site | default("ansible_test") }}'
        tenant: ansible_test
        devices:
          - name: ansible_test_other
          - name: ansible_test_adc
          - name: ansible_test_firewall2
        state: present
      register: change1_sg4

    - name: Verify change1_sg4
      ansible.builtin.assert:
        that:
          - change1_sg4 is changed
          - change1_sg4.current.serviceGraphRef.serviceGraphName == "SG4"
          - change1_sg4.current.serviceGraphRef.templateName == "Template1"
          - change1_sg4.current.serviceNodes | length == 3
          - change1_sg4.current.serviceNodes.0.device.dn is match("uni/tn-ansible_test/(lDevVip|clb|cld)-ansible_test_other")
          - change1_sg4.current.serviceNodes.1.device.dn is match("uni/tn-ansible_test/(lDevVip|clb|cld)-ansible_test_adc")
          - change1_sg4.current.serviceNodes.2.device.dn is match("uni/tn-ansible_test/(lDevVip|clb|cld)-ansible_test_firewall2")

    - name: Change Graph SG4 at site level
      cisco.mso.mso_schema_site_service_graph:
        <<: *mso_info
        schema: '{{ mso_schema | default("ansible_test") }}'
        template: Template1
        service_graph: SG4
        site: '{{ mso_site | default("ansible_test") }}'
        tenant: ansible_test
        devices:
          - name: ansible_test_other
        state: present
      ignore_errors: true
      register: change2_sg4

    - name: Verify change2_sg4
      ansible.builtin.assert:
        that:
          - change2_sg4 is not changed
          - change2_sg4.msg == "Service Graph 'SG4' has '3' service node type(s) but '1' service node(s) were given for the service graph"

    - name: Change Graph SG4 at site level
      cisco.mso.mso_schema_site_service_graph:
        <<: *mso_info
        schema: '{{ mso_schema | default("ansible_test") }}'
        template: Template1
        service_graph: SG4
        site: '{{ mso_site | default("ansible_test") }}'
        tenant: ansible_test
        devices:
          - name: ansible_test_adc
        state: present
      ignore_errors: true
      register: change3_sg4

    - name: Verify change3_sg4
      ansible.builtin.assert:
        that:
          - change3_sg4 is not changed
          - change3_sg4.msg == "Service Graph 'SG4' has '3' service node type(s) but '1' service node(s) were given for the service graph"

    - name: Change Graph SG4 at site level
      cisco.mso.mso_schema_site_service_graph:
        <<: *mso_info
        schema: '{{ mso_schema | default("ansible_test") }}'
        template: Template1
        service_graph: SG4
        site: '{{ mso_site | default("ansible_test") }}'
        tenant: ansible_test
        devices:
          - name: ansible_test_firewall1
        state: present
      ignore_errors: true
      register: change4_sg4

    - name: Verify change4_sg4
      ansible.builtin.assert:
        that:
          - change4_sg4 is not changed
          - change4_sg4.msg == "Service Graph 'SG4' has '3' service node type(s) but '1' service node(s) were given for the service graph"

    - name: Change Graph SG4 at site level
      cisco.mso.mso_schema_site_service_graph:
        <<: *mso_info
        schema: '{{ mso_schema | default("ansible_test") }}'
        template: Template1
        service_graph: SG4
        site: '{{ mso_site | default("ansible_test") }}'
        tenant: ansible_test
        devices:
          - name: ansible_test_other
          - name: ansible_test_adc
        state: present
      ignore_errors: true
      register: change5_sg4

    - name: Verify change5_sg4
      ansible.builtin.assert:
        that:
          - change5_sg4 is not changed
          - change5_sg4.msg == "Service Graph 'SG4' has '3' service node type(s) but '2' service node(s) were given for the service graph"

    - name: Add Graph SG5 at site level
      cisco.mso.mso_schema_site_service_graph:
        <<: *mso_info
        schema: '{{ mso_schema | default("ansible_test") }}'
        template: Template1
        service_graph: SG5
        site: '{{ mso_site | default("ansible_test") }}'
        tenant: ansible_test
        devices:
          - name: ansible_test_other
          - name: ansible_test_firewall1
          - name: ansible_test_firewall1
        state: present
      register: sg5

    - name: Verify sg5
      ansible.builtin.assert:
        that:
          - sg5 is changed
          - sg5.current.serviceGraphRef.serviceGraphName == "SG5"
          - sg5.current.serviceGraphRef.templateName == "Template1"
          - sg5.current.serviceNodes | length == 3
          - sg5.current.serviceNodes.0.device.dn is match("uni/tn-ansible_test/(lDevVip|clb|cld)-ansible_test_other")
          - sg5.current.serviceNodes.1.device.dn is match("uni/tn-ansible_test/(lDevVip|clb|cld)-ansible_test_firewall1")
          - sg5.current.serviceNodes.2.device.dn is match("uni/tn-ansible_test/(lDevVip|clb|cld)-ansible_test_firewall1")

    - name: Add Graph SG6 at site level
      cisco.mso.mso_schema_site_service_graph:
        <<: *mso_info
        schema: '{{ mso_schema | default("ansible_test") }}'
        template: Template1
        service_graph: SG6
        site: '{{ mso_site | default("ansible_test") }}'
        tenant: ansible_test
        devices:
          - name: ansible_test_other
          - name: ansible_test_other
          - name: ansible_test_other
        state: present
      register: sg6

    - name: Verify sg6
      ansible.builtin.assert:
        that:
          - sg6 is changed
          - sg6.current.serviceGraphRef.serviceGraphName == "SG6"
          - sg6.current.serviceGraphRef.templateName == "Template1"
          - sg6.current.serviceNodes | length == 3
          - sg6.current.serviceNodes.0.device.dn is match("uni/tn-ansible_test/(lDevVip|clb|cld)-ansible_test_other")
          - sg6.current.serviceNodes.1.device.dn is match("uni/tn-ansible_test/(lDevVip|clb|cld)-ansible_test_other")
          - sg6.current.serviceNodes.2.device.dn is match("uni/tn-ansible_test/(lDevVip|clb|cld)-ansible_test_other")

    - name: Add Graph SG7 at site level
      cisco.mso.mso_schema_site_service_graph:
        <<: *mso_info
        schema: '{{ mso_schema | default("ansible_test") }}'
        template: Template1
        service_graph: SG7
        site: '{{ mso_site | default("ansible_test") }}'
        tenant: ansible_test
        devices:
          - name: ansible_test_adc
          - name: ansible_test_adc
        state: present
      register: sg7

    - name: Verify sg7
      ansible.builtin.assert:
        that:
          - sg7 is changed
          - sg7.current.serviceGraphRef.serviceGraphName == "SG7"
          - sg7.current.serviceGraphRef.templateName == "Template1"
          - sg7.current.serviceNodes | length == 2
          - sg7.current.serviceNodes.0.device.dn is match("uni/tn-ansible_test/(lDevVip|clb|cld)-ansible_test_adc")
          - sg7.current.serviceNodes.1.device.dn is match("uni/tn-ansible_test/(lDevVip|clb|cld)-ansible_test_adc")

    - name: Query service graph SG at site level
      cisco.mso.mso_schema_site_service_graph:
        <<: *mso_info
        schema: '{{ mso_schema | default("ansible_test") }}'
        template: Template1
        service_graph: SG1
        site: '{{ mso_site | default("ansible_test") }}'
        tenant: ansible_test
        state: query
      register: query_sg

    - name: Verify query_sg
      ansible.builtin.assert:
        that:
          - query_sg is not changed
          - query_sg.current.serviceGraphRef is match("/schemas/[0-9a-zA-Z]*/templates/Template1/serviceGraphs/SG1")

    - name: Query all service graphs at site level
      cisco.mso.mso_schema_site_service_graph:
        <<: *mso_info
        schema: '{{ mso_schema | default("ansible_test") }}'
        template: Template1
        site: '{{ mso_site | default("ansible_test") }}'
        tenant: ansible_test
        state: query
      register: query_all

    - name: Verify query_all
      ansible.builtin.assert:
        that:
          - query_all is not changed
          - query_all.current | length == 7

    # Azure tests part
    - name: Execute tasks only for cloud sites
      when:
        - query_cloud.current | length > 0
        - query_cloud.current.0.cloudProvP.attributes.vendor == "azure"
      block:
        - name: Create a service graph 1 at Template3 for the Azure site service graph test # Azure Task
          cisco.mso.mso_schema_template_service_graph:
            <<: *mso_info
            schema: '{{ mso_schema | default("ansible_test") }}'
            template: Template3
            service_graph: SG1
            display_name: sg1
            service_nodes:
              - type: firewall
              - type: load-balancer
              - type: other
            filter_after_first_node: allow_all
            state: present

        - name: Create a service graph 2 at Template3 for the Azure site service graph test # Azure Task
          cisco.mso.mso_schema_template_service_graph:
            <<: *mso_info
            schema: '{{ mso_schema | default("ansible_test") }}'
            template: Template3
            service_graph: SG2
            display_name: sg2
            service_nodes:
              - type: other
            filter_after_first_node: allow_all
            state: present

        - name: Add Azure site to a schema Template3 for the Azure site service graph test # Azure Task
          cisco.mso.mso_schema_site:
            <<: *mso_info
            schema: '{{ mso_schema | default("ansible_test") }}'
            site: '{{ mso_site | default("ansible_test") }}'
            template: Template3
            state: present

        - name: Add Service Graph 1 at site level for the Azure site service graph test - check_mode # Azure Task
          cisco.mso.mso_schema_site_service_graph: &az_sg1_cm_present
            <<: *mso_info
            schema: '{{ mso_schema | default("ansible_test") }}'
            template: Template3
            service_graph: SG1
            site: '{{ mso_site | default("ansible_test") }}'
            tenant: ansible_test
            devices:
              - name: ansible_test_firewall1
                provider_connector_type: source_nat
                provider_interface: TP_FW_Inf1
                consumer_connector_type: redirect
                consumer_interface: TP_FW_Inf1
              - name: ansible_test_app_lb
              - name: ansible_test_other
                provider_connector_type: destination_nat
                consumer_connector_type: redirect
            state: present
            output_level: debug
          register: az_sg1_cm_present
          check_mode: true

        - name: Add Service Graph 1 at site level for the Azure site service graph test - normal_mode # Azure Task
          cisco.mso.mso_schema_site_service_graph:
            <<: *az_sg1_cm_present
            output_level: debug
          register: az_sg1_nm_present

        - name: Add Service Graph 1 at site level for the Azure site service graph test - normal_mode again # Azure Task
          cisco.mso.mso_schema_site_service_graph:
            <<: *az_sg1_cm_present
          register: az_sg1_nm_present_again

        - name: Add Service Graph 2 at site level for the Azure site service graph test # Azure Task
          cisco.mso.mso_schema_site_service_graph: &az_sg2_nm_present
            <<: *az_sg1_cm_present
            service_graph: SG2
            devices:
              - name: ansible_test_firewall2
                provider_connector_type: destination_nat
                provider_interface: TP_FW_Inf12
                consumer_connector_type: redirect
                consumer_interface: TP_FW_Inf2
            state: present
          register: az_sg2_nm_present

        - name: Assertions check for the add Azure site service graph
          ansible.builtin.assert:
            that:
              - az_sg1_cm_present is changed
              - az_sg1_cm_present.current.serviceGraphRef.serviceGraphName == "SG1"
              - az_sg1_cm_present.current.serviceGraphRef.templateName == "Template3"
              - az_sg1_cm_present.current.serviceNodes | length == 3
              - az_sg1_cm_present.current.serviceNodes.0.device.dn is match("uni/tn-ansible_test/(lDevVip|clb|cld)-ansible_test_firewall1")
              - az_sg1_cm_present.current.serviceNodes.1.device.dn is match("uni/tn-ansible_test/(lDevVip|clb|cld)-ansible_test_app_lb")
              - az_sg1_cm_present.current.serviceNodes.2.device.dn is match("uni/tn-ansible_test/(lDevVip|clb|cld)-ansible_test_other")
              - az_sg1_cm_present.previous.serviceNodes is none
              - az_sg1_cm_present.previous.serviceGraphRef is match("/schemas/.+/templates/Template3/serviceGraphs/SG1")
              - az_sg1_cm_present.proposed.serviceGraphRef.serviceGraphName == "SG1"
              - az_sg1_cm_present.proposed.serviceGraphRef.templateName == "Template3"
              - az_sg1_cm_present.proposed.serviceNodes | length == 3
              - az_sg1_cm_present.proposed.serviceNodes.0.consumerConnectorType == "redir"
              - az_sg1_cm_present.proposed.serviceNodes.0.consumerInterface == "TP_FW_Inf1"
              - az_sg1_cm_present.proposed.serviceNodes.0.device.dn == "uni/tn-ansible_test/cld-ansible_test_firewall1"
              - az_sg1_cm_present.proposed.serviceNodes.0.providerConnectorType == "snat"
              - az_sg1_cm_present.proposed.serviceNodes.0.providerInterface == "TP_FW_Inf1"
              - az_sg1_cm_present.proposed.serviceNodes.0.serviceNodeRef.serviceGraphName == "SG1"
              - az_sg1_cm_present.proposed.serviceNodes.0.serviceNodeRef.serviceNodeName == "node1"
              - az_sg1_cm_present.proposed.serviceNodes.0.serviceNodeRef.templateName == "Template3"
              - az_sg1_cm_present.proposed.serviceNodes.1.device.dn is match("uni/tn-ansible_test/(lDevVip|clb|cld)-ansible_test_app_lb")
              - az_sg1_cm_present.proposed.serviceNodes.2.device.dn is match("uni/tn-ansible_test/(lDevVip|clb|cld)-ansible_test_other")
              - az_sg1_nm_present is changed
              - az_sg1_nm_present.current.serviceGraphRef.serviceGraphName == "SG1"
              - az_sg1_nm_present.current.serviceGraphRef.templateName == "Template3"
              - az_sg1_nm_present.current.serviceNodes | length == 3
              - az_sg1_nm_present.current.serviceNodes.0.device.dn is match("uni/tn-ansible_test/(lDevVip|clb|cld)-ansible_test_firewall1")
              - az_sg1_nm_present.current.serviceNodes.1.device.dn is match("uni/tn-ansible_test/(lDevVip|clb|cld)-ansible_test_app_lb")
              - az_sg1_nm_present.current.serviceNodes.2.device.dn is match("uni/tn-ansible_test/(lDevVip|clb|cld)-ansible_test_other")
              - az_sg1_nm_present.previous.serviceGraphRef is match("/schemas/.+/templates/Template3/serviceGraphs/SG1")
              - az_sg1_nm_present.previous.serviceNodes is none
              - az_sg1_nm_present_again is not changed
              - az_sg1_nm_present_again.current.serviceGraphRef.serviceGraphName == "SG1"
              - az_sg1_nm_present_again.current.serviceGraphRef.templateName == "Template3"
              - az_sg1_nm_present_again.current.serviceNodes | length == 3
              - az_sg1_nm_present_again.current.serviceNodes.0.device.dn is match("uni/tn-ansible_test/(lDevVip|clb|cld)-ansible_test_firewall1")
              - az_sg1_nm_present_again.current.serviceNodes.1.device.dn is match("uni/tn-ansible_test/(lDevVip|clb|cld)-ansible_test_app_lb")
              - az_sg1_nm_present_again.current.serviceNodes.2.device.dn is match("uni/tn-ansible_test/(lDevVip|clb|cld)-ansible_test_other")
              - az_sg1_nm_present_again.previous.serviceGraphRef is match("/schemas/.+/templates/Template3/serviceGraphs/SG1")
              - az_sg1_nm_present_again.previous.serviceNodes | length == 3
              - az_sg1_nm_present_again.previous.serviceNodes.0.device.dn is match("uni/tn-ansible_test/(lDevVip|clb|cld)-ansible_test_firewall1")
              - az_sg1_nm_present_again.previous.serviceNodes.1.device.dn is match("uni/tn-ansible_test/(lDevVip|clb|cld)-ansible_test_app_lb")
              - az_sg1_nm_present_again.previous.serviceNodes.2.device.dn is match("uni/tn-ansible_test/(lDevVip|clb|cld)-ansible_test_other")
              - az_sg2_nm_present is changed
              - az_sg2_nm_present.current.serviceGraphRef.serviceGraphName == "SG2"
              - az_sg2_nm_present.current.serviceGraphRef.templateName == "Template3"
              - az_sg2_nm_present.current.serviceNodes | length == 1
              - az_sg2_nm_present.current.serviceNodes.0.consumerConnectorType == "redir"
              - az_sg2_nm_present.current.serviceNodes.0.consumerInterface == "TP_FW_Inf2"
              - az_sg2_nm_present.current.serviceNodes.0.providerConnectorType == "dnat"
              - az_sg2_nm_present.current.serviceNodes.0.providerInterface == "TP_FW_Inf12"
              - az_sg2_nm_present.current.serviceNodes.0.device.dn is match("uni/tn-ansible_test/(lDevVip|clb|cld)-ansible_test_firewall2")
              - az_sg2_nm_present.current.serviceNodes.0.serviceNodeRef.serviceGraphName == "SG2"
              - az_sg2_nm_present.current.serviceNodes.0.serviceNodeRef.serviceNodeName == "node1"
              - az_sg2_nm_present.current.serviceNodes.0.serviceNodeRef.templateName == "Template3"
              - az_sg2_nm_present.previous.serviceGraphRef is match("/schemas/.+/templates/Template3/serviceGraphs/SG2")
              - az_sg2_nm_present.previous.serviceNodes is none

        - name: Update Service Graph 2 node with ansible_test_app_lb - check_mode # Azure Task
          cisco.mso.mso_schema_site_service_graph: &az_update_sg2_cm
            <<: *az_sg2_nm_present
            service_graph: SG2
            devices:
              - name: ansible_test_app_lb
            state: present
            output_level: debug
          register: az_update_sg2_cm
          check_mode: true

        - name: Update Service Graph 2 node with ansible_test_app_lb - normal_mode # Azure Task
          cisco.mso.mso_schema_site_service_graph:
            <<: *az_update_sg2_cm
            output_level: debug
          register: az_update_sg2_nm

        - name: Update Service Graph 2 node with ansible_test_app_lb - normal_mode again # Azure Task
          cisco.mso.mso_schema_site_service_graph:
            <<: *az_update_sg2_cm
          register: az_update_sg2_nm_again

        - name: Update Service Graph 2 node with ansible_test_app_lb - Negative Test # Azure Task
          cisco.mso.mso_schema_site_service_graph:
            <<: *az_update_sg2_cm
            devices:
              - name: ansible_test_app_lb
                provider_connector_type: destination_nat
                consumer_connector_type: redirect
            state: present
            output_level: debug
          register: nt_ansible_test_app_lb
          ignore_errors: true

        - name: Update Service Graph 2 node with ansible_test_other # Azure Task
          cisco.mso.mso_schema_site_service_graph:
            <<: *az_update_sg2_cm
            devices:
              - name: ansible_test_other
                provider_connector_type: source_and_destination_nat
                consumer_connector_type: none
            state: present
          register: pt_ansible_test_other

        - name: Update Service Graph 2 node with ansible_test_other - Negative Test # Azure Task
          cisco.mso.mso_schema_site_service_graph:
            <<: *az_update_sg2_cm
            devices:
              - name: ansible_test_other
                provider_connector_type: source_and_destination_nat
                consumer_connector_type: none
                consumer_interface: invalid_inf
            state: present
            output_level: debug
          register: nt_ansible_test_other
          ignore_errors: true

        - name: Update Service Graph 2 node with ansible_test_adc # Azure Task
          cisco.mso.mso_schema_site_service_graph:
            <<: *az_update_sg2_cm
            devices:
              - name: ansible_test_adc
                provider_interface: TP_LB_Inf
                consumer_interface: TP_LB_Inf
            state: present
          register: pt_ansible_test_adc

        - name: Assertions check for the update Azure site service graph
          ansible.builtin.assert:
            that:
              - az_update_sg2_cm is changed
              - az_update_sg2_cm.current.serviceGraphRef.serviceGraphName == "SG2"
              - az_update_sg2_cm.current.serviceGraphRef.templateName == "Template3"
              - az_update_sg2_cm.current.serviceNodes | length == 1
              - az_update_sg2_cm.current.serviceNodes.0.device.dn is match("uni/tn-ansible_test/(lDevVip|clb|cld)-ansible_test_app_lb")
              - az_update_sg2_cm.current.serviceNodes.0.device.funcType == "GoTo"
              - az_update_sg2_cm.current.serviceNodes.0.consumerConnectorType is none
              - az_update_sg2_cm.current.serviceNodes.0.consumerInterface is none
              - az_update_sg2_cm.current.serviceNodes.0.providerConnectorType is none
              - az_update_sg2_cm.current.serviceNodes.0.providerInterface is none
              - az_update_sg2_cm.current.serviceNodes.0.serviceNodeRef.serviceGraphName == "SG2"
              - az_update_sg2_cm.current.serviceNodes.0.serviceNodeRef.serviceNodeName == "node1"
              - az_update_sg2_cm.current.serviceNodes.0.serviceNodeRef.templateName == "Template3"
              - az_update_sg2_cm.previous.serviceGraphRef is match("/schemas/.+/templates/Template3/serviceGraphs/SG2")
              - az_update_sg2_cm.previous.serviceNodes | length == 1
              - az_update_sg2_cm.previous.serviceNodes.0.consumerConnectorType == "redir"
              - az_update_sg2_cm.previous.serviceNodes.0.consumerInterface == "TP_FW_Inf2"
              - az_update_sg2_cm.previous.serviceNodes.0.device.dn is match("uni/tn-ansible_test/(lDevVip|clb|cld)-ansible_test_firewall2")
              - az_update_sg2_cm.previous.serviceNodes.0.device.funcType == "GoTo"
              - az_update_sg2_cm.previous.serviceNodes.0.providerConnectorType == "dnat"
              - az_update_sg2_cm.previous.serviceNodes.0.providerInterface == "TP_FW_Inf12"
              - az_update_sg2_cm.previous.serviceNodes.0.serviceNodeRef.serviceGraphName == "SG2"
              - az_update_sg2_cm.previous.serviceNodes.0.serviceNodeRef.serviceNodeName == "node1"
              - az_update_sg2_cm.previous.serviceNodes.0.serviceNodeRef.templateName == "Template3"
              - az_update_sg2_cm.proposed.serviceGraphRef.serviceGraphName == "SG2"
              - az_update_sg2_cm.proposed.serviceGraphRef.templateName == "Template3"
              - az_update_sg2_cm.proposed.serviceNodes | length == 1
              - az_update_sg2_cm.proposed.serviceNodes.0.consumerConnectorType is none
              - az_update_sg2_cm.proposed.serviceNodes.0.consumerInterface is none
              - az_update_sg2_cm.proposed.serviceNodes.0.device.dn is match("uni/tn-ansible_test/(lDevVip|clb|cld)-ansible_test_app_lb")
              - az_update_sg2_cm.proposed.serviceNodes.0.device.funcType == "GoTo"
              - az_update_sg2_cm.proposed.serviceNodes.0.providerConnectorType is none
              - az_update_sg2_cm.proposed.serviceNodes.0.providerInterface is none
              - az_update_sg2_cm.proposed.serviceNodes.0.serviceNodeRef.serviceGraphName == "SG2"
              - az_update_sg2_cm.proposed.serviceNodes.0.serviceNodeRef.serviceNodeName == "node1"
              - az_update_sg2_cm.proposed.serviceNodes.0.serviceNodeRef.templateName == "Template3"
              - az_update_sg2_nm is changed
              - az_update_sg2_nm.current.serviceGraphRef.serviceGraphName == "SG2"
              - az_update_sg2_nm.current.serviceGraphRef.templateName == "Template3"
              - az_update_sg2_nm.current.serviceNodes | length == 1
              - az_update_sg2_nm.current.serviceNodes.0.consumerConnectorType is none
              - az_update_sg2_nm.current.serviceNodes.0.consumerInterface is none
              - az_update_sg2_nm.current.serviceNodes.0.device.dn is match("uni/tn-ansible_test/(lDevVip|clb|cld)-ansible_test_app_lb")
              - az_update_sg2_nm.current.serviceNodes.0.providerConnectorType is none
              - az_update_sg2_nm.current.serviceNodes.0.providerInterface is none
              - az_update_sg2_nm.current.serviceNodes.0.serviceNodeRef.serviceGraphName == "SG2"
              - az_update_sg2_nm.current.serviceNodes.0.serviceNodeRef.serviceNodeName == "node1"
              - az_update_sg2_nm.current.serviceNodes.0.serviceNodeRef.templateName == "Template3"
              - az_update_sg2_nm.previous.serviceGraphRef is match("/schemas/.+/templates/Template3/serviceGraphs/SG2")
              - az_update_sg2_nm.previous.serviceNodes | length == 1
              - az_update_sg2_nm.previous.serviceNodes.0.consumerConnectorType == "redir"
              - az_update_sg2_nm.previous.serviceNodes.0.consumerInterface == "TP_FW_Inf2"
              - az_update_sg2_nm.previous.serviceNodes.0.device.dn is match("uni/tn-ansible_test/(lDevVip|clb|cld)-ansible_test_firewall2")
              - az_update_sg2_nm.previous.serviceNodes.0.device.funcType == "GoTo"
              - az_update_sg2_nm.previous.serviceNodes.0.providerConnectorType == "dnat"
              - az_update_sg2_nm.previous.serviceNodes.0.providerInterface == "TP_FW_Inf12"
              - az_update_sg2_nm.previous.serviceNodes.0.serviceNodeRef.serviceGraphName == "SG2"
              - az_update_sg2_nm.previous.serviceNodes.0.serviceNodeRef.serviceNodeName == "node1"
              - az_update_sg2_nm.previous.serviceNodes.0.serviceNodeRef.templateName == "Template3"
              - az_update_sg2_nm_again is not changed
              - az_update_sg2_nm_again.current.serviceGraphRef.serviceGraphName == "SG2"
              - az_update_sg2_nm_again.current.serviceGraphRef.templateName == "Template3"
              - az_update_sg2_nm_again.current.serviceNodes | length == 1
              - az_update_sg2_nm_again.current.serviceNodes.0.consumerConnectorType is none
              - az_update_sg2_nm_again.current.serviceNodes.0.consumerInterface is none
              - az_update_sg2_nm_again.current.serviceNodes.0.device.dn is match("uni/tn-ansible_test/(lDevVip|clb|cld)-ansible_test_app_lb")
              - az_update_sg2_nm_again.current.serviceNodes.0.providerConnectorType is none
              - az_update_sg2_nm_again.current.serviceNodes.0.providerInterface is none
              - az_update_sg2_nm_again.current.serviceNodes.0.serviceNodeRef.serviceGraphName == "SG2"
              - az_update_sg2_nm_again.current.serviceNodes.0.serviceNodeRef.serviceNodeName == "node1"
              - az_update_sg2_nm_again.current.serviceNodes.0.serviceNodeRef.templateName == "Template3"
              - az_update_sg2_nm_again.previous.serviceGraphRef is match("/schemas/.+/templates/Template3/serviceGraphs/SG2")
              - az_update_sg2_nm_again.previous.serviceNodes.0.device.dn is match("uni/tn-ansible_test/(lDevVip|clb|cld)-ansible_test_app_lb")
              - az_update_sg2_nm_again.previous.serviceNodes.0.serviceNodeRef.serviceGraphName == "SG2"
              - az_update_sg2_nm_again.previous.serviceNodes.0.serviceNodeRef.serviceNodeName == "node1"
              - az_update_sg2_nm_again.previous.serviceNodes.0.serviceNodeRef.templateName == "Template3"
              - pt_ansible_test_adc is changed
              - pt_ansible_test_adc.current.serviceGraphRef
              - pt_ansible_test_adc.current.serviceGraphRef.serviceGraphName == "SG2"
              - pt_ansible_test_adc.current.serviceGraphRef.templateName == "Template3"
              - pt_ansible_test_adc.current.serviceNodes.0.consumerConnectorType is none
              - pt_ansible_test_adc.current.serviceNodes.0.consumerInterface == "TP_LB_Inf"
              - pt_ansible_test_adc.current.serviceNodes.0.device.dn is match("uni/tn-ansible_test/(lDevVip|clb|cld)-ansible_test_adc")
              - pt_ansible_test_adc.current.serviceNodes.0.providerConnectorType is none
              - pt_ansible_test_adc.current.serviceNodes.0.providerInterface == "TP_LB_Inf"
              - pt_ansible_test_adc.current.serviceNodes.0.serviceNodeRef.serviceGraphName ==  "SG2"
              - pt_ansible_test_adc.current.serviceNodes.0.serviceNodeRef.serviceNodeName ==  "node1"
              - pt_ansible_test_adc.current.serviceNodes.0.serviceNodeRef.templateName ==  "Template3"
              - pt_ansible_test_adc.previous.serviceGraphRef is match("/schemas/.+/templates/Template3/serviceGraphs/SG2")
              - pt_ansible_test_adc.previous.serviceNodes.0.consumerConnectorType == "none"
              - pt_ansible_test_adc.previous.serviceNodes.0.device.dn is match("uni/tn-ansible_test/(lDevVip|clb|cld)-ansible_test_other")
              - pt_ansible_test_adc.previous.serviceNodes.0.providerConnectorType == "snat_dnat"
              - pt_ansible_test_adc.previous.serviceNodes.0.serviceNodeRef.serviceGraphName == "SG2"
              - pt_ansible_test_adc.previous.serviceNodes.0.serviceNodeRef.serviceNodeName == "node1"
              - pt_ansible_test_adc.previous.serviceNodes.0.serviceNodeRef.templateName == "Template3"
              - pt_ansible_test_other is changed
              - pt_ansible_test_other.current.serviceGraphRef.serviceGraphName == "SG2"
              - pt_ansible_test_other.current.serviceGraphRef.templateName == "Template3"
              - pt_ansible_test_other.current.serviceNodes.0.consumerConnectorType == "none"
              - pt_ansible_test_other.current.serviceNodes.0.consumerInterface is none
              - pt_ansible_test_other.current.serviceNodes.0.device.dn is match("uni/tn-ansible_test/(lDevVip|clb|cld)-ansible_test_other")
              - pt_ansible_test_other.current.serviceNodes.0.providerConnectorType == "snat_dnat"
              - pt_ansible_test_other.current.serviceNodes.0.providerInterface is none
              - pt_ansible_test_other.current.serviceNodes.0.serviceNodeRef.serviceGraphName == "SG2"
              - pt_ansible_test_other.current.serviceNodes.0.serviceNodeRef.serviceNodeName == "node1"
              - pt_ansible_test_other.current.serviceNodes.0.serviceNodeRef.templateName == "Template3"
              - pt_ansible_test_other.previous.serviceGraphRef is match("/schemas/.+/templates/Template3/serviceGraphs/SG2")
              - pt_ansible_test_other.previous.serviceNodes | length == 1
              - pt_ansible_test_other.previous.serviceNodes.0.device.dn is match("uni/tn-ansible_test/(lDevVip|clb|cld)-ansible_test_app_lb")
              - pt_ansible_test_other.previous.serviceNodes.0.serviceNodeRef.serviceGraphName == "SG2"
              - pt_ansible_test_other.previous.serviceNodes.0.serviceNodeRef.serviceNodeName == "node1"
              - pt_ansible_test_other.previous.serviceNodes.0.serviceNodeRef.templateName == "Template3"

        - name: Update Service Graph 2 node with ansible_test_adc - Negative Test # Azure Task
          cisco.mso.mso_schema_site_service_graph:
            <<: *az_update_sg2_cm
            devices:
              - name: ansible_test_adc
                provider_interface: TP_LB_Inf
                consumer_interface: TP_LB_Inf
                consumer_connector_type: none
            state: present
            output_level: debug
          register: nt_ansible_test_adc
          ignore_errors: true

        - name: Assertions check for the Azure site service graph negative tests
          ansible.builtin.assert:
            that:
              - nt_ansible_test_adc is not changed
              - nt_ansible_test_adc.msg is match("Unsupported attributes{{':'}} provider_connector_type and consumer_connector_type should be 'None' for the Third-Party Load Balancer.")
              - nt_ansible_test_other is not changed
              - nt_ansible_test_other.msg is match("Unsupported attributes{{':'}} provider_interface and consumer_interface should be 'None' for the Network Load Balancer device.")
              - nt_ansible_test_app_lb is not changed
              - nt_ansible_test_app_lb.msg is match("Unsupported attributes{{':'}} provider_connector_type, provider_interface, consumer_connector_type, consumer_interface should be 'None' for the Application Load Balancer device.")

        - name: Query all service graphs at Azure site level # Azure Task
          cisco.mso.mso_schema_site_service_graph: &az_site_sg_query_all
            <<: *mso_info
            schema: '{{ mso_schema | default("ansible_test") }}'
            template: Template3
            site: '{{ mso_site | default("ansible_test") }}'
            tenant: ansible_test
            state: query
          register: az_site_sg_query_all

        - name: Query a service graph with name at Azure site level # Azure Task
          cisco.mso.mso_schema_site_service_graph:
            <<: *az_site_sg_query_all
            service_graph: SG2
            state: query
          register: az_site_sg_query_sg2

        - name: Assertions check for the query Azure site service graph
          ansible.builtin.assert:
            that:
              - az_site_sg_query_all is not changed
              - az_site_sg_query_all.current | length == 2
              - az_site_sg_query_all.current.0.serviceGraphRef is match("/schemas/.+/templates/Template3/serviceGraphs/SG1")
              - az_site_sg_query_all.current.0.serviceNodes | length == 3
              - az_site_sg_query_all.current.0.serviceNodes.0.consumerConnectorType == "redir"
              - az_site_sg_query_all.current.0.serviceNodes.0.consumerInterface == "TP_FW_Inf1"
              - az_site_sg_query_all.current.0.serviceNodes.0.device.dn is match("uni/tn-ansible_test/(lDevVip|clb|cld)-ansible_test_firewall1")
              - az_site_sg_query_all.current.0.serviceNodes.0.device.funcType == "GoTo"
              - az_site_sg_query_all.current.0.serviceNodes.0.providerConnectorType == "snat"
              - az_site_sg_query_all.current.0.serviceNodes.0.providerInterface == "TP_FW_Inf1"
              - az_site_sg_query_all.current.0.serviceNodes.0.serviceNodeRef is match("/schemas/.+/templates/Template3/serviceGraphs/SG1/serviceNodes/node1")
              - az_site_sg_query_all.current.0.serviceNodes.1.device.dn is match("uni/tn-ansible_test/(lDevVip|clb|cld)-ansible_test_app_lb")
              - az_site_sg_query_all.current.0.serviceNodes.1.serviceNodeRef is match("/schemas/.+/templates/Template3/serviceGraphs/SG1/serviceNodes/node2")
              - az_site_sg_query_all.current.0.serviceNodes.2.consumerConnectorType == "redir"
              - az_site_sg_query_all.current.0.serviceNodes.2.device.dn is match("uni/tn-ansible_test/(lDevVip|clb|cld)-ansible_test_other")
              - az_site_sg_query_all.current.0.serviceNodes.2.providerConnectorType == "dnat"
              - az_site_sg_query_all.current.0.serviceNodes.2.serviceNodeRef is match("/schemas/.+/templates/Template3/serviceGraphs/SG1/serviceNodes/node3")
              - az_site_sg_query_sg2 is not changed
              - az_site_sg_query_sg2.current.serviceGraphRef is match("/schemas/.+/templates/Template3/serviceGraphs/SG2")
              - az_site_sg_query_sg2.current.serviceNodes | length == 1
              - az_site_sg_query_sg2.current.serviceNodes.0.consumerInterface == "TP_LB_Inf"
              - az_site_sg_query_sg2.current.serviceNodes.0.device.dn is match("uni/tn-ansible_test/(lDevVip|clb|cld)-ansible_test_adc")
              - az_site_sg_query_sg2.current.serviceNodes.0.device.funcType == "GoTo"
              - az_site_sg_query_sg2.current.serviceNodes.0.providerInterface == "TP_LB_Inf"
              - az_site_sg_query_sg2.current.serviceNodes.0.serviceNodeRef is match("/schemas/.+/templates/Template3/serviceGraphs/SG2/serviceNodes/node1")
    # Azure tests ends

    - name: Query non_existing service graph at site level
      cisco.mso.mso_schema_site_service_graph:
        <<: *mso_info
        schema: '{{ mso_schema | default("ansible_test") }}'
        template: Template1
        site: '{{ mso_site | default("ansible_test") }}'
        service_graph: non_existent
        tenant: ansible_test
        state: query
      ignore_errors: true
      register: query_non_existing_sg

    - name: Verify query_non_existing_sg
      ansible.builtin.assert:
        that:
          - query_non_existing_sg.msg == "Service Graph 'non_existent' not found"

    - name: Use non_existing schema
      cisco.mso.mso_schema_site_service_graph:
        <<: *mso_info
        schema: non_existing_schema
        template: Template1
        service_graph: SG
        tenant: ansible_test
        site: '{{ mso_site | default("ansible_test") }}'
        state: query
      ignore_errors: true
      register: query_non_existing_schema

    - name: Verify non_existing_schema
      ansible.builtin.assert:
        that:
          - query_non_existing_schema is not changed
          - query_non_existing_schema.msg == "Provided schema 'non_existing_schema' does not exist."

    - name: Use non_existing template
      cisco.mso.mso_schema_site_service_graph:
        <<: *mso_info
        schema: '{{ mso_schema | default("ansible_test") }}'
        template: non_existing_template
        service_graph: SG
        tenant: ansible_test
        site: '{{ mso_site | default("ansible_test") }}'
        state: query
      ignore_errors: true
      register: query_non_existing_template

    - name: Verify query_non_existing_template
      ansible.builtin.assert:
        that:
          - query_non_existing_template.msg == "Provided template 'non_existing_template' does not exist. Existing templates{{':'}} Template1, Template2, Template3"

    - name: Use non_existing_site_template
      cisco.mso.mso_schema_site_service_graph:
        <<: *mso_info
        schema: '{{ mso_schema | default("ansible_test") }}'
        site: '{{ mso_site | default("ansible_test") }}'
        service_graph: SG
        template: Template2
        tenant: ansible_test
        state: query
      ignore_errors: true
      register: nm_non_existing_site_template

    - name: Verify cm_non_existing_site_template and nm_non_existing_site_template
      ansible.builtin.assert:
        that:
          - nm_non_existing_site_template is not changed
          - nm_non_existing_site_template.msg is match("Provided site-template association '.+' does not exist.")

    - name: Add site Service Graph to Template2 without any site association
      cisco.mso.mso_schema_site_service_graph:
        <<: *mso_info
        schema: '{{ mso_schema | default("ansible_test") }}_2'
        site: '{{ mso_site | default("ansible_test") }}'
        template: Template1
        service_graph: SG1
        tenant: ansible_test
        devices:
          - name: ansible_test_firewall2
        state: present
      ignore_errors: true
      register: nm_no_site_associated

    - name: Verify nm_no_site_associated
      ansible.builtin.assert:
        that:
          - nm_no_site_associated is not changed
          - nm_no_site_associated.msg == "No site associated with template 'Template1'. Associate the site with the template using mso_schema_site."

    - name: Remove service graph from site level(check mode)
      cisco.mso.mso_schema_site_service_graph:
        <<: *mso_info
        schema: '{{ mso_schema | default("ansible_test") }}'
        template: Template1
        service_graph: SG1
        site: '{{ mso_site | default("ansible_test") }}'
        tenant: ansible_test
        state: absent
      register: rm_sg_cm
      check_mode: true

    - name: Verify rm_sg_cm
      ansible.builtin.assert:
        that:
          - rm_sg_cm is changed
          - rm_sg_cm.current == {}
          - rm_sg_cm.previous.serviceGraphRef is match("/schemas/[0-9a-zA-Z]*/templates/Template1/serviceGraphs/SG1")

    - name: Remove service graph from site level (normal mode)
      cisco.mso.mso_schema_site_service_graph:
        <<: *mso_info
        schema: '{{ mso_schema | default("ansible_test") }}'
        template: Template1
        service_graph: SG1
        tenant: ansible_test
        site: '{{ mso_site | default("ansible_test") }}'
        state: absent
      register: rm_sg

    - name: Verify rm_sg
      ansible.builtin.assert:
        that:
          - rm_sg is changed
          - rm_sg.current == {}
          - rm_sg.previous.serviceGraphRef is match("/schemas/[0-9a-zA-Z]*/templates/Template1/serviceGraphs/SG1")

    - name: Remove service graph again
      cisco.mso.mso_schema_site_service_graph:
        <<: *mso_info
        schema: '{{ mso_schema | default("ansible_test") }}'
        template: Template1
        service_graph: SG1
        tenant: ansible_test
        site: '{{ mso_site | default("ansible_test") }}'
        state: absent
      register: rm_sg_again

    - name: Verify rm_sg_again
      ansible.builtin.assert:
        that:
          - rm_sg_again is not changed
          - rm_sg_again.current == {}
          - rm_sg_again.previous == {}
      when: version.current.version is version('4.0', '<') # no change in NDO4.0 because site will already be present when template is defined

    # To clear the ACI Config
    - name: Set ansible_network_os to cisco.aci.aci and ansible_connection to local
      ansible.builtin.set_fact:
        ansible_connection: local
        ansible_network_os: cisco.aci.aci

    - name: Reset the ansible_connection to access the APIC
      ansible.builtin.meta: reset_connection

    - name: Remove the ansible_test tenant from APIC
      cisco.aci.aci_tenant:
        <<: *aci_info
        name: ansible_test
        state: absent
