# Test code for the MSO modules
# Copyright: (c) 2025, Gaspard Micol (@gmicol) <gmicol@cisco.com>

# GNU General Public License v3.0+ (see LICENSE or https://www.gnu.org/licenses/gpl-3.0.txt)

- name: Test that we have an ACI MultiSite host, username and password
  ansible.builtin.fail:
    msg: "Please define the following variables: mso_hostname, mso_username and mso_password."
  when: mso_hostname is not defined or mso_username is not defined or mso_password is not defined

- name: Set vars
  ansible.builtin.set_fact:
    mso_info: &mso_info
      host: "{{ mso_hostname }}"
      username: "{{ mso_username }}"
      password: "{{ mso_password }}"
      validate_certs: "{{ mso_validate_certs | default(false) }}"
      use_ssl: "{{ mso_use_ssl | default(true) }}"
      use_proxy: "{{ mso_use_proxy | default(true) }}"
      output_level: '{{ mso_output_level | default("debug") }}'

# QUERY VERSION
- name: Query MSO version
  cisco.mso.mso_version:
    <<: *mso_info
    state: query
  register: version

- name: Execute tasks only for NDO version >= 5.1
  when: version.current.version is version('5.1', '>=')
  block:
    # CLEAN TEST ENVIRONMENT
    - name: Ensure Tenant Policy template does not exist
      cisco.mso.ndo_template: &rm_tenant_policy_template
        <<: *mso_info
        template: ansible_tenant_policy_template
        template_type: tenant
        tenant: ansible_test
        state: absent
      ignore_errors: true

    - name: Ensure Tenant does not exist
      cisco.mso.mso_tenant: &rm_tenant
        <<: *mso_info
        tenant: ansible_test
        state: absent

    - name: Ensure Tenant exists
      cisco.mso.mso_tenant:
        <<: *rm_tenant
        state: present

    - name: Ensure Tenant Policy template exists
      cisco.mso.ndo_template:
        <<: *rm_tenant_policy_template
        state: present

    - name: Ensure Match Rule Policy exists
      cisco.mso.ndo_match_rule_policy:
        <<: *mso_info
        template: ansible_tenant_policy_template
        name: ansible_match_rule_policy
        state: present

    # CREATE Match Rule Community Term

    - name: Create Match Rule Community Term (check_mode)
      cisco.mso.ndo_match_rule_community_term: &create_match_community_term
        <<: *mso_info
        template: ansible_tenant_policy_template
        match_rule_policy: ansible_match_rule_policy
        name: ansible_match_community_term_1
        description: Ansible Match Rule Community Term 1
        match_community_list:
          - community: no-export
            scope: transitive
            description: no export and transitive
        state: present
      check_mode: true
      register: cm_create_match_community_term_1
    
    - name: Create Match Rule Community Term
      cisco.mso.ndo_match_rule_community_term:
        <<: *create_match_community_term
      register: nm_create_match_community_term_1

    - name: Create Match Rule Community Term again
      cisco.mso.ndo_match_rule_community_term:
        <<: *create_match_community_term
      register: nm_create_match_community_term_1_again
    
    - name: Create another Match Rule Community Term with minimum configurations
      cisco.mso.ndo_match_rule_community_term:
        <<: *mso_info
        template: ansible_tenant_policy_template
        match_rule_policy: ansible_match_rule_policy
        name: ansible_match_community_term_2
        state: present
      register: nm_create_match_community_term_2

    - name: Assert Match Rule Community Term creation
      ansible.builtin.assert:
        that:
          - cm_create_match_community_term_1 is changed
          - cm_create_match_community_term_1.previous == {}
          - cm_create_match_community_term_1.proposed == cm_create_match_community_term_1.current
          - cm_create_match_community_term_1.current.name == 'ansible_match_community_term_1'
          - cm_create_match_community_term_1.current.description == 'Ansible Match Rule Community Term 1'
          - cm_create_match_community_term_1.current.matchCommunityList | length == 1
          - cm_create_match_community_term_1.current.matchCommunityList.0.community == 'export'
          - cm_create_match_community_term_1.current.matchCommunityList.0.scope == 'transitive'
          - cm_create_match_community_term_1.current.matchCommunityList.0.description == 'no export and transitive'
          - cm_create_match_community_term_1.current.matchRulePolicyName == 'ansible_match_rule_policy'
          - cm_create_match_community_term_1.current.matchRulePolicyUuid is defined
          - cm_create_match_community_term_1.current.templateName == 'ansible_tenant_policy_template'
          - cm_create_match_community_term_1.current.templateId is defined
          - nm_create_match_community_term_1 is changed
          - nm_create_match_community_term_1.previous == {}
          - nm_create_match_community_term_1.proposed.name == 'ansible_match_community_term_1'
          - nm_create_match_community_term_1.proposed.description == 'Ansible Match Rule Community Term 1'
          - nm_create_match_community_term_1.proposed.matchCommunityList | length == 1
          - nm_create_match_community_term_1.proposed.matchCommunityList.0.community == 'export'
          - nm_create_match_community_term_1.proposed.matchCommunityList.0.scope == 'transitive'
          - nm_create_match_community_term_1.proposed.matchCommunityList.0.description == 'no export and transitive'
          - nm_create_match_community_term_1.current.name == 'ansible_match_community_term_1'
          - nm_create_match_community_term_1.current.description == 'Ansible Match Rule Community Term 1'
          - nm_create_match_community_term_1.current.matchCommunityList | length == 1
          - nm_create_match_community_term_1.current.matchCommunityList.0.community == 'export'
          - nm_create_match_community_term_1.current.matchCommunityList.0.scope == 'transitive'
          - nm_create_match_community_term_1.current.matchCommunityList.0.description == 'no export and transitive'
          - nm_create_match_community_term_1.current.matchRulePolicyName == 'ansible_match_rule_policy'
          - nm_create_match_community_term_1.current.matchRulePolicyUuid is defined
          - nm_create_match_community_term_1.current.templateName == 'ansible_tenant_policy_template'
          - nm_create_match_community_term_1.current.templateId is defined
          - nm_create_match_community_term_1_again is not changed
          - nm_create_match_community_term_1_again.previous == nm_create_match_community_term_1_again.current == nm_create_match_community_term_1.current
          - nm_create_match_community_term_2 is changed
          - nm_create_match_community_term_2.previous == {}
          - nm_create_match_community_term_2.proposed.name == 'ansible_match_community_term_2'
          - nm_create_match_community_term_2.proposed.description == ''
          - nm_create_match_community_term_2.proposed.matchCommunityList == []
          - nm_create_match_community_term_2.current.name == 'ansible_match_community_term_2'
          - nm_create_match_community_term_2.current.description == ''
          - nm_create_match_community_term_2.current.matchCommunityList is not defined
          - nm_create_match_community_term_2.current.matchRulePolicyName == 'ansible_match_rule_policy'
          - nm_create_match_community_term_2.current.matchRulePolicyUuid is defined
          - nm_create_match_community_term_2.current.templateName == 'ansible_tenant_policy_template'
          - nm_create_match_community_term_2.current.templateId is defined

    # UPDATE Match Rule Community Term

    - name: Update Match Rule Community Term (check_mode)
      cisco.mso.ndo_match_rule_community_term: &update_match_community_term
        <<: *create_match_community_term
        description: Updated Ansible Match Rule Community Term 1
        match_community_list:
          - community: no-export
            scope: non_transitive
            description: no export and non-transitive
          - community: no-advertise
            scope: transitive
            description: no advertise and transitive
      check_mode: true
      register: cm_update_match_community_term_1
    
    - name: Update Match Rule Community Term
      cisco.mso.ndo_match_rule_community_term:
        <<: *update_match_community_term
      register: nm_update_match_community_term_1
    
    - name: Update Match Rule Community Term again
      cisco.mso.ndo_match_rule_community_term:
        <<: *update_match_community_term
      register: nm_update_match_community_term_1_again

    - name: Update Match Rule Community Term by removing one match community
      cisco.mso.ndo_match_rule_community_term:
        <<: *update_match_community_term
        match_community_list:
          - community: no-advertise
            scope: transitive
            description: no advertise and transitive
      register: nm_update_match_community_term_1_removing_match_community

    - name: Update Match Rule Community Term by removing all match communities
      cisco.mso.ndo_match_rule_community_term:
        <<: *update_match_community_term
        match_community_list: []
      register: nm_update_match_community_term_1_removing_all_match_communities

    - name: Assert Match Rule Community Term update
      ansible.builtin.assert:
        that:
          - cm_update_match_community_term_1 is changed
          - cm_update_match_community_term_1.previous.name == 'ansible_match_community_term_1'
          - cm_update_match_community_term_1.previous.description == 'Ansible Match Rule Community Term 1'
          - cm_update_match_community_term_1.previous.matchCommunityList | length == 1
          - cm_update_match_community_term_1.previous.matchCommunityList.0.community == 'export'
          - cm_update_match_community_term_1.previous.matchCommunityList.0.scope == 'transitive'
          - cm_update_match_community_term_1.previous.matchCommunityList.0.description == 'no export and transitive'
          - cm_update_match_community_term_1.previous.matchRulePolicyName == 'ansible_match_rule_policy'
          - cm_update_match_community_term_1.previous.matchRulePolicyUuid is defined
          - cm_update_match_community_term_1.previous.templateName == 'ansible_tenant_policy_template'
          - cm_update_match_community_term_1.previous.templateId is defined
          - cm_update_match_community_term_1.proposed == cm_update_match_community_term_1.current
          - cm_update_match_community_term_1.current.name == 'ansible_match_community_term_1'
          - cm_update_match_community_term_1.current.description == 'Updated Ansible Match Rule Community Term 1'
          - cm_update_match_community_term_1.current.matchCommunityList | length == 2
          - cm_update_match_community_term_1.current.matchCommunityList.0.community == 'export'
          - cm_update_match_community_term_1.current.matchCommunityList.0.scope == 'non-transitive'
          - cm_update_match_community_term_1.current.matchCommunityList.0.description == 'no export and non-transitive'
          - cm_update_match_community_term_1.current.matchCommunityList.1.community == 'no-advertise'
          - cm_update_match_community_term_1.current.matchCommunityList.1.scope == 'transitive'
          - cm_update_match_community_term_1.current.matchCommunityList.1.description == 'no advertise and transitive'
          - cm_update_match_community_term_1.current.matchRulePolicyName == 'ansible_match_rule_policy'
          - cm_update_match_community_term_1.current.matchRulePolicyUuid is defined
          - cm_update_match_community_term_1.current.templateName == 'ansible_tenant_policy_template'
          - cm_update_match_community_term_1.current.templateId is defined
          - nm_update_match_community_term_1 is changed
          - nm_update_match_community_term_1.previous.name == 'ansible_match_community_term_1'
          - nm_update_match_community_term_1.previous.description == 'Ansible Match Rule Community Term 1'
          - nm_update_match_community_term_1.previous.matchCommunityList | length == 1
          - nm_update_match_community_term_1.previous.matchCommunityList.0.community == 'export'
          - nm_update_match_community_term_1.previous.matchCommunityList.0.scope == 'transitive'
          - nm_update_match_community_term_1.previous.matchCommunityList.0.description == 'no export and transitive'
          - nm_update_match_community_term_1.previous.matchRulePolicyName == 'ansible_match_rule_policy'
          - nm_update_match_community_term_1.previous.matchRulePolicyUuid is defined
          - nm_update_match_community_term_1.previous.templateName == 'ansible_tenant_policy_template'
          - nm_update_match_community_term_1.previous.templateId is defined
          - nm_update_match_community_term_1.proposed.name == 'ansible_match_community_term_1'
          - nm_update_match_community_term_1.proposed.description == 'Updated Ansible Match Rule Community Term 1'
          - nm_update_match_community_term_1.proposed.matchCommunityList | length == 2
          - nm_update_match_community_term_1.proposed.matchCommunityList.0.community == 'export'
          - nm_update_match_community_term_1.proposed.matchCommunityList.0.scope == 'non-transitive'
          - nm_update_match_community_term_1.proposed.matchCommunityList.0.description == 'no export and non-transitive'
          - nm_update_match_community_term_1.proposed.matchCommunityList.1.community == 'no-advertise'
          - nm_update_match_community_term_1.proposed.matchCommunityList.1.scope == 'transitive'
          - nm_update_match_community_term_1.proposed.matchCommunityList.1.description == 'no advertise and transitive'
          - nm_update_match_community_term_1.current.name == 'ansible_match_community_term_1'
          - nm_update_match_community_term_1.current.description == 'Updated Ansible Match Rule Community Term 1'
          - nm_update_match_community_term_1.current.matchCommunityList | length == 2
          - nm_update_match_community_term_1.current.matchCommunityList.0.community == 'export'
          - nm_update_match_community_term_1.current.matchCommunityList.0.scope == 'non-transitive'
          - nm_update_match_community_term_1.current.matchCommunityList.0.description == 'no export and non-transitive'
          - nm_update_match_community_term_1.current.matchCommunityList.1.community == 'no-advertise'
          - nm_update_match_community_term_1.current.matchCommunityList.1.scope == 'transitive'
          - nm_update_match_community_term_1.current.matchCommunityList.1.description == 'no advertise and transitive'
          - nm_update_match_community_term_1.current.matchRulePolicyName == 'ansible_match_rule_policy'
          - nm_update_match_community_term_1.current.matchRulePolicyUuid is defined
          - nm_update_match_community_term_1.current.templateName == 'ansible_tenant_policy_template'
          - nm_update_match_community_term_1.current.templateId is defined
          - nm_update_match_community_term_1_again is not changed
          - nm_update_match_community_term_1_again.previous == nm_update_match_community_term_1_again.current == nm_update_match_community_term_1.current
          - nm_update_match_community_term_1_removing_match_community is changed
          - nm_update_match_community_term_1_removing_match_community.previous.name == 'ansible_match_community_term_1'
          - nm_update_match_community_term_1_removing_match_community.previous.description == 'Updated Ansible Match Rule Community Term 1'
          - nm_update_match_community_term_1_removing_match_community.previous.matchCommunityList | length == 2
          - nm_update_match_community_term_1_removing_match_community.previous.matchCommunityList.0.community == 'export'
          - nm_update_match_community_term_1_removing_match_community.previous.matchCommunityList.0.scope == 'non-transitive'
          - nm_update_match_community_term_1_removing_match_community.previous.matchCommunityList.0.description == 'no export and non-transitive'
          - nm_update_match_community_term_1_removing_match_community.previous.matchCommunityList.1.community == 'no-advertise'
          - nm_update_match_community_term_1_removing_match_community.previous.matchCommunityList.1.scope == 'transitive'
          - nm_update_match_community_term_1_removing_match_community.previous.matchCommunityList.1.description == 'no advertise and transitive'
          - nm_update_match_community_term_1_removing_match_community.previous.matchRulePolicyName == 'ansible_match_rule_policy'
          - nm_update_match_community_term_1_removing_match_community.previous.matchRulePolicyUuid is defined
          - nm_update_match_community_term_1_removing_match_community.previous.templateName == 'ansible_tenant_policy_template'
          - nm_update_match_community_term_1_removing_match_community.previous.templateId is defined
          - nm_update_match_community_term_1_removing_match_community.proposed.name == 'ansible_match_community_term_1'
          - nm_update_match_community_term_1_removing_match_community.proposed.description == 'Updated Ansible Match Rule Community Term 1'
          - nm_update_match_community_term_1_removing_match_community.proposed.matchCommunityList | length == 1
          - nm_update_match_community_term_1_removing_match_community.proposed.matchCommunityList.0.community == 'no-advertise'
          - nm_update_match_community_term_1_removing_match_community.proposed.matchCommunityList.0.scope == 'transitive'
          - nm_update_match_community_term_1_removing_match_community.proposed.matchCommunityList.0.description == 'no advertise and transitive'
          - nm_update_match_community_term_1_removing_match_community.current.name == 'ansible_match_community_term_1'
          - nm_update_match_community_term_1_removing_match_community.current.description == 'Updated Ansible Match Rule Community Term 1'
          - nm_update_match_community_term_1_removing_match_community.current.matchCommunityList | length == 1
          - nm_update_match_community_term_1_removing_match_community.current.matchCommunityList.0.community == 'no-advertise'
          - nm_update_match_community_term_1_removing_match_community.current.matchCommunityList.0.scope == 'transitive'
          - nm_update_match_community_term_1_removing_match_community.current.matchCommunityList.0.description == 'no advertise and transitive'
          - nm_update_match_community_term_1_removing_match_community.current.matchRulePolicyName == 'ansible_match_rule_policy'
          - nm_update_match_community_term_1_removing_match_community.current.matchRulePolicyUuid is defined
          - nm_update_match_community_term_1_removing_match_community.current.templateName == 'ansible_tenant_policy_template'
          - nm_update_match_community_term_1_removing_match_community.current.templateId is defined
          - nm_update_match_community_term_1_removing_all_match_communities is changed
          - nm_update_match_community_term_1_removing_all_match_communities.previous.name == 'ansible_match_community_term_1'
          - nm_update_match_community_term_1_removing_all_match_communities.previous.description == 'Updated Ansible Match Rule Community Term 1'
          - nm_update_match_community_term_1_removing_all_match_communities.current.matchCommunityList | length == 1
          - nm_update_match_community_term_1_removing_all_match_communities.previous.matchCommunityList.0.community == 'no-advertise'
          - nm_update_match_community_term_1_removing_all_match_communities.previous.matchCommunityList.0.scope == 'transitive'
          - nm_update_match_community_term_1_removing_all_match_communities.previous.matchCommunityList.0.description == 'no advertise and transitive'
          - nm_update_match_community_term_1_removing_all_match_communities.previous.matchRulePolicyName == 'ansible_match_rule_policy'
          - nm_update_match_community_term_1_removing_all_match_communities.previous.matchRulePolicyUuid is defined
          - nm_update_match_community_term_1_removing_all_match_communities.previous.templateName == 'ansible_tenant_policy_template'
          - nm_update_match_community_term_1_removing_all_match_communities.previous.templateId is defined
          - nm_update_match_community_term_1_removing_all_match_communities.proposed.name == 'ansible_match_community_term_1'
          - nm_update_match_community_term_1_removing_all_match_communities.proposed.description == 'Updated Ansible Match Rule Community Term 1'
          - nm_update_match_community_term_1_removing_all_match_communities.proposed.matchCommunityList == []
          - nm_update_match_community_term_1_removing_all_match_communities.current.name == 'ansible_match_community_term_1'
          - nm_update_match_community_term_1_removing_all_match_communities.current.description == 'Updated Ansible Match Rule Community Term 1'
          - nm_update_match_community_term_1_removing_all_match_communities.current.matchCommunityList is not defined
          - nm_update_match_community_term_1_removing_all_match_communities.current.matchRulePolicyName == 'ansible_match_rule_policy'
          - nm_update_match_community_term_1_removing_all_match_communities.current.matchRulePolicyUuid is defined
          - nm_update_match_community_term_1_removing_all_match_communities.current.templateName == 'ansible_tenant_policy_template'
          - nm_update_match_community_term_1_removing_all_match_communities.current.templateId is defined

    # QUERY Match Rule Community Term

    - name: Query Match Rule Community Term
      cisco.mso.ndo_match_rule_community_term:
        <<: *create_match_community_term
        state: query
      register: query_match_community_term_1

    - name: Query all Match Rule Community Terms in Match Rule Policy
      cisco.mso.ndo_match_rule_community_term:
        <<: *mso_info
        template: ansible_tenant_policy_template
        match_rule_policy: ansible_match_rule_policy
        state: query
      register: query_all_match_community_terms

    - name: Assert Match Rule Community Term query
      ansible.builtin.assert:
        that:
          - query_match_community_term_1 is not changed
          - query_match_community_term_1.current.name == 'ansible_match_community_term_1'
          - query_match_community_term_1.current.matchRulePolicyName == 'ansible_match_rule_policy'
          - query_match_community_term_1.current.matchRulePolicyUuid is defined
          - query_match_community_term_1.current.templateName == 'ansible_tenant_policy_template'
          - query_match_community_term_1.current.templateId is defined
          - query_all_match_community_terms is not changed
          - query_all_match_community_terms.current | length == 2
          - query_all_match_community_terms.current.0.name == 'ansible_match_community_term_1'
          - query_all_match_community_terms.current.0.matchRulePolicyName == 'ansible_match_rule_policy'
          - query_all_match_community_terms.current.0.description == 'Updated Ansible Match Rule Community Term 1'
          - query_all_match_community_terms.current.0.matchCommunityList is not defined
          - query_all_match_community_terms.current.0.matchRulePolicyUuid is defined
          - query_all_match_community_terms.current.0.templateName == 'ansible_tenant_policy_template'
          - query_all_match_community_terms.current.0.templateId is defined
          - query_all_match_community_terms.current.1.name == 'ansible_match_community_term_2'
          - query_all_match_community_terms.current.1.description == ''
          - query_all_match_community_terms.current.1.matchCommunityList is not defined
          - query_all_match_community_terms.current.1.matchRulePolicyName == 'ansible_match_rule_policy'
          - query_all_match_community_terms.current.1.matchRulePolicyUuid is defined
          - query_all_match_community_terms.current.1.templateName == 'ansible_tenant_policy_template'
          - query_all_match_community_terms.current.1.templateId is defined

    # DELETE Match Rule Community Term

    - name: Delete Match Rule Community Term (check_mode)
      cisco.mso.ndo_match_rule_community_term: &delete_match_community_term
        <<: *create_match_community_term
        state: absent
      check_mode: true
      register: cm_delete_match_community_term_1

    - name: Delete Match Rule Community Term
      cisco.mso.ndo_match_rule_community_term:
        <<: *delete_match_community_term
      register: nm_delete_match_community_term_1

    - name: Delete Match Rule Community Term again
      cisco.mso.ndo_match_rule_community_term:
        <<: *delete_match_community_term
      register: nm_delete_match_community_term_1_again

    - name: Assert Match Rule Community Term deletion
      ansible.builtin.assert:
        that:
          - cm_delete_match_community_term_1 is changed
          - cm_delete_match_community_term_1.previous.name == 'ansible_match_community_term_1'
          - cm_delete_match_community_term_1.previous.description == 'Updated Ansible Match Rule Community Term 1'
          - cm_delete_match_community_term_1.previous.matchCommunityList is not defined
          - cm_delete_match_community_term_1.previous.matchRulePolicyName == 'ansible_match_rule_policy'
          - cm_delete_match_community_term_1.previous.matchRulePolicyUuid is defined
          - cm_delete_match_community_term_1.previous.templateName == 'ansible_tenant_policy_template'
          - cm_delete_match_community_term_1.previous.templateId is defined
          - cm_delete_match_community_term_1.proposed == {}
          - cm_delete_match_community_term_1.current == {}
          - nm_delete_match_community_term_1 is changed
          - nm_delete_match_community_term_1.previous.name == 'ansible_match_community_term_1'
          - nm_delete_match_community_term_1.previous.description == 'Updated Ansible Match Rule Community Term 1'
          - nm_delete_match_community_term_1.previous.matchCommunityList is not defined
          - nm_delete_match_community_term_1.previous.matchRulePolicyName == 'ansible_match_rule_policy'
          - nm_delete_match_community_term_1.previous.matchRulePolicyUuid is defined
          - nm_delete_match_community_term_1.previous.templateName == 'ansible_tenant_policy_template'
          - nm_delete_match_community_term_1.previous.templateId is defined
          - nm_delete_match_community_term_1.proposed == {}
          - nm_delete_match_community_term_1.current == {}
          - nm_delete_match_community_term_1_again is not changed
          - nm_delete_match_community_term_1_again.previous == nm_delete_match_community_term_1_again.current == nm_delete_match_community_term_1.current

    # CLEAN TEST ENVIRONMENT

    - name: Ensure Tenant Policy template does not exist
      cisco.mso.ndo_template:
        <<: *rm_tenant_policy_template
    
    - name: Ensure Tenant does not exist
      cisco.mso.mso_tenant:
        <<: *rm_tenant
