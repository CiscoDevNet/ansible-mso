# Test code for the MSO modules
# Copyright: (c) 2025, Sabari Jaganathan (@sajagana) <sajagana@cisco.com>

# GNU General Public License v3.0+ (see LICENSE or https://www.gnu.org/licenses/gpl-3.0.txt)

- name: Test that we have an ACI MultiSite host, username and password
  ansible.builtin.fail:
    msg: "Please define the following variables: mso_hostname, mso_username and mso_password."
  when: mso_hostname is not defined or mso_username is not defined or mso_password is not defined

# CLEAN ENVIRONMENT
- name: Set vars
  ansible.builtin.set_fact:
    mso_info: &mso_info
      host: "{{ mso_hostname }}"
      username: "{{ mso_username }}"
      password: "{{ mso_password }}"
      validate_certs: "{{ mso_validate_certs | default(false) }}"
      use_ssl: "{{ mso_use_ssl | default(true) }}"
      use_proxy: "{{ mso_use_proxy | default(true) }}"
      output_level: '{{ mso_output_level | default("debug") }}'

# QUERY VERSION
- name: Query MSO version
  cisco.mso.mso_version:
    <<: *mso_info
    state: query
  register: version

- name: Execute tasks only for NDO version >= 4.3
  when: version.current.version is version('4.3', '>=')
  block:
    # Setup Part
    - name: Ensure ansible_test site exist
      cisco.mso.mso_site:
        <<: *mso_info
        site: '{{ mso_site | default("ansible_test") }}'
        state: query
      register: ansible_test_site

    - name: Ensure ansible_test tenant exist
      cisco.mso.mso_tenant:
        <<: *mso_info
        tenant: '{{ mso_tenant | default("ansible_test") }}'
        users:
          - '{{ mso_username }}'
        sites:
          - '{{ mso_site | default("ansible_test") }}'
        state: present

    - name: Ensure l3out template not exist
      cisco.mso.ndo_template: &ndo_l3out_template_absent
        <<: *mso_info
        template: '{{ mso_l3out_template | default("ansible_test") }}'
        template_type: l3out
        tenant: '{{ mso_tenant | default("ansible_test") }}'
        sites:
          - name: '{{ mso_site | default("ansible_test") }}'
        state: absent

    - name: Ensure ansible_fabric_resource_template does not exist
      cisco.mso.ndo_template: &ndo_fabric_resource_template_absent
        <<: *mso_info
        name: '{{ mso_fabric_resource_template | default("ansible_test") }}'
        template_type: fabric_resource
        sites:
          - name: '{{ mso_site | default("ansible_test") }}'
        state: absent

    - name: Ensure ansible_fabric_policy_template does not exist
      cisco.mso.ndo_template: &ndo_fabric_policy_template_absent
        <<: *mso_info
        name: '{{ mso_fabric_policy_template | default("ansible_test") }}'
        template_type: fabric_policy
        sites:
          - name: '{{ mso_site | default("ansible_test") }}'
        state: absent

    - name: Ensure ansible_test_policy tenant policy template not exists
      cisco.mso.ndo_template: &tenant_pol_template_absent
        <<: *mso_info
        name: ansible_test_policy
        template_type: tenant
        tenant: '{{ mso_tenant | default("ansible_test") }}'
        state: absent

    - name: Ensure ansible_test schema template not exist
      cisco.mso.mso_schema_template: &mso_schema_template_absent
        <<: *mso_info
        schema: '{{ mso_schema | default("ansible_test") }}'
        tenant: '{{ mso_tenant | default("ansible_test") }}'
        template: "Template1"
        state: absent

    # Schema Template Setup for the VRF
    - name: Add an ansible_test schema template
      cisco.mso.mso_schema_template:
        <<: *mso_schema_template_absent
        state: present

    - name: Add a new VRF1
      cisco.mso.mso_schema_template_vrf:
        <<: *mso_info
        schema: '{{ mso_schema | default("ansible_test") }}'
        template: "Template1"
        vrf: VRF1
        layer3_multicast: true
        state: present

    # Tenant Policy Template Setup for the L3Out Node Routing Policy
    - name: Ensure ansible_test_policy tenant policy template exists
      cisco.mso.ndo_template:
        <<: *tenant_pol_template_absent
        state: present
      register: ansible_test_policy

    - name: Create BGP Peer Prefix Policy
      cisco.mso.ndo_tenant_bgp_peer_prefix_policy:
        <<: *mso_info
        template: ansible_test_policy
        name: "{{ item }}"
        state: present
      register: bgp_peer_prefix_policy
      loop:
        - ansible_test_bgp_peer_prefix_policy
        - ansible_test_bgp_peer_prefix_policy_1

    # Fabric Policy Template Setup
    - name: Create a fabric_policy template
      cisco.mso.ndo_template:
        <<: *ndo_fabric_policy_template_absent
        state: present

    - name: Create a VLAN pool in the fabric_policy template
      cisco.mso.ndo_vlan_pool:
        <<: *mso_info
        template: '{{ mso_fabric_policy_template | default("ansible_test") }}'
        vlan_pool: ansible_test_vlan_pool_1
        vlan_ranges:
          - from_vlan: 100
            to_vlan: 200
        state: present

    - name: Create a L3 domain in the fabric_policy template
      cisco.mso.ndo_l3_domain:
        <<: *mso_info
        template: '{{ mso_fabric_policy_template | default("ansible_test") }}'
        l3_domain: ansible_test_l3_domain
        pool: ansible_test_vlan_pool_1
        state: present

    - name: Create a interface policy group of type port channel
      cisco.mso.ndo_interface_setting:
        <<: *mso_info
        template: '{{ mso_fabric_policy_template | default("ansible_test") }}'
        name: ansible_test_interface_policy_group_port_channel
        interface_type: port_channel
        state: present

    # Tenant Resource Template Setup
    - name: Create a fabric_resource template
      cisco.mso.ndo_template:
        <<: *ndo_fabric_resource_template_absent
        state: present

    - name: Create port_channel_interface_1 in the fabric_resource template
      cisco.mso.ndo_port_channel_interface:
        <<: *mso_info
        template: '{{ mso_fabric_resource_template | default("ansible_test") }}'
        port_channel_interface: ansible_port_channel_interface_1
        node: 101
        interfaces: 1/20
        interface_policy_group:
          template: '{{ mso_fabric_policy_template | default("ansible_test") }}'
          name: ansible_test_interface_policy_group_port_channel
        state: present
      register: port_channel_interface_1

    - name: Create ansible_virtual_port_channel_interface_1 in the fabric_resource template
      cisco.mso.ndo_virtual_port_channel_interface:
        <<: *mso_info
        template: '{{ mso_fabric_resource_template | default("ansible_test") }}'
        name: ansible_virtual_port_channel_interface_1
        node_1: 101
        node_2: 102
        interfaces_node_1:
          - 1/21
        interfaces_node_2:
          - 1/21
        interface_policy_group:
          template: '{{ mso_fabric_policy_template | default("ansible_test") }}'
          name: ansible_test_interface_policy_group_port_channel
        state: present
      register: virtual_port_channel_interface_1

    # L3Out Template Setup
    - name: Create a new l3out template
      cisco.mso.ndo_template:
        <<: *ndo_l3out_template_absent
        state: present
      register: create_new_l3out_policy_template

    - name: Query l3out template
      cisco.mso.ndo_template:
        <<: *ndo_l3out_template_absent
        state: present
      register: query_l3out_policy_template

    - name: Create l3out_1 object with bgp routing protocol
      cisco.mso.ndo_l3out_template:
        <<: *mso_info
        l3out_template: '{{ mso_l3out_template | default("ansible_test") }}'
        name: "l3out_1"
        vrf:
          name: "VRF1"
          schema: '{{ mso_schema | default("ansible_test") }}'
          template: "Template1"
        l3_domain: ansible_test_l3_domain
        bgp:
          state: enabled
        state: "present"
      register: create_l3out_1

    - name: Create L3Out node group policy
      cisco.mso.ndo_l3out_node_group_policy:
        <<: *mso_info
        template: '{{ mso_l3out_template | default("ansible_test") }}'
        l3out: "l3out_1"
        name: "node_group_policy_1"
        state: present

    - name: Add a new Route Map Policy for Route Control (<5.0)
      cisco.mso.mso_rest:
        <<: *mso_info
        path: "/mso/api/v1/templates/{{ ansible_test_policy.current.templateId }}"
        method: patch
        content:
          - op: add
            path: "/tenantPolicyTemplate/template/routeMapPolicies/-"
            value:
              name: "{{ item }}"
              description: ""
              rtMapEntryList:
                - rtMapContext:
                    order: 0
                    name: ctxName
                    action: permit
      loop:
        - ans_route_map
        - ans_route_map_2
      when: version.current.version is version('5.0', '<')

    - name: Add a new Route Map Policy for Route Control (>=5.0)
      cisco.mso.mso_rest:
        <<: *mso_info
        path: "/mso/api/v1/templates/{{ ansible_test_policy.current.templateId }}"
        method: patch
        content:
          - op: add
            path: "/tenantPolicyTemplate/template/routeMapPolicies/-"
            value:
              name: "{{ item }}"
              description: ""
              contexts:
                - order: 0
                  name: ctxName
                  action: permit
      loop:
        - ans_route_map
        - ans_route_map_2
      when: version.current.version is version('5.0', '>=')

    - name: Query Tenant Policy template
      cisco.mso.ndo_template:
        <<: *mso_info
        template_type: tenant
        template: ansible_test_policy
        state: query
      register: tenant_pol_template

    # CREATE
    - name: Create L3Out BGP Peer minimum config (check_mode)
      cisco.mso.ndo_l3out_bgp_peer: &cm_bgp_peer_ipv4_present
        <<: *mso_info
        template: '{{ mso_l3out_template | default("ansible_test") }}'
        l3out: "l3out_1"
        node_group: "node_group_policy_1"
        ipv4_address: "1.1.1.1"
        auth_password: 123
        state: present
        output_level: debug
      check_mode: true
      register: cm_bgp_peer_ipv4_present

    - name: Create L3Out BGP Peer minimum config
      cisco.mso.ndo_l3out_bgp_peer:
        <<: *cm_bgp_peer_ipv4_present
      register: nm_bgp_peer_ipv4_present

    - name: Create L3Out BGP Peer minimum config again
      cisco.mso.ndo_l3out_bgp_peer:
        <<: *cm_bgp_peer_ipv4_present
      register: nm_bgp_peer_ipv4_present_again

    - name: Assertion check for create L3Out BGP Peer minimum config
      ansible.builtin.assert:
        that:
          - cm_bgp_peer_ipv4_present is changed
          - cm_bgp_peer_ipv4_present.current.authEnabled == true
          - cm_bgp_peer_ipv4_present.current.password.value == "VALUE_SPECIFIED_IN_NO_LOG_PARAMETER"
          - cm_bgp_peer_ipv4_present.current.peerAddressV4 == "1.1.1.1"
          - cm_bgp_peer_ipv4_present.current.templateId != ""
          - cm_bgp_peer_ipv4_present.current.templateName is defined
          - cm_bgp_peer_ipv4_present.current.nodeGroupName == "node_group_policy_1"
          - cm_bgp_peer_ipv4_present.previous == {}
          - cm_bgp_peer_ipv4_present.proposed.authEnabled == true
          - cm_bgp_peer_ipv4_present.proposed.password.value == "VALUE_SPECIFIED_IN_NO_LOG_PARAMETER"
          - cm_bgp_peer_ipv4_present.proposed.peerAddressV4 == "1.1.1.1"
          - cm_bgp_peer_ipv4_present.proposed.templateId != ""
          - cm_bgp_peer_ipv4_present.proposed.templateName is defined
          - cm_bgp_peer_ipv4_present.proposed.nodeGroupName == "node_group_policy_1"
          - nm_bgp_peer_ipv4_present is changed
          - nm_bgp_peer_ipv4_present.current.adminState == "enabled"
          - nm_bgp_peer_ipv4_present.current.allowedSelfASCount == 3
          - nm_bgp_peer_ipv4_present.current.authEnabled == true
          - nm_bgp_peer_ipv4_present.current.ebpgMultiHopTTL == 1
          - nm_bgp_peer_ipv4_present.current.peerAddressV4 == "1.1.1.1"
          - nm_bgp_peer_ipv4_present.current.templateId != ""
          - nm_bgp_peer_ipv4_present.current.templateName is defined
          - nm_bgp_peer_ipv4_present.current.nodeGroupName == "node_group_policy_1"
          - nm_bgp_peer_ipv4_present.previous == {}
          - nm_bgp_peer_ipv4_present_again is not changed
          - nm_bgp_peer_ipv4_present_again.current.adminState == "enabled"
          - nm_bgp_peer_ipv4_present_again.current.allowedSelfASCount == 3
          - nm_bgp_peer_ipv4_present_again.current.authEnabled == true
          - nm_bgp_peer_ipv4_present_again.current.ebpgMultiHopTTL == 1
          - nm_bgp_peer_ipv4_present_again.current.peerAddressV4 == "1.1.1.1"
          - nm_bgp_peer_ipv4_present_again.current.templateId != ""
          - nm_bgp_peer_ipv4_present_again.current.templateName is defined
          - nm_bgp_peer_ipv4_present_again.current.nodeGroupName == "node_group_policy_1"
          - nm_bgp_peer_ipv4_present_again.previous.adminState == "enabled"
          - nm_bgp_peer_ipv4_present_again.previous.allowedSelfASCount == 3
          - nm_bgp_peer_ipv4_present_again.previous.authEnabled == true
          - nm_bgp_peer_ipv4_present_again.previous.ebpgMultiHopTTL == 1
          - nm_bgp_peer_ipv4_present_again.previous.peerAddressV4 == "1.1.1.1"
          - nm_bgp_peer_ipv4_present_again.previous.templateId != ""
          - nm_bgp_peer_ipv4_present_again.previous.templateName is defined
          - nm_bgp_peer_ipv4_present_again.previous.nodeGroupName is defined

    # CREATE WITH DIFFERENT COMBINATIONS
    - name: Create L3Out BGP Peer full config using only ipv6
      cisco.mso.ndo_l3out_bgp_peer: &add_ipv6_bgp_peer
        <<: *mso_info
        template: '{{ mso_l3out_template | default("ansible_test") }}'
        l3out: "l3out_1"
        node_group: "node_group_policy_1"
        ipv6_address: "1::8/16"
        remote_asn: 2
        admin_state: enabled
        import_route_map:
          name: ans_route_map
          template: ansible_test_policy
        export_route_map:
          name: ans_route_map_2
          template: ansible_test_policy
        peer_prefix:
          name: ansible_test_bgp_peer_prefix_policy
          template_id: "{{ ansible_test_policy.current.templateId }}"
        ebgp_multi_hop_ttl: 1
        auth_password: 123
        weight: 2
        site_of_origin: "extended:as2-nn2:1000:65534"
        allowed_self_as_count: 3
        local_asn_config: replace_as
        local_asn: 1
        bgp_controls:
          allow_self_as: true
          override_as: true
          disabled_peer_as_check: true
          next_hop_self: true
          send_community: true
          send_extended_community: true
          send_domain_path: true
        peer_controls:
          bfd: true
          disable_peer_connected_check: true
        address_families:
          multicast: true
          unicast: true
        private_as_controls:
          remove_all: true
          replace_with_local_as: true
        state: present
      register: add_ipv6_bgp_peer

    - name: Create L3Out BGP Peer minimum config with IPv4 and IPv6 address
      cisco.mso.ndo_l3out_bgp_peer:
        <<: *mso_info
        template: '{{ mso_l3out_template | default("ansible_test") }}'
        l3out: "l3out_1"
        node_group: "node_group_policy_1"
        ipv4_address: "5.5.5.5"
        ipv6_address: "1::19/16"
        state: present
      register: add_ipv4_ipv6_addr

    - name: Query a specific L3Out BGP Peer object with IPv4 and IPv6 address
      cisco.mso.ndo_l3out_bgp_peer:
        <<: *mso_info
        template: '{{ mso_l3out_template | default("ansible_test") }}'
        l3out: "l3out_1"
        node_group: "node_group_policy_1"
        ipv4_address: "5.5.5.5"
        ipv6_address: "1::19/16"
        state: query
      register: query_ipv4_ipv6_addr

    - name: Query a specific L3Out BGP Peer object with IPv6 address
      cisco.mso.ndo_l3out_bgp_peer:
        <<: *mso_info
        template: '{{ mso_l3out_template | default("ansible_test") }}'
        l3out: "l3out_1"
        node_group: "node_group_policy_1"
        ipv6_address: "1::19/16"
        state: query
      register: query_ipv6_addr

    - name: Query a specific L3Out BGP Peer object with IPv4 address
      cisco.mso.ndo_l3out_bgp_peer:
        <<: *mso_info
        template: '{{ mso_l3out_template | default("ansible_test") }}'
        l3out: "l3out_1"
        node_group: "node_group_policy_1"
        ipv4_address: "5.5.5.5"
        state: query
      register: query_ipv4_addr

    - name: Create L3Out BGP Peer using route map and peer prefix object UUIDs (check_mode)
      cisco.mso.ndo_l3out_bgp_peer:
        <<: *mso_info
        template: '{{ mso_l3out_template | default("ansible_test") }}'
        l3out: "l3out_1"
        node_group: "node_group_policy_1"
        ipv6_address: "1::20/16"
        import_route_map_uuid: "{{ tenant_pol_template.current.tenantPolicyTemplate.template.routeMapPolicies.0.uuid }}"
        export_route_map_uuid: "{{ tenant_pol_template.current.tenantPolicyTemplate.template.routeMapPolicies.1.uuid }}"
        peer_prefix_uuid: "{{ tenant_pol_template.current.tenantPolicyTemplate.template.bgpPeerPrefixPolicies.0.uuid }}"
        state: present
      check_mode: true
      register: cm_add_ipv6_bgp_peer_with_obj_uuid

    - name: Create L3Out BGP Peer using route map and peer prefix object UUIDs
      cisco.mso.ndo_l3out_bgp_peer:
        <<: *mso_info
        template: '{{ mso_l3out_template | default("ansible_test") }}'
        l3out: "l3out_1"
        node_group: "node_group_policy_1"
        ipv6_address: "1::20/16"
        import_route_map_uuid: "{{ tenant_pol_template.current.tenantPolicyTemplate.template.routeMapPolicies.0.uuid }}"
        export_route_map_uuid: "{{ tenant_pol_template.current.tenantPolicyTemplate.template.routeMapPolicies.1.uuid }}"
        peer_prefix_uuid: "{{ tenant_pol_template.current.tenantPolicyTemplate.template.bgpPeerPrefixPolicies.0.uuid }}"
        state: present
      register: add_ipv6_bgp_peer_with_obj_uuid

    - name: Create L3Out BGP Peer config with IPv4, IPv6 address and default control values
      cisco.mso.ndo_l3out_bgp_peer:
        <<: *mso_info
        template: '{{ mso_l3out_template | default("ansible_test") }}'
        l3out: "l3out_1"
        node_group: "node_group_policy_1"
        ipv4_address: "3.3.3.3"
        ipv6_address: "1::9/16"
        bgp_controls:
          state: enabled
        peer_controls:
          state: enabled
        address_families:
          state: enabled
        private_as_controls:
          state: enabled
        state: present
      register: add_bgp_peer_with_default_ctrl

    - name: Assertion check for other create L3Out BGP Peer objects
      ansible.builtin.assert:
        that:
          - add_ipv6_bgp_peer is changed
          - add_ipv6_bgp_peer.current.addressTypeControls.afMast == true
          - add_ipv6_bgp_peer.current.addressTypeControls.afUcast == true
          - add_ipv6_bgp_peer.current.adminState == "enabled"
          - add_ipv6_bgp_peer.current.allowedSelfASCount == 3
          - add_ipv6_bgp_peer.current.authEnabled == true
          - add_ipv6_bgp_peer.current.bgpControls.allowSelfAS == true
          - add_ipv6_bgp_peer.current.bgpControls.asOverride == true
          - add_ipv6_bgp_peer.current.bgpControls.disablePeerASCheck == true
          - add_ipv6_bgp_peer.current.bgpControls.nextHopSelf == true
          - add_ipv6_bgp_peer.current.bgpControls.sendCommunity == true
          - add_ipv6_bgp_peer.current.bgpControls.sendDomainPath == true
          - add_ipv6_bgp_peer.current.bgpControls.sendExtendedCommunity == true
          - add_ipv6_bgp_peer.current.ebpgMultiHopTTL == 1
          - add_ipv6_bgp_peer.current.exportRouteMapName == "ans_route_map_2"
          - add_ipv6_bgp_peer.current.exportRouteMapRef != ""
          - add_ipv6_bgp_peer.current.exportRouteMapTemplateId != ""
          - add_ipv6_bgp_peer.current.exportRouteMapTemplateName == "ansible_test_policy"
          - add_ipv6_bgp_peer.current.importRouteMapName == "ans_route_map"
          - add_ipv6_bgp_peer.current.importRouteMapRef != ""
          - add_ipv6_bgp_peer.current.importRouteMapTemplateId != ""
          - add_ipv6_bgp_peer.current.importRouteMapTemplateName == "ansible_test_policy"
          - add_ipv6_bgp_peer.current.localAsn == 1
          - add_ipv6_bgp_peer.current.localAsnConfig == "replace-as"
          - add_ipv6_bgp_peer.current.peerAddressV6 == "1::8/16"
          - add_ipv6_bgp_peer.current.peerAsn == 2
          - add_ipv6_bgp_peer.current.peerControls.bfd == true
          - add_ipv6_bgp_peer.current.peerControls.disableConnectedCheck == true
          - add_ipv6_bgp_peer.current.peerPrefixName == "ansible_test_bgp_peer_prefix_policy"
          - add_ipv6_bgp_peer.current.peerPrefixRef != ""
          - add_ipv6_bgp_peer.current.peerPrefixTemplateId != ""
          - add_ipv6_bgp_peer.current.peerPrefixTemplateName == "ansible_test_policy"
          - add_ipv6_bgp_peer.current.privateASControls.removeAll == true
          - add_ipv6_bgp_peer.current.privateASControls.removeExclusive == true
          - add_ipv6_bgp_peer.current.privateASControls.replaceWithLocalAS == true
          - add_ipv6_bgp_peer.current.siteOfOrigin == "extended:as2-nn2:1000:65534"
          - add_ipv6_bgp_peer.current.templateId != ""
          - add_ipv6_bgp_peer.current.templateName is defined
          - add_ipv6_bgp_peer.current.weight == 2
          - add_ipv6_bgp_peer.previous == {}
          - add_ipv4_ipv6_addr is changed
          - add_ipv4_ipv6_addr.current.adminState == "enabled"
          - add_ipv4_ipv6_addr.current.allowedSelfASCount == 3
          - add_ipv4_ipv6_addr.current.authEnabled == false
          - add_ipv4_ipv6_addr.current.ebpgMultiHopTTL == 1
          - add_ipv4_ipv6_addr.current.peerAddressV4 == "5.5.5.5"
          - add_ipv4_ipv6_addr.current.peerAddressV6 == "1::19/16"
          - add_ipv4_ipv6_addr.current.templateId != ""
          - add_ipv4_ipv6_addr.current.templateName is defined
          - add_ipv4_ipv6_addr.previous == {}
          - cm_add_ipv6_bgp_peer_with_obj_uuid is changed
          - cm_add_ipv6_bgp_peer_with_obj_uuid.current.authEnabled == false
          - cm_add_ipv6_bgp_peer_with_obj_uuid.current.exportRouteMapName == "ans_route_map_2"
          - cm_add_ipv6_bgp_peer_with_obj_uuid.current.exportRouteMapRef != ""
          - cm_add_ipv6_bgp_peer_with_obj_uuid.current.exportRouteMapTemplateId != ""
          - cm_add_ipv6_bgp_peer_with_obj_uuid.current.exportRouteMapTemplateName == "ansible_test_policy"
          - cm_add_ipv6_bgp_peer_with_obj_uuid.current.importRouteMapName == "ans_route_map"
          - cm_add_ipv6_bgp_peer_with_obj_uuid.current.importRouteMapRef != ""
          - cm_add_ipv6_bgp_peer_with_obj_uuid.current.importRouteMapTemplateId != ""
          - cm_add_ipv6_bgp_peer_with_obj_uuid.current.importRouteMapTemplateName == "ansible_test_policy"
          - cm_add_ipv6_bgp_peer_with_obj_uuid.current.peerAddressV6 == "1::20/16"
          - cm_add_ipv6_bgp_peer_with_obj_uuid.current.peerPrefixName == "ansible_test_bgp_peer_prefix_policy"
          - cm_add_ipv6_bgp_peer_with_obj_uuid.current.peerPrefixRef != ""
          - cm_add_ipv6_bgp_peer_with_obj_uuid.current.peerPrefixTemplateId != ""
          - cm_add_ipv6_bgp_peer_with_obj_uuid.current.peerPrefixTemplateName == "ansible_test_policy"
          - cm_add_ipv6_bgp_peer_with_obj_uuid.current.templateId != ""
          - cm_add_ipv6_bgp_peer_with_obj_uuid.current.templateName is defined
          - cm_add_ipv6_bgp_peer_with_obj_uuid.previous == {}
          - add_ipv6_bgp_peer_with_obj_uuid is changed
          - add_ipv6_bgp_peer_with_obj_uuid.current.adminState == "enabled"
          - add_ipv6_bgp_peer_with_obj_uuid.current.allowedSelfASCount == 3
          - add_ipv6_bgp_peer_with_obj_uuid.current.authEnabled == false
          - add_ipv6_bgp_peer_with_obj_uuid.current.ebpgMultiHopTTL == 1
          - add_ipv6_bgp_peer_with_obj_uuid.current.exportRouteMapName == "ans_route_map_2"
          - add_ipv6_bgp_peer_with_obj_uuid.current.exportRouteMapRef != ""
          - add_ipv6_bgp_peer_with_obj_uuid.current.exportRouteMapTemplateId != ""
          - add_ipv6_bgp_peer_with_obj_uuid.current.exportRouteMapTemplateName == "ansible_test_policy"
          - add_ipv6_bgp_peer_with_obj_uuid.current.importRouteMapName == "ans_route_map"
          - add_ipv6_bgp_peer_with_obj_uuid.current.importRouteMapRef != ""
          - add_ipv6_bgp_peer_with_obj_uuid.current.importRouteMapTemplateId != ""
          - add_ipv6_bgp_peer_with_obj_uuid.current.importRouteMapTemplateName == "ansible_test_policy"
          - add_ipv6_bgp_peer_with_obj_uuid.current.peerAddressV6 == "1::20/16"
          - add_ipv6_bgp_peer_with_obj_uuid.current.peerPrefixName == "ansible_test_bgp_peer_prefix_policy"
          - add_ipv6_bgp_peer_with_obj_uuid.current.peerPrefixRef != ""
          - add_ipv6_bgp_peer_with_obj_uuid.current.peerPrefixTemplateId != ""
          - add_ipv6_bgp_peer_with_obj_uuid.current.peerPrefixTemplateName == "ansible_test_policy"
          - add_ipv6_bgp_peer_with_obj_uuid.current.templateId != ""
          - add_ipv6_bgp_peer_with_obj_uuid.current.templateName is defined
          - add_ipv6_bgp_peer_with_obj_uuid.previous == {}
          - add_bgp_peer_with_default_ctrl is changed
          - add_bgp_peer_with_default_ctrl.current.addressTypeControls.afMast == false
          - add_bgp_peer_with_default_ctrl.current.addressTypeControls.afUcast == false
          - add_bgp_peer_with_default_ctrl.current.adminState == "enabled"
          - add_bgp_peer_with_default_ctrl.current.allowedSelfASCount == 3
          - add_bgp_peer_with_default_ctrl.current.authEnabled == false
          - add_bgp_peer_with_default_ctrl.current.bgpControls.allowSelfAS == false
          - add_bgp_peer_with_default_ctrl.current.bgpControls.asOverride == false
          - add_bgp_peer_with_default_ctrl.current.bgpControls.disablePeerASCheck == false
          - add_bgp_peer_with_default_ctrl.current.bgpControls.nextHopSelf == false
          - add_bgp_peer_with_default_ctrl.current.bgpControls.sendCommunity == false
          - add_bgp_peer_with_default_ctrl.current.bgpControls.sendDomainPath == false
          - add_bgp_peer_with_default_ctrl.current.bgpControls.sendExtendedCommunity == false
          - add_bgp_peer_with_default_ctrl.current.ebpgMultiHopTTL == 1
          - add_bgp_peer_with_default_ctrl.current.peerAddressV4 == "3.3.3.3"
          - add_bgp_peer_with_default_ctrl.current.peerAddressV6 == "1::9/16"
          - add_bgp_peer_with_default_ctrl.current.peerControls.bfd == false
          - add_bgp_peer_with_default_ctrl.current.peerControls.disableConnectedCheck == false
          - add_bgp_peer_with_default_ctrl.current.privateASControls.removeAll == false
          - add_bgp_peer_with_default_ctrl.current.privateASControls.removeExclusive == false
          - add_bgp_peer_with_default_ctrl.current.privateASControls.replaceWithLocalAS == false
          - add_bgp_peer_with_default_ctrl.current.templateId != ""
          - add_bgp_peer_with_default_ctrl.current.templateName is defined
          - add_bgp_peer_with_default_ctrl.previous == {}

    # UPDATE
    - name: Clear route map and peer prefix config from the L3Out BGP Peer using UUID with empty string (check_mode)
      cisco.mso.ndo_l3out_bgp_peer:
        <<: *mso_info
        template_id: "{{ query_l3out_policy_template.current.templateId }}"
        l3out_uuid: "{{ create_l3out_1.current.uuid }}"
        node_group: "node_group_policy_1"
        ipv6_address: "1::20/16"
        import_route_map_uuid: ""
        export_route_map_uuid: ""
        peer_prefix_uuid: ""
        state: present
      check_mode: true
      register: cm_update_ipv6_bgp_peer_with_obj_uuid

    - name: Clear route map and peer prefix config from the L3Out BGP Peer using UUID with empty string
      cisco.mso.ndo_l3out_bgp_peer:
        <<: *mso_info
        template_id: "{{ query_l3out_policy_template.current.templateId }}"
        l3out: "l3out_1"
        node_group: "node_group_policy_1"
        ipv6_address: "1::20/16"
        import_route_map_uuid: ""
        export_route_map_uuid: ""
        peer_prefix_uuid: ""
        state: present
      register: nm_update_ipv6_bgp_peer_with_obj_uuid

    - name: Clear route map and peer prefix config from the L3Out BGP Peer using UUID with empty string again
      cisco.mso.ndo_l3out_bgp_peer:
        <<: *mso_info
        template_id: "{{ query_l3out_policy_template.current.templateId }}"
        l3out: "l3out_1"
        node_group: "node_group_policy_1"
        ipv6_address: "1::20/16"
        import_route_map_uuid: ""
        export_route_map_uuid: ""
        peer_prefix_uuid: ""
        state: present
      register: nm_update_ipv6_bgp_peer_with_obj_uuid_again

    - name: Assertion check for update L3Out BGP Peer object
      ansible.builtin.assert:
        that:
          - cm_update_ipv6_bgp_peer_with_obj_uuid is changed
          - cm_update_ipv6_bgp_peer_with_obj_uuid.current.adminState == "enabled"
          - cm_update_ipv6_bgp_peer_with_obj_uuid.current.allowedSelfASCount == 3
          - cm_update_ipv6_bgp_peer_with_obj_uuid.current.authEnabled == false
          - cm_update_ipv6_bgp_peer_with_obj_uuid.current.ebpgMultiHopTTL == 1
          - cm_update_ipv6_bgp_peer_with_obj_uuid.current.exportRouteMapName == "ans_route_map_2"
          - cm_update_ipv6_bgp_peer_with_obj_uuid.current.exportRouteMapRef == ""
          - cm_update_ipv6_bgp_peer_with_obj_uuid.current.exportRouteMapTemplateId != ""
          - cm_update_ipv6_bgp_peer_with_obj_uuid.current.exportRouteMapTemplateName == "ansible_test_policy"
          - cm_update_ipv6_bgp_peer_with_obj_uuid.current.importRouteMapName == "ans_route_map"
          - cm_update_ipv6_bgp_peer_with_obj_uuid.current.importRouteMapRef == ""
          - cm_update_ipv6_bgp_peer_with_obj_uuid.current.importRouteMapTemplateId != ""
          - cm_update_ipv6_bgp_peer_with_obj_uuid.current.importRouteMapTemplateName == "ansible_test_policy"
          - cm_update_ipv6_bgp_peer_with_obj_uuid.current.peerAddressV6 == "1::20/16"
          - cm_update_ipv6_bgp_peer_with_obj_uuid.current.peerPrefixName == "ansible_test_bgp_peer_prefix_policy"
          - cm_update_ipv6_bgp_peer_with_obj_uuid.current.peerPrefixRef == ""
          - cm_update_ipv6_bgp_peer_with_obj_uuid.current.peerPrefixTemplateId != ""
          - cm_update_ipv6_bgp_peer_with_obj_uuid.current.peerPrefixTemplateName == "ansible_test_policy"
          - cm_update_ipv6_bgp_peer_with_obj_uuid.current.templateId != ""
          - cm_update_ipv6_bgp_peer_with_obj_uuid.current.templateName is defined
          - cm_update_ipv6_bgp_peer_with_obj_uuid.previous.adminState == "enabled"
          - cm_update_ipv6_bgp_peer_with_obj_uuid.previous.allowedSelfASCount == 3
          - cm_update_ipv6_bgp_peer_with_obj_uuid.previous.authEnabled == false
          - cm_update_ipv6_bgp_peer_with_obj_uuid.previous.ebpgMultiHopTTL == 1
          - cm_update_ipv6_bgp_peer_with_obj_uuid.previous.exportRouteMapName == "ans_route_map_2"
          - cm_update_ipv6_bgp_peer_with_obj_uuid.previous.exportRouteMapRef != ""
          - cm_update_ipv6_bgp_peer_with_obj_uuid.previous.exportRouteMapTemplateId != ""
          - cm_update_ipv6_bgp_peer_with_obj_uuid.previous.exportRouteMapTemplateName == "ansible_test_policy"
          - cm_update_ipv6_bgp_peer_with_obj_uuid.previous.importRouteMapName == "ans_route_map"
          - cm_update_ipv6_bgp_peer_with_obj_uuid.previous.importRouteMapRef != ""
          - cm_update_ipv6_bgp_peer_with_obj_uuid.previous.importRouteMapTemplateId != ""
          - cm_update_ipv6_bgp_peer_with_obj_uuid.previous.importRouteMapTemplateName == "ansible_test_policy"
          - cm_update_ipv6_bgp_peer_with_obj_uuid.previous.peerAddressV6 == "1::20/16"
          - cm_update_ipv6_bgp_peer_with_obj_uuid.previous.peerPrefixName == "ansible_test_bgp_peer_prefix_policy"
          - cm_update_ipv6_bgp_peer_with_obj_uuid.previous.peerPrefixRef != ""
          - cm_update_ipv6_bgp_peer_with_obj_uuid.previous.peerPrefixTemplateId != ""
          - cm_update_ipv6_bgp_peer_with_obj_uuid.previous.peerPrefixTemplateName == "ansible_test_policy"
          - cm_update_ipv6_bgp_peer_with_obj_uuid.previous.templateId != ""
          - cm_update_ipv6_bgp_peer_with_obj_uuid.previous.templateName is defined
          - nm_update_ipv6_bgp_peer_with_obj_uuid is changed
          - nm_update_ipv6_bgp_peer_with_obj_uuid.current.adminState == "enabled"
          - nm_update_ipv6_bgp_peer_with_obj_uuid.current.allowedSelfASCount == 3
          - nm_update_ipv6_bgp_peer_with_obj_uuid.current.authEnabled == false
          - nm_update_ipv6_bgp_peer_with_obj_uuid.current.ebpgMultiHopTTL == 1
          - nm_update_ipv6_bgp_peer_with_obj_uuid.current.peerAddressV6 == "1::20/16"
          - nm_update_ipv6_bgp_peer_with_obj_uuid.current.templateId != ""
          - nm_update_ipv6_bgp_peer_with_obj_uuid.current.templateName is defined
          - nm_update_ipv6_bgp_peer_with_obj_uuid.previous.adminState == "enabled"
          - nm_update_ipv6_bgp_peer_with_obj_uuid.previous.allowedSelfASCount == 3
          - nm_update_ipv6_bgp_peer_with_obj_uuid.previous.authEnabled == false
          - nm_update_ipv6_bgp_peer_with_obj_uuid.previous.ebpgMultiHopTTL == 1
          - nm_update_ipv6_bgp_peer_with_obj_uuid.previous.exportRouteMapName == "ans_route_map_2"
          - nm_update_ipv6_bgp_peer_with_obj_uuid.previous.exportRouteMapRef != ""
          - nm_update_ipv6_bgp_peer_with_obj_uuid.previous.exportRouteMapTemplateId != ""
          - nm_update_ipv6_bgp_peer_with_obj_uuid.previous.exportRouteMapTemplateName == "ansible_test_policy"
          - nm_update_ipv6_bgp_peer_with_obj_uuid.previous.importRouteMapName == "ans_route_map"
          - nm_update_ipv6_bgp_peer_with_obj_uuid.previous.importRouteMapRef != ""
          - nm_update_ipv6_bgp_peer_with_obj_uuid.previous.importRouteMapTemplateId != ""
          - nm_update_ipv6_bgp_peer_with_obj_uuid.previous.importRouteMapTemplateName == "ansible_test_policy"
          - nm_update_ipv6_bgp_peer_with_obj_uuid.previous.peerAddressV6 == "1::20/16"
          - nm_update_ipv6_bgp_peer_with_obj_uuid.previous.peerPrefixName == "ansible_test_bgp_peer_prefix_policy"
          - nm_update_ipv6_bgp_peer_with_obj_uuid.previous.peerPrefixRef != ""
          - nm_update_ipv6_bgp_peer_with_obj_uuid.previous.peerPrefixTemplateId != ""
          - nm_update_ipv6_bgp_peer_with_obj_uuid.previous.peerPrefixTemplateName == "ansible_test_policy"
          - nm_update_ipv6_bgp_peer_with_obj_uuid.previous.templateId != ""
          - nm_update_ipv6_bgp_peer_with_obj_uuid.previous.templateName is defined
          - nm_update_ipv6_bgp_peer_with_obj_uuid_again is not changed
          - nm_update_ipv6_bgp_peer_with_obj_uuid_again.current.adminState == "enabled"
          - nm_update_ipv6_bgp_peer_with_obj_uuid_again.current.allowedSelfASCount == 3
          - nm_update_ipv6_bgp_peer_with_obj_uuid_again.current.authEnabled == false
          - nm_update_ipv6_bgp_peer_with_obj_uuid_again.current.ebpgMultiHopTTL == 1
          - nm_update_ipv6_bgp_peer_with_obj_uuid_again.current.peerAddressV6 == "1::20/16"
          - nm_update_ipv6_bgp_peer_with_obj_uuid_again.current.templateId != ""
          - nm_update_ipv6_bgp_peer_with_obj_uuid_again.current.templateName is defined
          - nm_update_ipv6_bgp_peer_with_obj_uuid_again.previous.adminState == "enabled"
          - nm_update_ipv6_bgp_peer_with_obj_uuid_again.previous.allowedSelfASCount == 3
          - nm_update_ipv6_bgp_peer_with_obj_uuid_again.previous.authEnabled == false
          - nm_update_ipv6_bgp_peer_with_obj_uuid_again.previous.ebpgMultiHopTTL == 1
          - nm_update_ipv6_bgp_peer_with_obj_uuid_again.previous.peerAddressV6 == "1::20/16"
          - nm_update_ipv6_bgp_peer_with_obj_uuid_again.previous.templateId != ""
          - nm_update_ipv6_bgp_peer_with_obj_uuid_again.previous.templateName is defined

    - name: Change additional attribute values of an existing L3Out BGP Peer object
      cisco.mso.ndo_l3out_bgp_peer:
        <<: *add_ipv6_bgp_peer
        remote_asn: ""
        import_route_map:
          name: ans_route_map_2
          template_id: "{{ ansible_test_policy.current.templateId }}"
        export_route_map:
          name: ans_route_map
          template_id: "{{ ansible_test_policy.current.templateId }}"
        peer_prefix:
          name: ansible_test_bgp_peer_prefix_policy_1
          template: ansible_test_policy
        ebgp_multi_hop_ttl: 3
        auth_password: ""
        weight: ""
        site_of_origin: ""
        local_asn_config: none
        local_asn: ""
        bgp_controls:
          allow_self_as: false
          override_as: true
          disabled_peer_as_check: true
          next_hop_self: false
          send_community: false
          send_extended_community: true
          send_domain_path: false
        peer_controls:
          bfd: false
          disable_peer_connected_check: true
        address_families:
          multicast: true
          unicast: false
        private_as_controls:
          remove_all: true
          replace_with_local_as: true
        state: present
      register: update_ipv6_bgp_peer

    - name: Clear control attribute values of an existing L3Out BGP Peer object
      cisco.mso.ndo_l3out_bgp_peer:
        <<: *mso_info
        template: '{{ mso_l3out_template | default("ansible_test") }}'
        l3out: "l3out_1"
        node_group: "node_group_policy_1"
        ipv6_address: "1::8/16"
        import_route_map: {}
        export_route_map: {}
        peer_prefix: {}
        auth_password: ""
        bgp_controls:
          state: disabled
        peer_controls:
          state: disabled
        address_families:
          state: disabled
        private_as_controls:
          state: disabled
        state: present
      register: clear_ctrl_attr

    - name: Add control attribute with default values of an existing L3Out BGP Peer object again
      cisco.mso.ndo_l3out_bgp_peer:
        <<: *mso_info
        template: '{{ mso_l3out_template | default("ansible_test") }}'
        l3out: "l3out_1"
        node_group: "node_group_policy_1"
        ipv6_address: "1::8/16"
        import_route_map: {}
        export_route_map: {}
        peer_prefix: {}
        auth_password: ""
        bgp_controls:
          state: enabled
        peer_controls:
          state: enabled
        address_families:
          state: enabled
        private_as_controls:
          state: enabled
        state: present
      register: add_ctrl_attr_again

    - name: Enable remove_all when the private_as_controls replace_with_local_as is false
      cisco.mso.ndo_l3out_bgp_peer:
        <<: *mso_info
        template: '{{ mso_l3out_template | default("ansible_test") }}'
        l3out: "l3out_1"
        node_group: "node_group_policy_1"
        ipv4_address: "3.3.3.3"
        ipv6_address: "1::9/16"
        private_as_controls:
          remove_all: true
          replace_with_local_as: false
        state: present
      register: enable_pvt_as_ctrl_remove_all

    - name: Assertion check for change additional attribute values of an existing L3Out BGP Peer object
      ansible.builtin.assert:
        that:
          - update_ipv6_bgp_peer is changed
          - update_ipv6_bgp_peer.current.addressTypeControls.afMast == true
          - update_ipv6_bgp_peer.current.addressTypeControls.afUcast == false
          - update_ipv6_bgp_peer.current.adminState == "enabled"
          - update_ipv6_bgp_peer.current.allowedSelfASCount == 3
          - update_ipv6_bgp_peer.current.authEnabled == false
          - update_ipv6_bgp_peer.current.bgpControls.allowSelfAS == false
          - update_ipv6_bgp_peer.current.bgpControls.asOverride == true
          - update_ipv6_bgp_peer.current.bgpControls.disablePeerASCheck == true
          - update_ipv6_bgp_peer.current.bgpControls.nextHopSelf == false
          - update_ipv6_bgp_peer.current.bgpControls.sendCommunity == false
          - update_ipv6_bgp_peer.current.bgpControls.sendDomainPath == false
          - update_ipv6_bgp_peer.current.bgpControls.sendExtendedCommunity == true
          - update_ipv6_bgp_peer.current.ebpgMultiHopTTL == 3
          - update_ipv6_bgp_peer.current.exportRouteMapName == "ans_route_map"
          - update_ipv6_bgp_peer.current.exportRouteMapRef != ""
          - update_ipv6_bgp_peer.current.exportRouteMapTemplateId != ""
          - update_ipv6_bgp_peer.current.exportRouteMapTemplateName == "ansible_test_policy"
          - update_ipv6_bgp_peer.current.importRouteMapName == "ans_route_map_2"
          - update_ipv6_bgp_peer.current.importRouteMapRef != ""
          - update_ipv6_bgp_peer.current.importRouteMapTemplateId != ""
          - update_ipv6_bgp_peer.current.importRouteMapTemplateName == "ansible_test_policy"
          - update_ipv6_bgp_peer.current.localAsnConfig == "none"
          - update_ipv6_bgp_peer.current.peerAddressV6 == "1::8/16"
          - update_ipv6_bgp_peer.current.peerControls.bfd == false
          - update_ipv6_bgp_peer.current.peerControls.disableConnectedCheck == true
          - update_ipv6_bgp_peer.current.peerPrefixName == "ansible_test_bgp_peer_prefix_policy_1"
          - update_ipv6_bgp_peer.current.peerPrefixRef != ""
          - update_ipv6_bgp_peer.current.peerPrefixTemplateId != ""
          - update_ipv6_bgp_peer.current.peerPrefixTemplateName == "ansible_test_policy"
          - update_ipv6_bgp_peer.current.privateASControls.removeAll == true
          - update_ipv6_bgp_peer.current.privateASControls.removeExclusive == true
          - update_ipv6_bgp_peer.current.privateASControls.replaceWithLocalAS == true
          - update_ipv6_bgp_peer.current.templateId != ""
          - update_ipv6_bgp_peer.current.templateName is defined
          - update_ipv6_bgp_peer.previous.addressTypeControls.afMast == true
          - update_ipv6_bgp_peer.previous.addressTypeControls.afUcast == true
          - update_ipv6_bgp_peer.previous.adminState == "enabled"
          - update_ipv6_bgp_peer.previous.allowedSelfASCount == 3
          - update_ipv6_bgp_peer.previous.authEnabled == true
          - update_ipv6_bgp_peer.previous.bgpControls.allowSelfAS == true
          - update_ipv6_bgp_peer.previous.bgpControls.asOverride == true
          - update_ipv6_bgp_peer.previous.bgpControls.disablePeerASCheck == true
          - update_ipv6_bgp_peer.previous.bgpControls.nextHopSelf == true
          - update_ipv6_bgp_peer.previous.bgpControls.sendCommunity == true
          - update_ipv6_bgp_peer.previous.bgpControls.sendDomainPath == true
          - update_ipv6_bgp_peer.previous.bgpControls.sendExtendedCommunity == true
          - update_ipv6_bgp_peer.previous.ebpgMultiHopTTL == 1
          - update_ipv6_bgp_peer.previous.exportRouteMapName == "ans_route_map_2"
          - update_ipv6_bgp_peer.previous.exportRouteMapRef != ""
          - update_ipv6_bgp_peer.previous.exportRouteMapTemplateId != ""
          - update_ipv6_bgp_peer.previous.exportRouteMapTemplateName == "ansible_test_policy"
          - update_ipv6_bgp_peer.previous.importRouteMapName == "ans_route_map"
          - update_ipv6_bgp_peer.previous.importRouteMapRef != ""
          - update_ipv6_bgp_peer.previous.importRouteMapTemplateId != ""
          - update_ipv6_bgp_peer.previous.importRouteMapTemplateName == "ansible_test_policy"
          - update_ipv6_bgp_peer.previous.localAsn == 1
          - update_ipv6_bgp_peer.previous.localAsnConfig == "replace-as"
          - update_ipv6_bgp_peer.previous.password == {}
          - update_ipv6_bgp_peer.previous.peerAddressV6 == "1::8/16"
          - update_ipv6_bgp_peer.previous.peerAsn == 2
          - update_ipv6_bgp_peer.previous.peerControls.bfd == true
          - update_ipv6_bgp_peer.previous.peerControls.disableConnectedCheck == true
          - update_ipv6_bgp_peer.previous.peerPrefixName == "ansible_test_bgp_peer_prefix_policy"
          - update_ipv6_bgp_peer.previous.peerPrefixRef != ""
          - update_ipv6_bgp_peer.previous.peerPrefixTemplateId != ""
          - update_ipv6_bgp_peer.previous.peerPrefixTemplateName == "ansible_test_policy"
          - update_ipv6_bgp_peer.previous.privateASControls.removeAll == true
          - update_ipv6_bgp_peer.previous.privateASControls.removeExclusive == true
          - update_ipv6_bgp_peer.previous.privateASControls.replaceWithLocalAS == true
          - update_ipv6_bgp_peer.previous.siteOfOrigin == "extended:as2-nn2:1000:65534"
          - update_ipv6_bgp_peer.previous.templateId != ""
          - update_ipv6_bgp_peer.previous.templateName is defined
          - update_ipv6_bgp_peer.previous.weight == 2
          - clear_ctrl_attr is changed
          - clear_ctrl_attr.current.adminState == "enabled"
          - clear_ctrl_attr.current.allowedSelfASCount == 3
          - clear_ctrl_attr.current.authEnabled == false
          - clear_ctrl_attr.current.ebpgMultiHopTTL == 3
          - clear_ctrl_attr.current.localAsnConfig == "none"
          - clear_ctrl_attr.current.peerAddressV6 == "1::8/16"
          - clear_ctrl_attr.current.templateId != ""
          - clear_ctrl_attr.current.templateName is defined
          - clear_ctrl_attr.previous.addressTypeControls.afMast == true
          - clear_ctrl_attr.previous.addressTypeControls.afUcast == false
          - clear_ctrl_attr.previous.adminState == "enabled"
          - clear_ctrl_attr.previous.allowedSelfASCount == 3
          - clear_ctrl_attr.previous.authEnabled == false
          - clear_ctrl_attr.previous.bgpControls.allowSelfAS == false
          - clear_ctrl_attr.previous.bgpControls.asOverride == true
          - clear_ctrl_attr.previous.bgpControls.disablePeerASCheck == true
          - clear_ctrl_attr.previous.bgpControls.nextHopSelf == false
          - clear_ctrl_attr.previous.bgpControls.sendCommunity == false
          - clear_ctrl_attr.previous.bgpControls.sendDomainPath == false
          - clear_ctrl_attr.previous.bgpControls.sendExtendedCommunity == true
          - clear_ctrl_attr.previous.ebpgMultiHopTTL == 3
          - clear_ctrl_attr.previous.exportRouteMapName == "ans_route_map"
          - clear_ctrl_attr.previous.exportRouteMapRef != ""
          - clear_ctrl_attr.previous.exportRouteMapTemplateId != ""
          - clear_ctrl_attr.previous.exportRouteMapTemplateName == "ansible_test_policy"
          - clear_ctrl_attr.previous.importRouteMapName == "ans_route_map_2"
          - clear_ctrl_attr.previous.importRouteMapRef != ""
          - clear_ctrl_attr.previous.importRouteMapTemplateId != ""
          - clear_ctrl_attr.previous.importRouteMapTemplateName == "ansible_test_policy"
          - clear_ctrl_attr.previous.localAsnConfig == "none"
          - clear_ctrl_attr.previous.peerAddressV6 == "1::8/16"
          - clear_ctrl_attr.previous.peerControls.bfd == false
          - clear_ctrl_attr.previous.peerControls.disableConnectedCheck == true
          - clear_ctrl_attr.previous.peerPrefixName == "ansible_test_bgp_peer_prefix_policy_1"
          - clear_ctrl_attr.previous.peerPrefixRef != ""
          - clear_ctrl_attr.previous.peerPrefixTemplateId != ""
          - clear_ctrl_attr.previous.peerPrefixTemplateName == "ansible_test_policy"
          - clear_ctrl_attr.previous.privateASControls.removeAll == true
          - clear_ctrl_attr.previous.privateASControls.removeExclusive == true
          - clear_ctrl_attr.previous.privateASControls.replaceWithLocalAS == true
          - clear_ctrl_attr.previous.templateId != ""
          - clear_ctrl_attr.previous.templateName is defined
          - add_ctrl_attr_again is changed
          - add_ctrl_attr_again.current.addressTypeControls.afMast == false
          - add_ctrl_attr_again.current.addressTypeControls.afUcast == false
          - add_ctrl_attr_again.current.adminState == "enabled"
          - add_ctrl_attr_again.current.allowedSelfASCount == 3
          - add_ctrl_attr_again.current.authEnabled == false
          - add_ctrl_attr_again.current.bgpControls.allowSelfAS == false
          - add_ctrl_attr_again.current.bgpControls.asOverride == false
          - add_ctrl_attr_again.current.bgpControls.disablePeerASCheck == false
          - add_ctrl_attr_again.current.bgpControls.nextHopSelf == false
          - add_ctrl_attr_again.current.bgpControls.sendCommunity == false
          - add_ctrl_attr_again.current.bgpControls.sendDomainPath == false
          - add_ctrl_attr_again.current.bgpControls.sendExtendedCommunity == false
          - add_ctrl_attr_again.current.ebpgMultiHopTTL == 3
          - add_ctrl_attr_again.current.localAsnConfig == "none"
          - add_ctrl_attr_again.current.peerAddressV6 == "1::8/16"
          - add_ctrl_attr_again.current.peerControls.bfd == false
          - add_ctrl_attr_again.current.peerControls.disableConnectedCheck == false
          - add_ctrl_attr_again.current.privateASControls.removeAll == false
          - add_ctrl_attr_again.current.privateASControls.removeExclusive == false
          - add_ctrl_attr_again.current.privateASControls.replaceWithLocalAS == false
          - add_ctrl_attr_again.current.templateId != ""
          - add_ctrl_attr_again.current.templateName is defined
          - add_ctrl_attr_again.previous.adminState == "enabled"
          - add_ctrl_attr_again.previous.allowedSelfASCount == 3
          - add_ctrl_attr_again.previous.authEnabled == false
          - add_ctrl_attr_again.previous.ebpgMultiHopTTL == 3
          - add_ctrl_attr_again.previous.localAsnConfig == "none"
          - add_ctrl_attr_again.previous.peerAddressV6 == "1::8/16"
          - add_ctrl_attr_again.previous.templateId != ""
          - add_ctrl_attr_again.previous.templateName is defined
          - enable_pvt_as_ctrl_remove_all is changed
          - enable_pvt_as_ctrl_remove_all.current.peerAddressV4 == "3.3.3.3"
          - enable_pvt_as_ctrl_remove_all.current.peerAddressV6 == "1::9/16"
          - enable_pvt_as_ctrl_remove_all.current.peerControls.bfd == false
          - enable_pvt_as_ctrl_remove_all.current.peerControls.disableConnectedCheck == false
          - enable_pvt_as_ctrl_remove_all.current.privateASControls.removeAll == true
          - enable_pvt_as_ctrl_remove_all.current.privateASControls.removeExclusive == true
          - enable_pvt_as_ctrl_remove_all.current.privateASControls.replaceWithLocalAS == false
          - enable_pvt_as_ctrl_remove_all.current.templateId != ""
          - enable_pvt_as_ctrl_remove_all.current.templateName is defined
          - enable_pvt_as_ctrl_remove_all.previous.peerAddressV4 == "3.3.3.3"
          - enable_pvt_as_ctrl_remove_all.previous.peerAddressV6 == "1::9/16"
          - enable_pvt_as_ctrl_remove_all.previous.peerControls.bfd == false
          - enable_pvt_as_ctrl_remove_all.previous.peerControls.disableConnectedCheck == false
          - enable_pvt_as_ctrl_remove_all.previous.privateASControls.removeAll == false
          - enable_pvt_as_ctrl_remove_all.previous.privateASControls.removeExclusive == false
          - enable_pvt_as_ctrl_remove_all.previous.privateASControls.replaceWithLocalAS == false
          - enable_pvt_as_ctrl_remove_all.previous.templateId != ""
          - enable_pvt_as_ctrl_remove_all.previous.templateName is defined

    # Errors and no policies found
    - name: Invalid test - create L3Out BGP Peer config without IPv4, IPv6 address
      cisco.mso.ndo_l3out_bgp_peer:
        <<: *mso_info
        template: '{{ mso_l3out_template | default("ansible_test") }}'
        l3out: "l3out_1"
        node_group: "node_group_policy_1"
        state: present
      register: nt_add_bgp_peer_without_ip
      ignore_errors: true

    - name: Invalid test - change allowed_self_as_count when the bgp_controls allow_self_as is false
      cisco.mso.ndo_l3out_bgp_peer:
        <<: *mso_info
        template: '{{ mso_l3out_template | default("ansible_test") }}'
        l3out: "l3out_1"
        node_group: "node_group_policy_1"
        ipv4_address: "3.3.3.3"
        ipv6_address: "1::9/16"
        allowed_self_as_count: 4
        state: present
      register: nt_change_allowed_self_as_count
      ignore_errors: true

    - name: Set error message for L3out BGP Peer with different options
      set_fact:
        error_message_change_allowed_self_as_count: "MSO Error 400: Invalid configuration in L3Out 'l3out_1': node group 'node_group_policy_1': BgpPeer 3.3.3.3-1::9/16 allowedSelfASCount value is set to 4, but AllowSelfAS is false"

    - name: Assertion check for invalid test - L3Out BGP Peer with different options
      ansible.builtin.assert:
        that:
          - nt_add_bgp_peer_without_ip is not changed
          - 'nt_add_bgp_peer_without_ip.msg == "state is present but any of the following are missing: ipv4_address, ipv6_address"'
          - nt_change_allowed_self_as_count is not changed
          - nt_change_allowed_self_as_count.current.addressTypeControls.afMast == false
          - nt_change_allowed_self_as_count.current.addressTypeControls.afUcast == false
          - nt_change_allowed_self_as_count.current.adminState == "enabled"
          - nt_change_allowed_self_as_count.current.allowedSelfASCount == 3
          - nt_change_allowed_self_as_count.current.authEnabled == false
          - nt_change_allowed_self_as_count.current.bgpControls.allowSelfAS == false
          - nt_change_allowed_self_as_count.current.peerAddressV4 == "3.3.3.3"
          - nt_change_allowed_self_as_count.current.peerAddressV6 == "1::9/16"
          - nt_change_allowed_self_as_count.current.templateId != ""
          - nt_change_allowed_self_as_count.current.templateName == "ansible_test"
          - nt_change_allowed_self_as_count.msg == error_message_change_allowed_self_as_count
          - nt_change_allowed_self_as_count.previous.addressTypeControls.afMast == false
          - nt_change_allowed_self_as_count.previous.addressTypeControls.afUcast == false
          - nt_change_allowed_self_as_count.previous.adminState == "enabled"
          - nt_change_allowed_self_as_count.previous.allowedSelfASCount == 3
          - nt_change_allowed_self_as_count.previous.authEnabled == false
          - nt_change_allowed_self_as_count.previous.bgpControls.allowSelfAS == false
          - nt_change_allowed_self_as_count.previous.ebpgMultiHopTTL == 1
          - nt_change_allowed_self_as_count.previous.peerAddressV4 == "3.3.3.3"
          - nt_change_allowed_self_as_count.previous.peerAddressV6 == "1::9/16"

    - name: Clear IPv4 address for the L3Out BGP Peer object
      cisco.mso.ndo_l3out_bgp_peer:
        <<: *mso_info
        template: '{{ mso_l3out_template | default("ansible_test") }}'
        l3out: "l3out_1"
        node_group: "node_group_policy_1"
        ipv4_address: ""
        ipv6_address: "1::9/16"
        private_as_controls:
          remove_all: true
          replace_with_local_as: false
        state: present
      register: clear_ipv4_addr

    - name: Invalid test - change configured IPv4 address when IPv6 is already configured
      cisco.mso.ndo_l3out_bgp_peer:
        <<: *mso_info
        template: '{{ mso_l3out_template | default("ansible_test") }}'
        l3out: "l3out_1"
        node_group: "node_group_policy_1"
        ipv4_address: "5.5.5.6"
        ipv6_address: "1::19/16"
        state: present
      register: nt_update_ipv4_addr
      ignore_errors: true

    - name: Clear IPv6 address for the L3Out BGP Peer object
      cisco.mso.ndo_l3out_bgp_peer:
        <<: *mso_info
        template: '{{ mso_l3out_template | default("ansible_test") }}'
        l3out: "l3out_1"
        node_group: "node_group_policy_1"
        ipv4_address: "5.5.5.5"
        ipv6_address: ""
        state: present
      register: clear_ipv6_addr

    - name: Assertion check for clear IPv4 and  IPv6 address for the L3Out BGP Peer object
      ansible.builtin.assert:
        that:
          - clear_ipv4_addr is changed
          - clear_ipv4_addr.current.adminState == "enabled"
          - clear_ipv4_addr.current.allowedSelfASCount == 3
          - clear_ipv4_addr.current.authEnabled == false
          - clear_ipv4_addr.current.ebpgMultiHopTTL == 1
          - clear_ipv4_addr.current.peerAddressV6 == "1::9/16"
          - clear_ipv4_addr.previous.adminState == "enabled"
          - clear_ipv4_addr.previous.allowedSelfASCount == 3
          - clear_ipv4_addr.previous.authEnabled == false
          - clear_ipv4_addr.previous.ebpgMultiHopTTL == 1
          - clear_ipv4_addr.previous.peerAddressV4 == "3.3.3.3"
          - clear_ipv4_addr.previous.peerAddressV6 == "1::9/16"
          - clear_ipv6_addr is changed
          - clear_ipv6_addr.current.adminState == "enabled"
          - clear_ipv6_addr.current.allowedSelfASCount == 3
          - clear_ipv6_addr.current.authEnabled == false
          - clear_ipv6_addr.current.ebpgMultiHopTTL == 1
          - clear_ipv6_addr.current.peerAddressV4 == "5.5.5.5"
          - clear_ipv6_addr.previous.adminState == "enabled"
          - clear_ipv6_addr.previous.allowedSelfASCount == 3
          - clear_ipv6_addr.previous.authEnabled == false
          - clear_ipv6_addr.previous.ebpgMultiHopTTL == 1
          - clear_ipv6_addr.previous.peerAddressV4 == "5.5.5.5"
          - clear_ipv6_addr.previous.peerAddressV6 == "1::19/16"

    - name: Invalid test - Add IPv4 address back to the L3Out BGP Peer object
      cisco.mso.ndo_l3out_bgp_peer:
        <<: *mso_info
        template: '{{ mso_l3out_template | default("ansible_test") }}'
        l3out: "l3out_1"
        node_group: "node_group_policy_1"
        ipv4_address: "3.3.3.3"
        ipv6_address: "1::9/16"
        state: present
      register: nt_add_same_ipv4_addr
      ignore_errors: true

    - name: Invalid test - change configured IPv6 address when IPv4 is already configured
      cisco.mso.ndo_l3out_bgp_peer:
        <<: *mso_info
        template: '{{ mso_l3out_template | default("ansible_test") }}'
        l3out: "l3out_1"
        node_group: "node_group_policy_1"
        ipv4_address: "5.5.5.5"
        ipv6_address: "1::20/16"
        state: present
      register: nt_update_ipv6_addr
      ignore_errors: true

    - name: Invalid test - create L3Out BGP Peer without template and template_id
      cisco.mso.ndo_l3out_bgp_peer:
        <<: *mso_info
        l3out: "l3out_1"
        node_group: "node_group_policy_1"
        ipv4_address: "1.1.1.1"
        auth_password: 123
        state: present
      register: nt_create_without_template
      ignore_errors: true

    - name: Invalid test - create L3Out BGP Peer with import_route_map and import_route_map_uuid
      cisco.mso.ndo_l3out_bgp_peer:
        <<: *mso_info
        template: '{{ mso_l3out_template | default("ansible_test") }}'
        l3out: "l3out_1"
        node_group: "node_group_policy_1"
        ipv4_address: "1.1.1.1"
        auth_password: 123
        import_route_map:
          name: "import_route_map"
          template: ansible_test_policy
        import_route_map_uuid: "import_route_map_uuid"
        state: present
      register: nt_create_with_import_route_map
      ignore_errors: true

    - name: Invalid test - create L3Out BGP Peer with export_route_map and export_route_map_uuid
      cisco.mso.ndo_l3out_bgp_peer:
        <<: *mso_info
        template: '{{ mso_l3out_template | default("ansible_test") }}'
        l3out: "l3out_1"
        node_group: "node_group_policy_1"
        ipv4_address: "1.1.1.1"
        auth_password: 123
        export_route_map:
          name: "export_route_map"
          template: ansible_test_policy
        export_route_map_uuid: "export_route_map_uuid"
        state: present
      register: nt_create_with_export_route_map
      ignore_errors: true

    - name: Invalid test - create L3Out BGP Peer with peer_prefix and peer_prefix_uuid
      cisco.mso.ndo_l3out_bgp_peer:
        <<: *mso_info
        template: '{{ mso_l3out_template | default("ansible_test") }}'
        l3out: "l3out_1"
        node_group: "node_group_policy_1"
        ipv4_address: "1.1.1.1"
        auth_password: 123
        peer_prefix:
          name: "peer_prefix"
          template: ansible_test_policy
        peer_prefix_uuid: "peer_prefix_uuid"
        state: present
      register: nt_create_with_peer_prefix
      ignore_errors: true

    - name: Set error message for L3out BGP Peer with different options 1
      ansible.builtin.set_fact:
        error_message_update_ipv4_addr: "MSO Error 400: Invalid configuration in L3Out 'l3out_1': node group 'node_group_policy_1': BgpPeer 5.5.5.6-1::19/16 is duplicated. Please delete one"
        error_message_add_same_ipv4_addr: "MSO Error 400: Invalid configuration in L3Out 'l3out_1': node group 'node_group_policy_1': BgpPeer 3.3.3.3-1::9/16 is duplicated. Please delete one"
        error_message_update_ipv6_addr: "MSO Error 400: Invalid configuration in L3Out 'l3out_1': node group 'node_group_policy_1': BgpPeer 5.5.5.5-1::20/16 is duplicated. Please delete one"

    - name: Assertion check for invalid test - L3Out BGP Peer with different options 1
      ansible.builtin.assert:
        that:
          - nt_update_ipv4_addr is not changed
          - nt_update_ipv4_addr.current == {}
          - nt_update_ipv4_addr.msg == error_message_update_ipv4_addr
          - nt_update_ipv4_addr.previous == {}
          - nt_add_same_ipv4_addr is not changed
          - nt_add_same_ipv4_addr.current == {}
          - nt_add_same_ipv4_addr.msg == error_message_add_same_ipv4_addr
          - nt_add_same_ipv4_addr.previous == {}
          - nt_update_ipv6_addr is not changed
          - nt_update_ipv6_addr.current == {}
          - nt_update_ipv6_addr.msg == error_message_update_ipv6_addr
          - nt_update_ipv6_addr.previous == {}
          - nt_create_without_template is not changed
          - 'nt_create_without_template.msg == "one of the following is required: template, template_id"'
          - nt_create_with_import_route_map is not changed
          - 'nt_create_with_import_route_map.msg == "parameters are mutually exclusive: import_route_map|import_route_map_uuid"'
          - nt_create_with_export_route_map is not changed
          - 'nt_create_with_export_route_map.msg == "parameters are mutually exclusive: export_route_map|export_route_map_uuid"'
          - nt_create_with_peer_prefix is not changed
          - 'nt_create_with_peer_prefix.msg == "parameters are mutually exclusive: peer_prefix|peer_prefix_uuid"'

    # QUERY
    - name: Query all L3Out BGP Peer
      cisco.mso.ndo_l3out_bgp_peer:
        <<: *mso_info
        template: '{{ mso_l3out_template | default("ansible_test") }}'
        l3out: "l3out_1"
        node_group: "node_group_policy_1"
        state: query
      register: query_all_l3out_bgp_peers_again

    - name: Assertion check for query L3Out BGP Peer with different options
      ansible.builtin.assert:
        that:
          - query_ipv6_addr is not changed
          - query_ipv4_ipv6_addr is not changed
          - query_ipv6_addr.current == query_ipv4_addr.current == query_ipv4_ipv6_addr.current
          - query_ipv4_addr is not changed
          - query_ipv4_addr.current.adminState == "enabled"
          - query_ipv4_addr.current.allowedSelfASCount == 3
          - query_ipv4_addr.current.authEnabled == false
          - query_ipv4_addr.current.ebpgMultiHopTTL == 1
          - query_ipv4_addr.current.peerAddressV4 == "5.5.5.5"
          - query_ipv4_addr.current.peerAddressV6 == "1::19/16"
          - query_ipv4_addr.current.templateId != ""
          - query_ipv4_addr.current.templateName is defined
          - query_all_l3out_bgp_peers_again is not changed
          - query_all_l3out_bgp_peers_again.current | length >= 5
          - query_all_l3out_bgp_peers_again.current.0.peerAddressV4 == "1.1.1.1"
          - query_all_l3out_bgp_peers_again.current.1.peerAddressV6 == "1::8/16"
          - query_all_l3out_bgp_peers_again.current.2.peerAddressV4 == "5.5.5.5"
          - query_all_l3out_bgp_peers_again.current.3.peerAddressV6 == "1::20/16"
          - query_all_l3out_bgp_peers_again.current.4.peerAddressV6 == "1::9/16"

    # DELETE
    - name: Remove an existing L3Out BGP Peer with IPv4 and IPv6 address (check_mode)
      cisco.mso.ndo_l3out_bgp_peer: &cm_rm_bgp_peer
        <<: *cm_bgp_peer_ipv4_present
        ipv4_address: "1.1.1.2"
        ipv6_address: "1::10/16"
        state: absent
        output_level: debug
      check_mode: true
      register: cm_rm_bgp_peer

    - name: Remove an existing L3Out BGP Peer with IPv4 and IPv6 address
      cisco.mso.ndo_l3out_bgp_peer:
        <<: *cm_rm_bgp_peer
      register: nm_rm_bgp_peer

    - name: Remove an existing L3Out BGP Peer with IPv4 and IPv6 address again
      cisco.mso.ndo_l3out_bgp_peer:
        <<: *cm_rm_bgp_peer
      register: nm_rm_bgp_peer_again

    - name: Remove an existing L3Out BGP Peer with IPv6 address
      cisco.mso.ndo_l3out_bgp_peer:
        <<: *mso_info
        template: '{{ mso_l3out_template | default("ansible_test") }}'
        l3out: "l3out_1"
        node_group: "node_group_policy_1"
        ipv6_address: "1::8/16"
        state: absent
      register: nm_rm_ipv6_bgp_peer

    - name: Remove an existing L3Out BGP Peer with IPv4 address
      cisco.mso.ndo_l3out_bgp_peer:
        <<: *mso_info
        template: '{{ mso_l3out_template | default("ansible_test") }}'
        l3out: "l3out_1"
        node_group: "node_group_policy_1"
        ipv4_address: "5.5.5.5"
        state: absent
      register: nm_rm_ipv4_bgp_peer

    - name: Assertion check for remove an existing L3Out BGP Peer with different options
      ansible.builtin.assert:
        that:
          - cm_rm_bgp_peer is not changed
          - cm_rm_bgp_peer.current == {}
          - cm_rm_bgp_peer.previous == {}
          - nm_rm_bgp_peer is not changed
          - nm_rm_bgp_peer.current == {}
          - nm_rm_bgp_peer.previous == {}
          - nm_rm_bgp_peer_again is not changed
          - nm_rm_bgp_peer_again.current == {}
          - nm_rm_bgp_peer_again.previous == {}
          - nm_rm_ipv6_bgp_peer is changed
          - nm_rm_ipv6_bgp_peer.current == {}
          - nm_rm_ipv6_bgp_peer.previous.peerAddressV6 == "1::8/16"
          - nm_rm_ipv6_bgp_peer.previous.templateId != ""
          - nm_rm_ipv6_bgp_peer.previous.templateName is defined
          - nm_rm_ipv4_bgp_peer is changed
          - nm_rm_ipv4_bgp_peer.current == {}
          - nm_rm_ipv4_bgp_peer.previous.adminState == "enabled"
          - nm_rm_ipv4_bgp_peer.previous.allowedSelfASCount == 3
          - nm_rm_ipv4_bgp_peer.previous.authEnabled == false
          - nm_rm_ipv4_bgp_peer.previous.ebpgMultiHopTTL == 1
          - nm_rm_ipv4_bgp_peer.previous.peerAddressV4 == "5.5.5.5"
          - nm_rm_ipv4_bgp_peer.previous.templateId != ""
          - nm_rm_ipv4_bgp_peer.previous.templateName is defined

    # ROUTED INTERFACES

    - name: Create a L3out routed interface of type port
      cisco.mso.ndo_l3out_routed_interface: &create_l3out_routed_interface_port
        <<: *mso_info
        template: '{{ mso_l3out_template | default("ansible_test") }}'
        l3out: l3out_1
        node_id: 101
        path: eth1/1
        ipv4_address: 10.0.0.1/24
        mac: 00:22:BD:F8:19:FF
        mtu: inherit
        node_router_id: 1.1.1.1
        state: present

    - name: Create L3Out BGP Peer on a L3out routed interface of type port
      cisco.mso.ndo_l3out_bgp_peer: &create_bgp_peer_for_l3out_routed_interface_port
        <<: *mso_info
        template: '{{ mso_l3out_template | default("ansible_test") }}'
        l3out: l3out_1
        ipv4_address: 5.5.5.5
        parent_type: "routed"
        node_id: 101
        path: eth1/1
        state: present
      register: create_bgp_peer_for_l3out_routed_interface_port

    - name: Create L3Out BGP Peer on a L3out routed interface of type port again
      cisco.mso.ndo_l3out_bgp_peer:
        <<: *create_bgp_peer_for_l3out_routed_interface_port
      register: create_bgp_peer_for_l3out_routed_interface_port_again

    - name: Remove L3Out BGP Peer on a L3out routed interface of type port
      cisco.mso.ndo_l3out_bgp_peer:
        <<: *create_bgp_peer_for_l3out_routed_interface_port
        state: absent
      register: remove_bgp_peer_for_l3out_routed_interface_port

    - name: Remove a L3out routed interface of type port
      cisco.mso.ndo_l3out_routed_interface:
        <<: *create_l3out_routed_interface_port
        state: absent
    
    - name: Assert L3Out BGP Peer on a L3out routed interface of type port
      ansible.builtin.assert:
        that:
          - create_bgp_peer_for_l3out_routed_interface_port is changed
          - create_bgp_peer_for_l3out_routed_interface_port.previous == {}
          - create_bgp_peer_for_l3out_routed_interface_port.current.peerAddressV4 == "5.5.5.5"
          - create_bgp_peer_for_l3out_routed_interface_port.current.templateId is defined
          - create_bgp_peer_for_l3out_routed_interface_port.current.templateName is defined
          - create_bgp_peer_for_l3out_routed_interface_port.current.routedInterfaceNodeID == "101"
          - create_bgp_peer_for_l3out_routed_interface_port.current.routedInterfacePath == "eth1/1"
          - create_bgp_peer_for_l3out_routed_interface_port.current.routedInterfacePathType == "port"
          - create_bgp_peer_for_l3out_routed_interface_port.current.routedInterfacePodID == "1"
          - create_bgp_peer_for_l3out_routed_interface_port_again is not changed
          - create_bgp_peer_for_l3out_routed_interface_port_again.current == create_bgp_peer_for_l3out_routed_interface_port_again.previous == create_bgp_peer_for_l3out_routed_interface_port.current
          - remove_bgp_peer_for_l3out_routed_interface_port is changed
          - remove_bgp_peer_for_l3out_routed_interface_port.previous.peerAddressV4 == "5.5.5.5"
          - remove_bgp_peer_for_l3out_routed_interface_port.previous.templateId is defined
          - remove_bgp_peer_for_l3out_routed_interface_port.previous.templateName is defined
          - remove_bgp_peer_for_l3out_routed_interface_port.previous.routedInterfaceNodeID == "101"
          - remove_bgp_peer_for_l3out_routed_interface_port.previous.routedInterfacePath == "eth1/1"
          - remove_bgp_peer_for_l3out_routed_interface_port.previous.routedInterfacePathType == "port"
          - remove_bgp_peer_for_l3out_routed_interface_port.previous.routedInterfacePodID == "1"
          - remove_bgp_peer_for_l3out_routed_interface_port.current == {}

    - name: Create a L3out routed interface of type port channel with uuid
      cisco.mso.ndo_l3out_routed_interface: &create_l3out_routed_interface_port_channel
        <<: *mso_info
        template: '{{ mso_l3out_template | default("ansible_test") }}'
        l3out: l3out_1
        port_channel:
          uuid: '{{ port_channel_interface_1.current.uuid }}'
        ipv4_address: 10.0.0.1/24
        mac: 00:22:BD:F8:19:FF
        mtu: inherit
        node_router_id: 1.1.1.1
        state: present
    
    - name: Create L3Out BGP Peer on a L3out routed interface of type port channel
      cisco.mso.ndo_l3out_bgp_peer: &create_bgp_peer_for_l3out_routed_interface_port_channel
        <<: *mso_info
        template: '{{ mso_l3out_template | default("ansible_test") }}'
        l3out: l3out_1
        ipv4_address: 5.5.5.5
        parent_type: "routed"
        port_channel:
          uuid: '{{ port_channel_interface_1.current.uuid }}'
        state: present
      register: create_bgp_peer_for_l3out_routed_interface_port_channel

    - name: Create L3Out BGP Peer on a L3out routed interface of type port channel again
      cisco.mso.ndo_l3out_bgp_peer:
        <<: *create_bgp_peer_for_l3out_routed_interface_port_channel
      register: create_bgp_peer_for_l3out_routed_interface_port_channel_again

    - name: Remove L3Out BGP Peer on a L3out routed interface of type port channel
      cisco.mso.ndo_l3out_bgp_peer:
        <<: *create_bgp_peer_for_l3out_routed_interface_port_channel
        state: absent
      register: remove_bgp_peer_for_l3out_routed_interface_port_channel

    - name: Remove a L3out routed interface of type port channel
      cisco.mso.ndo_l3out_routed_interface:
        <<: *create_l3out_routed_interface_port_channel
        state: absent

    - name: Assert L3Out BGP Peer on a L3out routed interface of type port channel
      ansible.builtin.assert:
        that:
          - create_bgp_peer_for_l3out_routed_interface_port_channel is changed
          - create_bgp_peer_for_l3out_routed_interface_port_channel.previous == {}
          - create_bgp_peer_for_l3out_routed_interface_port_channel.current.peerAddressV4 == "5.5.5.5"
          - create_bgp_peer_for_l3out_routed_interface_port_channel.current.templateId is defined
          - create_bgp_peer_for_l3out_routed_interface_port_channel.current.templateName is defined
          - create_bgp_peer_for_l3out_routed_interface_port_channel.current.portChannelName == "ansible_port_channel_interface_1"
          - create_bgp_peer_for_l3out_routed_interface_port_channel.current.portChannelTemplateId is defined
          - create_bgp_peer_for_l3out_routed_interface_port_channel.current.portChannelTemplateName is defined
          - create_bgp_peer_for_l3out_routed_interface_port_channel.current.routedInterfacePathRef is defined
          - create_bgp_peer_for_l3out_routed_interface_port_channel.current.routedInterfacePathType == "pc"
          - create_bgp_peer_for_l3out_routed_interface_port_channel_again is not changed
          - create_bgp_peer_for_l3out_routed_interface_port_channel_again.previous == create_bgp_peer_for_l3out_routed_interface_port_channel_again.current == create_bgp_peer_for_l3out_routed_interface_port_channel.current
          - remove_bgp_peer_for_l3out_routed_interface_port_channel is changed
          - remove_bgp_peer_for_l3out_routed_interface_port_channel.previous.peerAddressV4 == "5.5.5.5"
          - remove_bgp_peer_for_l3out_routed_interface_port_channel.previous.templateId is defined
          - remove_bgp_peer_for_l3out_routed_interface_port_channel.previous.templateName is defined
          - remove_bgp_peer_for_l3out_routed_interface_port_channel.previous.portChannelName == "ansible_port_channel_interface_1"
          - remove_bgp_peer_for_l3out_routed_interface_port_channel.previous.portChannelTemplateId is defined
          - remove_bgp_peer_for_l3out_routed_interface_port_channel.previous.portChannelTemplateName is defined
          - remove_bgp_peer_for_l3out_routed_interface_port_channel.previous.routedInterfacePathRef is defined
          - remove_bgp_peer_for_l3out_routed_interface_port_channel.previous.routedInterfacePathType == "pc"
          - remove_bgp_peer_for_l3out_routed_interface_port_channel.current == {}

    # ROUTED SUB-INTERFACES

    - name: Create a L3out routed sub-interface of type port
      cisco.mso.ndo_l3out_routed_sub_interface: &create_l3out_routed_sub_interface_port
        <<: *mso_info
        template: '{{ mso_l3out_template | default("ansible_test") }}'
        l3out: l3out_1
        node_id: 101
        path: eth1/1
        ipv4_address: 10.0.0.1/24
        mac: 00:22:BD:F8:19:FF
        mtu: inherit
        node_router_id: 1.1.1.1
        encapsulation_type: vlan
        encapsulation_value: 100
        state: present

    - name: Create L3Out BGP Peer on a L3out routed sub-interface of type port
      cisco.mso.ndo_l3out_bgp_peer: &create_bgp_peer_for_l3out_routed_sub_interface_port
        <<: *mso_info
        template: '{{ mso_l3out_template | default("ansible_test") }}'
        l3out: l3out_1
        ipv4_address: 5.5.5.5
        parent_type: "routed_sub"
        node_id: 101
        path: eth1/1
        encapsulation_type: vlan
        encapsulation_value: 100
        state: present
      register: create_bgp_peer_for_l3out_routed_sub_interface_port

    - name: Create L3Out BGP Peer on a L3out routed sub-interface of type port again
      cisco.mso.ndo_l3out_bgp_peer:
        <<: *create_bgp_peer_for_l3out_routed_sub_interface_port
      register: create_bgp_peer_for_l3out_routed_sub_interface_port_again

    - name: Remove L3Out BGP Peer on a L3out routed sub-interface of type port
      cisco.mso.ndo_l3out_bgp_peer:
        <<: *create_bgp_peer_for_l3out_routed_sub_interface_port
        state: absent
      register: remove_bgp_peer_for_l3out_routed_sub_interface_port

    - name: Remove a L3out routed sub-interface of type port
      cisco.mso.ndo_l3out_routed_sub_interface:
        <<: *create_l3out_routed_sub_interface_port
        state: absent
    
    - name: Assert L3Out BGP Peer on a L3out routed sub-interface of type port
      ansible.builtin.assert:
        that:
          - create_bgp_peer_for_l3out_routed_sub_interface_port is changed
          - create_bgp_peer_for_l3out_routed_sub_interface_port.previous == {}
          - create_bgp_peer_for_l3out_routed_sub_interface_port.current.peerAddressV4 == "5.5.5.5"
          - create_bgp_peer_for_l3out_routed_sub_interface_port.current.templateId is defined
          - create_bgp_peer_for_l3out_routed_sub_interface_port.current.templateName is defined
          - create_bgp_peer_for_l3out_routed_sub_interface_port.current.routedSubInterfaceNodeID == "101"
          - create_bgp_peer_for_l3out_routed_sub_interface_port.current.routedSubInterfacePath == "eth1/1"
          - create_bgp_peer_for_l3out_routed_sub_interface_port.current.routedSubInterfacePathType == "port"
          - create_bgp_peer_for_l3out_routed_sub_interface_port.current.routedSubInterfacePodID == "1"
          - create_bgp_peer_for_l3out_routed_sub_interface_port.current.routedSubInterfaceEncap.encapType == "vlan"
          - create_bgp_peer_for_l3out_routed_sub_interface_port.current.routedSubInterfaceEncap.value == 100
          - create_bgp_peer_for_l3out_routed_sub_interface_port_again is not changed
          - create_bgp_peer_for_l3out_routed_sub_interface_port_again.current == create_bgp_peer_for_l3out_routed_sub_interface_port_again.previous == create_bgp_peer_for_l3out_routed_sub_interface_port.current
          - remove_bgp_peer_for_l3out_routed_sub_interface_port is changed
          - remove_bgp_peer_for_l3out_routed_sub_interface_port.previous.peerAddressV4 == "5.5.5.5"
          - remove_bgp_peer_for_l3out_routed_sub_interface_port.previous.templateId is defined
          - remove_bgp_peer_for_l3out_routed_sub_interface_port.previous.templateName is defined
          - remove_bgp_peer_for_l3out_routed_sub_interface_port.previous.routedSubInterfaceNodeID == "101"
          - remove_bgp_peer_for_l3out_routed_sub_interface_port.previous.routedSubInterfacePath == "eth1/1"
          - remove_bgp_peer_for_l3out_routed_sub_interface_port.previous.routedSubInterfacePathType == "port"
          - remove_bgp_peer_for_l3out_routed_sub_interface_port.previous.routedSubInterfacePodID == "1"
          - remove_bgp_peer_for_l3out_routed_sub_interface_port.previous.routedSubInterfaceEncap.encapType == "vlan"
          - remove_bgp_peer_for_l3out_routed_sub_interface_port.previous.routedSubInterfaceEncap.value == 100
          - remove_bgp_peer_for_l3out_routed_sub_interface_port.current == {}

    - name: Create a L3out routed sub-interface of type port channel with uuid
      cisco.mso.ndo_l3out_routed_sub_interface: &create_l3out_routed_sub_interface_port_channel
        <<: *mso_info
        template: '{{ mso_l3out_template | default("ansible_test") }}'
        l3out: l3out_1
        port_channel:
          uuid: '{{ port_channel_interface_1.current.uuid }}'
        ipv4_address: 10.0.0.1/24
        mac: 00:22:BD:F8:19:FF
        mtu: inherit
        node_router_id: 1.1.1.1
        encapsulation_type: vlan
        encapsulation_value: 100
        state: present

    - name: Create L3Out BGP Peer on a L3out routed sub-interface of type port channel
      cisco.mso.ndo_l3out_bgp_peer: &create_bgp_peer_for_l3out_routed_sub_interface_port_channel
        <<: *mso_info
        template: '{{ mso_l3out_template | default("ansible_test") }}'
        l3out: l3out_1
        ipv4_address: 5.5.5.5
        parent_type: "routed_sub"
        port_channel:
          uuid: '{{ port_channel_interface_1.current.uuid }}'
        encapsulation_type: vlan
        encapsulation_value: 100
        state: present
      register: create_bgp_peer_for_l3out_routed_sub_interface_port_channel

    - name: Create L3Out BGP Peer on a L3out routed sub-interface of type port channel again
      cisco.mso.ndo_l3out_bgp_peer:
        <<: *create_bgp_peer_for_l3out_routed_sub_interface_port_channel
      register: create_bgp_peer_for_l3out_routed_sub_interface_port_channel_again

    - name: Remove L3Out BGP Peer on a L3out routed sub-interface of type port channel
      cisco.mso.ndo_l3out_bgp_peer:
        <<: *create_bgp_peer_for_l3out_routed_sub_interface_port_channel
        state: absent
      register: remove_bgp_peer_for_l3out_routed_sub_interface_port_channel

    - name: Remove a L3out routed sub-interface of type port channel
      cisco.mso.ndo_l3out_routed_sub_interface:
        <<: *create_l3out_routed_sub_interface_port_channel
        state: absent

    - name: Assert L3Out BGP Peer on a L3out routed sub-interface of type port channel
      ansible.builtin.assert:
        that:
          - create_bgp_peer_for_l3out_routed_sub_interface_port_channel is changed
          - create_bgp_peer_for_l3out_routed_sub_interface_port_channel.previous == {}
          - create_bgp_peer_for_l3out_routed_sub_interface_port_channel.current.peerAddressV4 == "5.5.5.5"
          - create_bgp_peer_for_l3out_routed_sub_interface_port_channel.current.templateId is defined
          - create_bgp_peer_for_l3out_routed_sub_interface_port_channel.current.templateName is defined
          - create_bgp_peer_for_l3out_routed_sub_interface_port_channel.current.portChannelName == "ansible_port_channel_interface_1"
          - create_bgp_peer_for_l3out_routed_sub_interface_port_channel.current.portChannelTemplateId is defined
          - create_bgp_peer_for_l3out_routed_sub_interface_port_channel.current.portChannelTemplateName is defined
          - create_bgp_peer_for_l3out_routed_sub_interface_port_channel.current.routedSubInterfacePathRef is defined
          - create_bgp_peer_for_l3out_routed_sub_interface_port_channel.current.routedSubInterfacePathType == "pc"
          - create_bgp_peer_for_l3out_routed_sub_interface_port_channel.current.routedSubInterfaceEncap.encapType == "vlan"
          - create_bgp_peer_for_l3out_routed_sub_interface_port_channel.current.routedSubInterfaceEncap.value == 100
          - create_bgp_peer_for_l3out_routed_sub_interface_port_channel_again is not changed
          - create_bgp_peer_for_l3out_routed_sub_interface_port_channel_again.previous == create_bgp_peer_for_l3out_routed_sub_interface_port_channel_again.current == create_bgp_peer_for_l3out_routed_sub_interface_port_channel.current
          - remove_bgp_peer_for_l3out_routed_sub_interface_port_channel is changed
          - remove_bgp_peer_for_l3out_routed_sub_interface_port_channel.previous.peerAddressV4 == "5.5.5.5"
          - remove_bgp_peer_for_l3out_routed_sub_interface_port_channel.previous.templateId is defined
          - remove_bgp_peer_for_l3out_routed_sub_interface_port_channel.previous.templateName is defined
          - remove_bgp_peer_for_l3out_routed_sub_interface_port_channel.previous.portChannelName == "ansible_port_channel_interface_1"
          - remove_bgp_peer_for_l3out_routed_sub_interface_port_channel.previous.portChannelTemplateId is defined
          - remove_bgp_peer_for_l3out_routed_sub_interface_port_channel.previous.portChannelTemplateName is defined
          - remove_bgp_peer_for_l3out_routed_sub_interface_port_channel.previous.routedSubInterfacePathRef is defined
          - remove_bgp_peer_for_l3out_routed_sub_interface_port_channel.previous.routedSubInterfacePathType == "pc"
          - remove_bgp_peer_for_l3out_routed_sub_interface_port_channel.previous.routedSubInterfaceEncap.encapType == "vlan"
          - remove_bgp_peer_for_l3out_routed_sub_interface_port_channel.previous.routedSubInterfaceEncap.value == 100
          - remove_bgp_peer_for_l3out_routed_sub_interface_port_channel.current == {}

    # SVI INTERFACES

    - name: Create a L3out svi interface of type port
      cisco.mso.ndo_l3out_svi_interface: &create_l3out_svi_interface_port
        <<: *mso_info
        template: '{{ mso_l3out_template | default("ansible_test") }}'
        l3out: l3out_1
        node_id: 101
        path: eth1/1
        ipv4_address: 10.0.0.1/24
        mac: 00:22:BD:F8:19:FF
        mtu: inherit
        node_router_id: 1.1.1.1
        encapsulation_type: vlan
        encapsulation_value: 100
        state: present

    - name: Create L3Out BGP Peer on a L3out svi interface of type port
      cisco.mso.ndo_l3out_bgp_peer: &create_bgp_peer_for_l3out_svi_interface_port
        <<: *mso_info
        template: '{{ mso_l3out_template | default("ansible_test") }}'
        l3out: l3out_1
        ipv4_address: 5.5.5.5
        parent_type: "svi"
        node_id: 101
        path: eth1/1
        encapsulation_type: vlan
        encapsulation_value: 100
        state: present
      register: create_bgp_peer_for_l3out_svi_interface_port

    - name: Create L3Out BGP Peer on a L3out svi interface of type port again
      cisco.mso.ndo_l3out_bgp_peer:
        <<: *create_bgp_peer_for_l3out_svi_interface_port
      register: create_bgp_peer_for_l3out_svi_interface_port_again
    
    - name: Remove L3Out BGP Peer on a L3out svi interface of type port
      cisco.mso.ndo_l3out_bgp_peer:
        <<: *create_bgp_peer_for_l3out_svi_interface_port
        state: absent
      register: remove_bgp_peer_for_l3out_svi_interface_port

    - name: Remove a L3out svi interface of type port
      cisco.mso.ndo_l3out_svi_interface:
        <<: *create_l3out_svi_interface_port
        state: absent

    - name: Assert L3Out BGP Peer on a L3out svi interface of type port
      ansible.builtin.assert:
        that:
          - create_bgp_peer_for_l3out_svi_interface_port is changed
          - create_bgp_peer_for_l3out_svi_interface_port.previous == {}
          - create_bgp_peer_for_l3out_svi_interface_port.current.peerAddressV4 == "5.5.5.5"
          - create_bgp_peer_for_l3out_svi_interface_port.current.templateId is defined
          - create_bgp_peer_for_l3out_svi_interface_port.current.templateName is defined
          - create_bgp_peer_for_l3out_svi_interface_port.current.sviInterfaceNodeID == "101"
          - create_bgp_peer_for_l3out_svi_interface_port.current.sviInterfacePath == "eth1/1"
          - create_bgp_peer_for_l3out_svi_interface_port.current.sviInterfacePathType == "port"
          - create_bgp_peer_for_l3out_svi_interface_port.current.sviInterfacePodID == "1"
          - create_bgp_peer_for_l3out_svi_interface_port.current.sviInterfaceEncap.encapType == "vlan"
          - create_bgp_peer_for_l3out_svi_interface_port.current.sviInterfaceEncap.value == 100
          - create_bgp_peer_for_l3out_svi_interface_port_again is not changed
          - create_bgp_peer_for_l3out_svi_interface_port_again.previous == create_bgp_peer_for_l3out_svi_interface_port_again.current == create_bgp_peer_for_l3out_svi_interface_port.current
          - remove_bgp_peer_for_l3out_svi_interface_port is changed
          - remove_bgp_peer_for_l3out_svi_interface_port.previous.peerAddressV4 == "5.5.5.5"
          - remove_bgp_peer_for_l3out_svi_interface_port.previous.templateId is defined
          - remove_bgp_peer_for_l3out_svi_interface_port.previous.templateName is defined
          - remove_bgp_peer_for_l3out_svi_interface_port.previous.sviInterfaceNodeID == "101"
          - remove_bgp_peer_for_l3out_svi_interface_port.previous.sviInterfacePath == "eth1/1"
          - remove_bgp_peer_for_l3out_svi_interface_port.previous.sviInterfacePathType == "port"
          - remove_bgp_peer_for_l3out_svi_interface_port.previous.sviInterfacePodID == "1"
          - remove_bgp_peer_for_l3out_svi_interface_port.previous.sviInterfaceEncap.encapType == "vlan"
          - remove_bgp_peer_for_l3out_svi_interface_port.previous.sviInterfaceEncap.value == 100
          - remove_bgp_peer_for_l3out_svi_interface_port.current == {}

    - name: Create a L3out svi interface of type port channel with uuid
      cisco.mso.ndo_l3out_svi_interface: &create_l3out_svi_interface_port_channel
        <<: *mso_info
        template: '{{ mso_l3out_template | default("ansible_test") }}'
        l3out: l3out_1
        port_channel:
          uuid: '{{ port_channel_interface_1.current.uuid }}'
        ipv4_address: 10.0.0.1/24
        mac: 00:22:BD:F8:19:FF
        mtu: inherit
        node_router_id: 1.1.1.1
        encapsulation_type: vlan
        encapsulation_value: 100
        state: present

    - name: Create L3Out BGP Peer on a L3out svi interface of type port channel
      cisco.mso.ndo_l3out_bgp_peer: &create_bgp_peer_for_l3out_svi_interface_port_channel
        <<: *mso_info
        template: '{{ mso_l3out_template | default("ansible_test") }}'
        l3out: l3out_1
        ipv4_address: 5.5.5.5
        parent_type: "svi"
        port_channel:
          uuid: '{{ port_channel_interface_1.current.uuid }}'
        encapsulation_type: vlan
        encapsulation_value: 100
        state: present
      register: create_bgp_peer_for_l3out_svi_interface_port_channel

    - name: Create L3Out BGP Peer on a L3out svi interface of type port channel again
      cisco.mso.ndo_l3out_bgp_peer:
        <<: *create_bgp_peer_for_l3out_svi_interface_port_channel
      register: create_bgp_peer_for_l3out_svi_interface_port_channel_again

    - name: Remove L3Out BGP Peer on a L3out svi interface of type port channel
      cisco.mso.ndo_l3out_bgp_peer:
        <<: *create_bgp_peer_for_l3out_svi_interface_port_channel
        state: absent
      register: remove_bgp_peer_for_l3out_svi_interface_port_channel

    - name: Remove a L3out svi interface of type port channel
      cisco.mso.ndo_l3out_svi_interface:
        <<: *create_l3out_svi_interface_port_channel
        state: absent

    - name: Assert L3Out BGP Peer on a L3out svi interface of type port channel
      ansible.builtin.assert:
        that:
          - create_bgp_peer_for_l3out_svi_interface_port_channel is changed
          - create_bgp_peer_for_l3out_svi_interface_port_channel.previous == {}
          - create_bgp_peer_for_l3out_svi_interface_port_channel.current.peerAddressV4 == "5.5.5.5"
          - create_bgp_peer_for_l3out_svi_interface_port_channel.current.templateId is defined
          - create_bgp_peer_for_l3out_svi_interface_port_channel.current.templateName is defined
          - create_bgp_peer_for_l3out_svi_interface_port_channel.current.portChannelName == "ansible_port_channel_interface_1"
          - create_bgp_peer_for_l3out_svi_interface_port_channel.current.portChannelTemplateId is defined
          - create_bgp_peer_for_l3out_svi_interface_port_channel.current.portChannelTemplateName is defined
          - create_bgp_peer_for_l3out_svi_interface_port_channel.current.sviInterfacePathRef is defined
          - create_bgp_peer_for_l3out_svi_interface_port_channel.current.sviInterfacePathType == "pc"
          - create_bgp_peer_for_l3out_svi_interface_port_channel.current.sviInterfaceEncap.encapType == "vlan"
          - create_bgp_peer_for_l3out_svi_interface_port_channel.current.sviInterfaceEncap.value == 100
          - create_bgp_peer_for_l3out_svi_interface_port_channel_again is not changed
          - create_bgp_peer_for_l3out_svi_interface_port_channel_again.previous == create_bgp_peer_for_l3out_svi_interface_port_channel_again.current == create_bgp_peer_for_l3out_svi_interface_port_channel.current
          - remove_bgp_peer_for_l3out_svi_interface_port_channel is changed
          - remove_bgp_peer_for_l3out_svi_interface_port_channel.previous.peerAddressV4 == "5.5.5.5"
          - remove_bgp_peer_for_l3out_svi_interface_port_channel.previous.templateId is defined
          - remove_bgp_peer_for_l3out_svi_interface_port_channel.previous.templateName is defined
          - remove_bgp_peer_for_l3out_svi_interface_port_channel.previous.portChannelName == "ansible_port_channel_interface_1"
          - remove_bgp_peer_for_l3out_svi_interface_port_channel.previous.portChannelTemplateId is defined
          - remove_bgp_peer_for_l3out_svi_interface_port_channel.previous.portChannelTemplateName is defined
          - remove_bgp_peer_for_l3out_svi_interface_port_channel.previous.sviInterfacePathRef is defined
          - remove_bgp_peer_for_l3out_svi_interface_port_channel.previous.sviInterfacePathType == "pc"
          - remove_bgp_peer_for_l3out_svi_interface_port_channel.previous.sviInterfaceEncap.encapType == "vlan"
          - remove_bgp_peer_for_l3out_svi_interface_port_channel.previous.sviInterfaceEncap.value == 100
          - remove_bgp_peer_for_l3out_svi_interface_port_channel.current == {}

    - name: Create a L3out svi interface of type virtual port channel with uuid
      cisco.mso.ndo_l3out_svi_interface: &create_l3out_svi_interface_virtual_port_channel
        <<: *mso_info
        template: '{{ mso_l3out_template | default("ansible_test") }}'
        l3out: l3out_1
        virtual_port_channel:
          uuid: '{{ virtual_port_channel_interface_1.current.uuid }}'
          side_b_ipv4_address: 10.0.2.2/24
          side_b_node_router_id: 2.2.2.2
        ipv4_address: 10.0.2.1/24
        mac: 00:22:BD:F8:19:FF
        mtu: inherit
        node_router_id: 1.1.1.1
        encapsulation_type: vlan
        encapsulation_value: 100
        state: present

    - name: Create L3Out BGP Peer on a L3out svi interface of type virtual port channel
      cisco.mso.ndo_l3out_bgp_peer: &create_bgp_peer_for_l3out_svi_interface_virtual_port_channel
        <<: *mso_info
        template: '{{ mso_l3out_template | default("ansible_test") }}'
        l3out: l3out_1
        ipv4_address: 5.5.5.5
        parent_type: "svi"
        virtual_port_channel:
          uuid: '{{ virtual_port_channel_interface_1.current.uuid }}'
        encapsulation_type: vlan
        encapsulation_value: 100
        state: present
      register: create_bgp_peer_for_l3out_svi_interface_virtual_port_channel

    - name: Create L3Out BGP Peer on a L3out svi interface of type virtual port channel again
      cisco.mso.ndo_l3out_bgp_peer:
        <<: *create_bgp_peer_for_l3out_svi_interface_virtual_port_channel
      register: create_bgp_peer_for_l3out_svi_interface_virtual_port_channel_again

    - name: Remove L3Out BGP Peer on a L3out svi interface of type virtual port channel
      cisco.mso.ndo_l3out_bgp_peer:
        <<: *create_bgp_peer_for_l3out_svi_interface_virtual_port_channel
        state: absent
      register: remove_bgp_peer_for_l3out_svi_interface_virtual_port_channel

    - name: Remove a L3out svi interface of type virtual port channel
      cisco.mso.ndo_l3out_svi_interface:
        <<: *create_l3out_svi_interface_virtual_port_channel
        state: absent

    - name: Assert L3Out BGP Peer on a L3out svi interface of type virtual port channel
      ansible.builtin.assert:
        that:
          - create_bgp_peer_for_l3out_svi_interface_virtual_port_channel is changed
          - create_bgp_peer_for_l3out_svi_interface_virtual_port_channel.previous == {}
          - create_bgp_peer_for_l3out_svi_interface_virtual_port_channel.current.peerAddressV4 == "5.5.5.5"
          - create_bgp_peer_for_l3out_svi_interface_virtual_port_channel.current.templateId is defined
          - create_bgp_peer_for_l3out_svi_interface_virtual_port_channel.current.templateName is defined
          - create_bgp_peer_for_l3out_svi_interface_virtual_port_channel.current.virtualPortChannelName == "ansible_virtual_port_channel_interface_1"
          - create_bgp_peer_for_l3out_svi_interface_virtual_port_channel.current.virtualPortChannelTemplateId is defined
          - create_bgp_peer_for_l3out_svi_interface_virtual_port_channel.current.virtualPortChannelTemplateName is defined
          - create_bgp_peer_for_l3out_svi_interface_virtual_port_channel.current.sviInterfacePathRef is defined
          - create_bgp_peer_for_l3out_svi_interface_virtual_port_channel.current.sviInterfacePathType == "vpc"
          - create_bgp_peer_for_l3out_svi_interface_virtual_port_channel.current.sviInterfaceEncap.encapType == "vlan"
          - create_bgp_peer_for_l3out_svi_interface_virtual_port_channel.current.sviInterfaceEncap.value == 100
          - create_bgp_peer_for_l3out_svi_interface_virtual_port_channel_again is not changed
          - create_bgp_peer_for_l3out_svi_interface_virtual_port_channel_again.previous == create_bgp_peer_for_l3out_svi_interface_virtual_port_channel_again.current == create_bgp_peer_for_l3out_svi_interface_virtual_port_channel.current
          - remove_bgp_peer_for_l3out_svi_interface_virtual_port_channel is changed
          - remove_bgp_peer_for_l3out_svi_interface_virtual_port_channel.previous.peerAddressV4 == "5.5.5.5"
          - remove_bgp_peer_for_l3out_svi_interface_virtual_port_channel.previous.templateId is defined
          - remove_bgp_peer_for_l3out_svi_interface_virtual_port_channel.previous.templateName is defined
          - remove_bgp_peer_for_l3out_svi_interface_virtual_port_channel.previous.virtualPortChannelName == "ansible_virtual_port_channel_interface_1"
          - remove_bgp_peer_for_l3out_svi_interface_virtual_port_channel.previous.virtualPortChannelTemplateId is defined
          - remove_bgp_peer_for_l3out_svi_interface_virtual_port_channel.previous.virtualPortChannelTemplateName is defined
          - remove_bgp_peer_for_l3out_svi_interface_virtual_port_channel.previous.sviInterfacePathRef is defined
          - remove_bgp_peer_for_l3out_svi_interface_virtual_port_channel.previous.sviInterfacePathType == "vpc"
          - remove_bgp_peer_for_l3out_svi_interface_virtual_port_channel.previous.sviInterfaceEncap.encapType == "vlan"
          - remove_bgp_peer_for_l3out_svi_interface_virtual_port_channel.previous.sviInterfaceEncap.value == 100
          - remove_bgp_peer_for_l3out_svi_interface_virtual_port_channel.current == {}

    # FLOATING SVI INTERFACES

    - name: Create a L3out floating svi interface
      cisco.mso.ndo_l3out_floating_svi_interface: &create_l3out_floating_svi_interface
        <<: *mso_info
        template: '{{ mso_l3out_template | default("ansible_test") }}'
        l3out: l3out_1
        node_id: 101
        ipv4_address: 10.0.0.1/24
        mac: 00:22:BD:F8:19:FF
        mtu: inherit
        node_router_id: 1.1.1.1
        encapsulation_type: vlan
        encapsulation_value: 100
        state: present

    - name: Create L3Out BGP Peer on a L3out floating svi interface
      cisco.mso.ndo_l3out_bgp_peer: &create_bgp_peer_for_l3out_floating_svi_interface
        <<: *mso_info
        template: '{{ mso_l3out_template | default("ansible_test") }}'
        l3out: l3out_1
        ipv4_address: 5.5.5.5
        parent_type: "floating_svi"
        node_id: 101
        encapsulation_type: vlan
        encapsulation_value: 100
        state: present
      register: create_bgp_peer_for_l3out_floating_svi_interface_port

    - name: Create L3Out BGP Peer on a L3out floating svi interface again
      cisco.mso.ndo_l3out_bgp_peer:
        <<: *create_bgp_peer_for_l3out_floating_svi_interface
      register: create_bgp_peer_for_l3out_floating_svi_interface_port_again

    - name: Remove L3Out BGP Peer on a L3out floating svi interface
      cisco.mso.ndo_l3out_bgp_peer:
        <<: *create_bgp_peer_for_l3out_floating_svi_interface
        state: absent
      register: remove_bgp_peer_for_l3out_floating_svi_interface_port

    - name: Remove a L3out floating svi interface
      cisco.mso.ndo_l3out_floating_svi_interface:
        <<: *create_l3out_floating_svi_interface
        state: absent

    - name: Assert L3Out BGP Peer on a L3out floating svi interface
      ansible.builtin.assert:
        that:
          - create_bgp_peer_for_l3out_floating_svi_interface_port is changed
          - create_bgp_peer_for_l3out_floating_svi_interface_port.previous == {}
          - create_bgp_peer_for_l3out_floating_svi_interface_port.current.peerAddressV4 == "5.5.5.5"
          - create_bgp_peer_for_l3out_floating_svi_interface_port.current.templateId is defined
          - create_bgp_peer_for_l3out_floating_svi_interface_port.current.templateName is defined
          - create_bgp_peer_for_l3out_floating_svi_interface_port.current.floatingSviInterfaceNodeID == "101"
          - create_bgp_peer_for_l3out_floating_svi_interface_port.current.floatingSviInterfacePathType == "anchorNode"
          - create_bgp_peer_for_l3out_floating_svi_interface_port.current.floatingSviInterfacePodID == "1"
          - create_bgp_peer_for_l3out_floating_svi_interface_port.current.floatingSviInterfaceEncap.encapType == "vlan"
          - create_bgp_peer_for_l3out_floating_svi_interface_port.current.floatingSviInterfaceEncap.value == 100
          - create_bgp_peer_for_l3out_floating_svi_interface_port_again is not changed
          - create_bgp_peer_for_l3out_floating_svi_interface_port_again.previous == create_bgp_peer_for_l3out_floating_svi_interface_port_again.current == create_bgp_peer_for_l3out_floating_svi_interface_port.current
          - remove_bgp_peer_for_l3out_floating_svi_interface_port is changed
          - remove_bgp_peer_for_l3out_floating_svi_interface_port.previous.peerAddressV4 == "5.5.5.5"
          - remove_bgp_peer_for_l3out_floating_svi_interface_port.previous.templateId is defined
          - remove_bgp_peer_for_l3out_floating_svi_interface_port.previous.templateName is defined
          - remove_bgp_peer_for_l3out_floating_svi_interface_port.previous.floatingSviInterfaceNodeID == "101"
          - remove_bgp_peer_for_l3out_floating_svi_interface_port.previous.floatingSviInterfacePathType == "anchorNode"
          - remove_bgp_peer_for_l3out_floating_svi_interface_port.previous.floatingSviInterfacePodID == "1"
          - remove_bgp_peer_for_l3out_floating_svi_interface_port.previous.floatingSviInterfaceEncap.encapType == "vlan"
          - remove_bgp_peer_for_l3out_floating_svi_interface_port.previous.floatingSviInterfaceEncap.value == 100
          - remove_bgp_peer_for_l3out_floating_svi_interface_port.current == {}

    # PARENT TYPE INPUT ERRORS

    - name: Error creating L3Out BGP Peer with parent_type node_group without node_group
      cisco.mso.ndo_l3out_bgp_peer:
        <<: *mso_info
        template: '{{ mso_l3out_template | default("ansible_test") }}'
        l3out: l3out_1
        ipv4_address: 5.5.5.5
        # parent_type: "floating_svi"
        state: present
      ignore_errors: true
      register: err_node_group_without_node_group

    - name: Error creating L3Out BGP Peer with parent_type routed without path or port_channel
      cisco.mso.ndo_l3out_bgp_peer:
        <<: *mso_info
        template: '{{ mso_l3out_template | default("ansible_test") }}'
        l3out: l3out_1
        ipv4_address: 5.5.5.5
        parent_type: routed
        state: present
      ignore_errors: true
      register: err_routed_without_path_or_port_channel

    - name: Error creating L3Out BGP Peer with parent_type routed_sub without path or port_channel
      cisco.mso.ndo_l3out_bgp_peer:
        <<: *mso_info
        template: '{{ mso_l3out_template | default("ansible_test") }}'
        l3out: l3out_1
        ipv4_address: 5.5.5.5
        parent_type: routed_sub
        state: present
      ignore_errors: true
      register: err_routed_sub_without_path_or_port_channel

    - name: Error creating L3Out BGP Peer with parent_type routed_sub with path without encapsulation_type and encapsulation_value
      cisco.mso.ndo_l3out_bgp_peer:
        <<: *mso_info
        template: '{{ mso_l3out_template | default("ansible_test") }}'
        l3out: l3out_1
        ipv4_address: 5.5.5.5
        parent_type: routed_sub
        path: eth1/1
        state: present
      ignore_errors: true
      register: err_routed_sub_with_path

    - name: Error creating L3Out BGP Peer with parent_type routed_sub with path and encapsulation_type but without encapsulation_value
      cisco.mso.ndo_l3out_bgp_peer:
        <<: *mso_info
        template: '{{ mso_l3out_template | default("ansible_test") }}'
        l3out: l3out_1
        ipv4_address: 5.5.5.5
        parent_type: routed_sub
        path: eth1/1
        encapsulation_type: vlan
        state: present
      ignore_errors: true
      register: err_routed_sub_with_path_and_encapsulation_type

    - name: Error creating L3Out BGP Peer with parent_type routed_sub with path and encapsulation_value but without encapsulation_type
      cisco.mso.ndo_l3out_bgp_peer:
        <<: *mso_info
        template: '{{ mso_l3out_template | default("ansible_test") }}'
        l3out: l3out_1
        ipv4_address: 5.5.5.5
        parent_type: routed_sub
        path: eth1/1
        encapsulation_value: 100
        state: present
      ignore_errors: true
      register: err_routed_sub_with_path_and_encapsulation_value

    - name: Error creating L3Out BGP Peer with parent_type routed_sub with path without node_id
      cisco.mso.ndo_l3out_bgp_peer:
        <<: *mso_info
        template: '{{ mso_l3out_template | default("ansible_test") }}'
        l3out: l3out_1
        ipv4_address: 5.5.5.5
        parent_type: routed_sub
        path: eth1/1
        encapsulation_type: vlan
        encapsulation_value: 100
        state: present
      ignore_errors: true
      register: err_routed_sub_with_path_without_node_id

    - name: Error creating L3Out BGP Peer with parent_type svi without path, port_channel or vitrual_port_channel
      cisco.mso.ndo_l3out_bgp_peer:
        <<: *mso_info
        template: '{{ mso_l3out_template | default("ansible_test") }}'
        l3out: l3out_1
        ipv4_address: 5.5.5.5
        parent_type: svi
        state: present
      ignore_errors: true
      register: err_svi_without_path_or_port_channel_or_virtual_port_channel

    - name: Error creating L3Out BGP Peer with parent_type routed_sub with path without encapsulation_type and encapsulation_value
      cisco.mso.ndo_l3out_bgp_peer:
        <<: *mso_info
        template: '{{ mso_l3out_template | default("ansible_test") }}'
        l3out: l3out_1
        ipv4_address: 5.5.5.5
        parent_type: svi
        path: eth1/1
        state: present
      ignore_errors: true
      register: err_svi_with_path

    - name: Error creating L3Out BGP Peer with parent_type routed_sub with path and encapsulation_type but without encapsulation_value
      cisco.mso.ndo_l3out_bgp_peer:
        <<: *mso_info
        template: '{{ mso_l3out_template | default("ansible_test") }}'
        l3out: l3out_1
        ipv4_address: 5.5.5.5
        parent_type: svi
        path: eth1/1
        encapsulation_type: vlan
        state: present
      ignore_errors: true
      register: err_svi_with_path_and_encapsulation_type

    - name: Error creating L3Out BGP Peer with parent_type routed_sub with path and encapsulation_value but without encapsulation_type
      cisco.mso.ndo_l3out_bgp_peer:
        <<: *mso_info
        template: '{{ mso_l3out_template | default("ansible_test") }}'
        l3out: l3out_1
        ipv4_address: 5.5.5.5
        parent_type: svi
        path: eth1/1
        encapsulation_value: 100
        state: present
      ignore_errors: true
      register: err_svi_with_path_and_encapsulation_value

    - name: Error creating L3Out BGP Peer with parent_type floating_svi without node_id, encapsulation_type or encapsulation_value
      cisco.mso.ndo_l3out_bgp_peer:
        <<: *mso_info
        template: '{{ mso_l3out_template | default("ansible_test") }}'
        l3out: l3out_1
        ipv4_address: 5.5.5.5
        parent_type: floating_svi
        state: present
      ignore_errors: true
      register: err_floating_svi_without_node_id_or_encapsulation_type_or_encapsulation_value

    - name: Error creating L3Out BGP Peer with parent_type floating_svi without node_id
      cisco.mso.ndo_l3out_bgp_peer:
        <<: *mso_info
        template: '{{ mso_l3out_template | default("ansible_test") }}'
        l3out: l3out_1
        ipv4_address: 5.5.5.5
        parent_type: floating_svi
        encapsulation_type: vlan
        encapsulation_value: 100
        state: present
      ignore_errors: true
      register: err_floating_svi_without_node_id

    - name: Error creating L3Out BGP Peer with parent_type floating_svi without encapsulation_type
      cisco.mso.ndo_l3out_bgp_peer:
        <<: *mso_info
        template: '{{ mso_l3out_template | default("ansible_test") }}'
        l3out: l3out_1
        ipv4_address: 5.5.5.5
        parent_type: floating_svi
        node_id: 101
        encapsulation_value: 100
        state: present
      ignore_errors: true
      register: err_floating_svi_without_encapsulation_type

    - name: Error creating L3Out BGP Peer with parent_type floating_svi without encapsulation_value
      cisco.mso.ndo_l3out_bgp_peer:
        <<: *mso_info
        template: '{{ mso_l3out_template | default("ansible_test") }}'
        l3out: l3out_1
        ipv4_address: 5.5.5.5
        parent_type: floating_svi
        node_id: 101
        encapsulation_type: vlan
        state: present
      ignore_errors: true
      register: err_floating_svi_without_encapsulation_value

    - name: Error mutually exclusive parameters port_channel and path
      cisco.mso.ndo_l3out_bgp_peer:
        <<: *mso_info
        template: '{{ mso_l3out_template | default("ansible_test") }}'
        l3out: l3out_1
        ipv4_address: 5.5.5.5
        parent_type: svi
        path: eth1/1
        node_id: 101
        port_channel:
          uuid: some_value
        encapsulation_type: vlan
        encapsulation_value: 100
        state: present
      ignore_errors: true
      register: err_mutually_exclusive_port_channel_path

    - name: Error mutually exclusive parameters port_channel and node_id
      cisco.mso.ndo_l3out_bgp_peer:
        <<: *mso_info
        template: '{{ mso_l3out_template | default("ansible_test") }}'
        l3out: l3out_1
        ipv4_address: 5.5.5.5
        parent_type: svi
        node_id: 101
        port_channel:
          uuid: some_value
        encapsulation_type: vlan
        encapsulation_value: 100
        state: present
      ignore_errors: true
      register: err_mutually_exclusive_port_channel_node_id

    - name: Error mutually exclusive parameters port_channel and virtual_port_channel
      cisco.mso.ndo_l3out_bgp_peer:
        <<: *mso_info
        template: '{{ mso_l3out_template | default("ansible_test") }}'
        l3out: l3out_1
        ipv4_address: 5.5.5.5
        parent_type: svi
        port_channel:
          uuid: some_value
        virtual_port_channel:
          uuid: some_value
        encapsulation_type: vlan
        encapsulation_value: 100
        state: present
      ignore_errors: true
      register: err_mutually_exclusive_port_channel_virtual_port_channel

    - name: Error mutually exclusive parameters virtual_port_channel and path
      cisco.mso.ndo_l3out_bgp_peer:
        <<: *mso_info
        template: '{{ mso_l3out_template | default("ansible_test") }}'
        l3out: l3out_1
        ipv4_address: 5.5.5.5
        parent_type: svi
        path: eth1/1
        node_id: 101
        virtual_port_channel:
          uuid: some_value
        encapsulation_type: vlan
        encapsulation_value: 100
        state: present
      ignore_errors: true
      register: err_mutually_exclusive_virtual_port_channel_path

    - name: Error mutually exclusive parameters virtual_port_channel and node_id
      cisco.mso.ndo_l3out_bgp_peer:
        <<: *mso_info
        template: '{{ mso_l3out_template | default("ansible_test") }}'
        l3out: l3out_1
        ipv4_address: 5.5.5.5
        parent_type: svi
        node_id: 101
        virtual_port_channel:
          uuid: some_value
        encapsulation_type: vlan
        encapsulation_value: 100
        state: present
      ignore_errors: true
      register: err_mutually_exclusive_virtual_port_channel_node_id

    - name: Set errors message to handle quotes in string
      ansible.builtin.set_fact:
        error_missing_node_id: "missing parameter(s) required by 'path': node_id"

    - name: Assert input errors for creating L3Out BGP Peer
      ansible.builtin.assert:
        that:
          - err_node_group_without_node_group.failed
          - 'err_node_group_without_node_group.msg == "parent_type is node_group but all of the following are missing: node_group"'
          - err_routed_without_path_or_port_channel.failed
          - 'err_routed_without_path_or_port_channel.msg == "parent_type is routed but any of the following are missing: path, port_channel"'
          - err_routed_sub_without_path_or_port_channel.failed
          - 'err_routed_sub_without_path_or_port_channel.msg == "parent_type is routed_sub but any of the following are missing: path, port_channel"'
          - err_routed_sub_with_path.failed
          - 'err_routed_sub_with_path.msg == "parent_type is routed_sub but all of the following are missing: encapsulation_type, encapsulation_value"'
          - err_routed_sub_with_path_and_encapsulation_type.failed
          - 'err_routed_sub_with_path_and_encapsulation_type.msg == "parent_type is routed_sub but all of the following are missing: encapsulation_value"'
          - err_routed_sub_with_path_and_encapsulation_value.failed
          - 'err_routed_sub_with_path_and_encapsulation_value.msg == "parent_type is routed_sub but all of the following are missing: encapsulation_type"'
          - err_routed_sub_with_path_without_node_id.failed
          - err_routed_sub_with_path_without_node_id.msg == error_missing_node_id
          - err_svi_without_path_or_port_channel_or_virtual_port_channel.failed
          - 'err_svi_without_path_or_port_channel_or_virtual_port_channel.msg == "parent_type is svi but any of the following are missing: path, port_channel, virtual_port_channel"'
          - err_svi_with_path.failed
          - 'err_svi_with_path.msg == "parent_type is svi but all of the following are missing: encapsulation_type, encapsulation_value"'
          - err_svi_with_path_and_encapsulation_type.failed
          - 'err_svi_with_path_and_encapsulation_type.msg == "parent_type is svi but all of the following are missing: encapsulation_value"'
          - err_svi_with_path_and_encapsulation_value.failed
          - 'err_svi_with_path_and_encapsulation_value.msg == "parent_type is svi but all of the following are missing: encapsulation_type"'
          - err_floating_svi_without_node_id_or_encapsulation_type_or_encapsulation_value.failed
          - 'err_floating_svi_without_node_id_or_encapsulation_type_or_encapsulation_value.msg == "parent_type is floating_svi but all of the following are missing: node_id, encapsulation_type, encapsulation_value"'
          - err_floating_svi_without_node_id.failed
          - 'err_floating_svi_without_node_id.msg == "parent_type is floating_svi but all of the following are missing: node_id"'
          - err_floating_svi_without_encapsulation_type.failed
          - 'err_floating_svi_without_encapsulation_type.msg == "parent_type is floating_svi but all of the following are missing: encapsulation_type"'
          - err_floating_svi_without_encapsulation_value.failed
          - 'err_floating_svi_without_encapsulation_value.msg == "parent_type is floating_svi but all of the following are missing: encapsulation_value"'
          - err_mutually_exclusive_port_channel_path.failed
          - 'err_mutually_exclusive_port_channel_path.msg == "parameters are mutually exclusive: port_channel|path, port_channel|node_id"'
          - err_mutually_exclusive_port_channel_node_id.failed
          - 'err_mutually_exclusive_port_channel_node_id.msg == "parameters are mutually exclusive: port_channel|node_id"'
          - err_mutually_exclusive_port_channel_virtual_port_channel.failed
          - 'err_mutually_exclusive_port_channel_virtual_port_channel.msg == "parameters are mutually exclusive: port_channel|virtual_port_channel"'
          - err_mutually_exclusive_virtual_port_channel_path.failed
          - 'err_mutually_exclusive_virtual_port_channel_path.msg == "parameters are mutually exclusive: virtual_port_channel|path, virtual_port_channel|node_id"'
          - err_mutually_exclusive_virtual_port_channel_node_id.failed
          - 'err_mutually_exclusive_virtual_port_channel_node_id.msg == "parameters are mutually exclusive: virtual_port_channel|node_id"'

    # CLEANUP TEMPLATE
    - name: Ensure l3out template not exist
      cisco.mso.ndo_template:
        <<: *ndo_l3out_template_absent

    - name: Ensure ansible_test_policy tenant policy template not exists
      cisco.mso.ndo_template:
        <<: *tenant_pol_template_absent

    - name: Remove ansible_fabric_resource_template fabric_resource template
      cisco.mso.ndo_template:
        <<: *ndo_fabric_resource_template_absent

    - name: Remove ansible_fabric_policy_template fabric_policy template
      cisco.mso.ndo_template:
        <<: *ndo_fabric_policy_template_absent

    - name: Ensure ansible_test schema template not exist
      cisco.mso.mso_schema_template:
        <<: *mso_schema_template_absent
