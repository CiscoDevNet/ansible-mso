# Test code for the MSO modules
# Copyright: (c) 2024, Sabari Jaganathan (@sajagana) <sajagana@cisco.com>

# GNU General Public License v3.0+ (see LICENSE or https://www.gnu.org/licenses/gpl-3.0.txt)

- name: Test that we have an ACI MultiSite host, username and password
  ansible.builtin.fail:
    msg: "Please define the following variables: mso_hostname, mso_username and mso_password."
  when: mso_hostname is not defined or mso_username is not defined or mso_password is not defined

# CLEAN ENVIRONMENT
- name: Set vars
  ansible.builtin.set_fact:
    mso_info: &mso_info
      host: "{{ mso_hostname }}"
      username: "{{ mso_username }}"
      password: "{{ mso_password }}"
      validate_certs: "{{ mso_validate_certs | default(false) }}"
      use_ssl: "{{ mso_use_ssl | default(true) }}"
      use_proxy: "{{ mso_use_proxy | default(true) }}"
      output_level: '{{ mso_output_level | default("info") }}'

# QUERY VERSION
- name: Query MSO version
  cisco.mso.mso_version:
    <<: *mso_info
    state: query
  register: version

- name: Execute tasks only for NDO version > 4.2
  when: version.current.version is version('4.2', '>')
  block:
    # Setup Part
    - name: Ensure l3out template not exist
      cisco.mso.ndo_template: &ndo_l3out_template_absent
        <<: *mso_info
        template: '{{ ansible_l3out_template | default("ansible_test") }}'
        template_type: l3out
        tenant: '{{ ansible_tenant | default("ansible_test") }}'
        sites:
          - name: '{{ mso_site | default("ansible_test") }}'
        state: absent

    - name: Ensure tenant policy template not exists
      cisco.mso.ndo_template: &tenant_pol_template_absent
        <<: *mso_info
        name: ansible_test_policy
        template_type: tenant
        tenant: '{{ ansible_tenant | default("ansible_test") }}'
        state: absent

    - name: Ensure fabric_policy template not exists
      cisco.mso.ndo_template: &fabric_pol_template_absent
        <<: *mso_info
        name: ans_fabric_pol_template
        template_type: fabric_policy
        state: absent

    - name: Ensure ansible_test schema template not exist
      cisco.mso.mso_schema_template: &mso_schema_template_absent
        <<: *mso_info
        schema: '{{ ansible_schema | default("ansible_test") }}'
        tenant: '{{ ansible_tenant | default("ansible_test") }}'
        template: "Template1"
        state: absent

    - name: Ensure ansible_test site exist
      cisco.mso.mso_site:
        <<: *mso_info
        site: '{{ mso_site | default("ansible_test") }}'
        state: query
      register: ansible_test_site

    - name: Ensure ansible_test tenant exist
      cisco.mso.mso_tenant:
        <<: *mso_info
        tenant: '{{ ansible_tenant | default("ansible_test") }}'
        users:
          - "{{ mso_username }}"
        sites:
          - '{{ mso_site | default("ansible_test") }}'
        state: present
      register: ansible_test_tenant
      when: ansible_test_site.current.common.name == 'ansible_test'

    # Schema Template Setup for the VRF
    - name: Add an ansible_test schema template
      cisco.mso.mso_schema_template:
        <<: *mso_schema_template_absent
        state: present

    - name: Add a new VRF1
      cisco.mso.mso_schema_template_vrf: &vrf1_present
        <<: *mso_info
        schema: '{{ ansible_schema | default("ansible_test") }}'
        template: "Template1"
        vrf: VRF1
        state: present

    - name: Add a new VRF2 with layer3_multicast
      cisco.mso.mso_schema_template_vrf:
        <<: *vrf1_present
        vrf: VRF2
        layer3_multicast: true
        state: present

    # Tenant Policy Template Setup for the Route Map
    - name: Ensure tenant policy template exists
      cisco.mso.ndo_template:
        <<: *tenant_pol_template_absent
        state: present
      register: ansible_test_policy

    - name: Add a new Route Map Policy for Route Control
      cisco.mso.mso_rest:
        <<: *mso_info
        path: "/mso/api/v1/templates/{{ ansible_test_policy.current.templateId }}"
        method: patch
        content:
          - op: add
            path: "/tenantPolicyTemplate/template/routeMapPolicies/-"
            value:
              name: "{{ item }}"
              description: ""
              rtMapEntryList:
                - rtMapContext:
                    order: 0
                    name: ctxName
                    action: permit
      loop:
        - ans_route_map
        - ans_route_map_2

    # Fabric Policy Template Setup for the L3Out Domain
    - name: Ensure fabric_policy template exists
      cisco.mso.ndo_template:
        <<: *fabric_pol_template_absent
        sites:
          - name: '{{ mso_site | default("ansible_test") }}'
        state: present
      register: ans_fabric_pol_template

    - name: Create a new vlan pool
      cisco.mso.ndo_vlan_pool:
        <<: *mso_info
        template: ans_fabric_pol_template
        vlan_pool: "ansible_test_vlan_pool_1"
        vlan_ranges:
          - from_vlan: 100
            to_vlan: 100
        state: present

    - name: Create a new ans_l3_domain
      cisco.mso.ndo_l3_domain:
        <<: *mso_info
        template: ans_fabric_pol_template
        l3_domain: ans_l3_domain
        pool: ansible_test_vlan_pool_1
        state: present

    # L3Out Template Setup
    - name: Create a new l3out template
      cisco.mso.ndo_template:
        <<: *ndo_l3out_template_absent
        state: present
      register: create_new_l3out_policy_template

    # Test Part
    - name: Query all L3Out objects when the L3Out template is empty
      cisco.mso.ndo_l3out_template:
        <<: *mso_info
        l3out_template: '{{ ansible_l3out_template | default("ansible_test") }}'
        state: "query"
      register: query_all_l3outs_with_empty_template

    - name: Assertion check for query all L3Out objects when the L3Out template is empty
      ansible.builtin.assert:
        that:
          - query_all_l3outs_with_empty_template is not changed
          - query_all_l3outs_with_empty_template.current == {}

    - name: Create L3Out object with default values - check_mode
      cisco.mso.ndo_l3out_template: &cm_l3out_1_present
        <<: *mso_info
        l3out_template: '{{ ansible_l3out_template | default("ansible_test") }}'
        name: "l3out_1"
        vrf:
          name: "VRF1"
          schema: '{{ ansible_schema | default("ansible_test") }}'
          template: "Template1"
        state: "present"
        output_level: debug
      check_mode: true
      register: cm_l3out_1_present

    - name: Assertion check for create L3Out object with default values - check_mode
      ansible.builtin.assert:
        that:
          - cm_l3out_1_present is changed
          - cm_l3out_1_present.current.name == "l3out_1"
          - cm_l3out_1_present.current.routingProtocol == "none"
          - cm_l3out_1_present.current.vrfRef != ""
          - cm_l3out_1_present.previous == {}
          - cm_l3out_1_present.proposed.name == "l3out_1"
          - cm_l3out_1_present.proposed.routingProtocol == "none"
          - cm_l3out_1_present.proposed.vrfRef != ""

    - name: Create L3Out object with default values - normal_mode
      cisco.mso.ndo_l3out_template: &nm_l3out_1_present
        <<: *cm_l3out_1_present
      register: nm_l3out_1_present

    - name: Assertion check for create L3Out object with default values - normal_mode
      ansible.builtin.assert:
        that:
          - nm_l3out_1_present is changed
          - nm_l3out_1_present.current.name == "l3out_1"
          - nm_l3out_1_present.current.routingProtocol == "none"
          - nm_l3out_1_present.current.vrfRef != ""
          - nm_l3out_1_present.previous == {}
          - nm_l3out_1_present.proposed.name == "l3out_1"
          - nm_l3out_1_present.proposed.routingProtocol == "none"
          - nm_l3out_1_present.proposed.vrfRef != ""

    - name: Create L3Out object with default values - normal_mode - again
      cisco.mso.ndo_l3out_template:
        <<: *nm_l3out_1_present
      register: nm_l3out_1_present_again

    - name: Assertion check for create L3Out object with default values - normal_mode - again
      ansible.builtin.assert:
        that:
          - nm_l3out_1_present_again is not changed
          - nm_l3out_1_present_again.current.importRouteControl == false
          - nm_l3out_1_present_again.current.l3domain == ""
          - nm_l3out_1_present_again.current.name == "l3out_1"
          - nm_l3out_1_present_again.current.pim == false
          - nm_l3out_1_present_again.current.routingProtocol == "none"
          - nm_l3out_1_present_again.current.tagAnnotations == []
          - nm_l3out_1_present_again.current.targetDscp == "unspecified"
          - nm_l3out_1_present_again.current.uuid is defined
          - nm_l3out_1_present_again.current.vrfRef != ""
          - nm_l3out_1_present_again.previous.importRouteControl == false
          - nm_l3out_1_present_again.previous.l3domain == ""
          - nm_l3out_1_present_again.previous.name == "l3out_1"
          - nm_l3out_1_present_again.previous.pim == false
          - nm_l3out_1_present_again.previous.routingProtocol == "none"
          - nm_l3out_1_present_again.previous.tagAnnotations == []
          - nm_l3out_1_present_again.previous.targetDscp == "unspecified"
          - nm_l3out_1_present_again.previous.uuid is defined
          - nm_l3out_1_present_again.previous.vrfRef != ""
          - nm_l3out_1_present_again.proposed.importRouteControl == false
          - nm_l3out_1_present_again.proposed.l3domain == ""
          - nm_l3out_1_present_again.proposed.name == "l3out_1"
          - nm_l3out_1_present_again.proposed.pim == false
          - nm_l3out_1_present_again.proposed.routingProtocol == "none"
          - nm_l3out_1_present_again.proposed.tagAnnotations == []
          - nm_l3out_1_present_again.proposed.targetDscp == "unspecified"
          - nm_l3out_1_present_again.proposed.uuid is defined
          - nm_l3out_1_present_again.proposed.vrfRef != ""

    - name: Update L3Out object with check_mode
      cisco.mso.ndo_l3out_template: &cm_l3out_1_update
        <<: *mso_info
        l3out_template: '{{ ansible_l3out_template | default("ansible_test") }}'
        name: "l3out_1"
        l3_domain: ans_l3_domain
        vrf:
          name: "VRF1"
          schema: '{{ ansible_schema | default("ansible_test") }}'
          template: "Template1"
        description: "test description"
        pim: false
        target_dscp: "unspecified"
        interleak: "ans_route_map"
        static_route_redistribution: "ans_route_map"
        connected_route_redistribution: "ans_route_map"
        attached_host_route_redistribution: "ans_route_map"
        ospf:
          state: enabled
          area_id: "0.0.0.1"
          area_type: "regular"
          cost: 1
          send_redistributed_lsas: true
          originate_summary_lsa: true
          suppress_forwarding_addr_translated_lsa: true
          originate_default_route: "only"
          originate_default_route_always: false
        bgp:
          state: enabled
          route_dampening_ipv4: "ans_route_map"
          route_dampening_ipv6: "ans_route_map"
          inbound_route_map: "ans_route_map"
          outbound_route_map: "ans_route_map"
        state: "present"
        output_level: debug
      register: cm_l3out_1_update
      check_mode: true

    - name: Assertion check for update L3Out object with check_mode
      ansible.builtin.assert:
        that:
          - cm_l3out_1_update is changed
          - cm_l3out_1_update.current.advancedRouteMapRefs.attachedHostRouteRedistRef != ""
          - cm_l3out_1_update.current.advancedRouteMapRefs.connectedRouteRedistRef != ""
          - cm_l3out_1_update.current.advancedRouteMapRefs.interleakRef != ""
          - cm_l3out_1_update.current.advancedRouteMapRefs.routeDampeningV4Ref != ""
          - cm_l3out_1_update.current.advancedRouteMapRefs.routeDampeningV6Ref != ""
          - cm_l3out_1_update.current.advancedRouteMapRefs.staticRouteRedistRef != ""
          - cm_l3out_1_update.current.defaultRouteLeak.always == false
          - cm_l3out_1_update.current.defaultRouteLeak.originateDefaultRoute == "only"
          - cm_l3out_1_update.current.description == "test description"
          - cm_l3out_1_update.current.exportRouteMapRef != ""
          - cm_l3out_1_update.current.importRouteControl == true
          - cm_l3out_1_update.current.importRouteMapRef != ""
          - cm_l3out_1_update.current.l3domain == "ans_l3_domain"
          - cm_l3out_1_update.current.name == "l3out_1"
          - cm_l3out_1_update.current.ospfAreaConfig.areaType == "regular"
          - cm_l3out_1_update.current.ospfAreaConfig.control.originate == true
          - cm_l3out_1_update.current.ospfAreaConfig.control.redistribute == true
          - cm_l3out_1_update.current.ospfAreaConfig.control.suppressFA == true
          - cm_l3out_1_update.current.ospfAreaConfig.cost == 1
          - cm_l3out_1_update.current.ospfAreaConfig.id == "0.0.0.1"
          - cm_l3out_1_update.current.pim == false
          - cm_l3out_1_update.current.routingProtocol == "bgpOspf"
          - cm_l3out_1_update.current.tagAnnotations == []
          - cm_l3out_1_update.current.targetDscp == "unspecified"
          - cm_l3out_1_update.current.uuid is defined
          - cm_l3out_1_update.current.vrfRef != ""
          - cm_l3out_1_update.previous.importRouteControl == false
          - cm_l3out_1_update.previous.l3domain == ""
          - cm_l3out_1_update.previous.name == "l3out_1"
          - cm_l3out_1_update.previous.pim == false
          - cm_l3out_1_update.previous.routingProtocol == "none"
          - cm_l3out_1_update.previous.tagAnnotations == []
          - cm_l3out_1_update.previous.targetDscp == "unspecified"
          - cm_l3out_1_update.previous.uuid is defined
          - cm_l3out_1_update.previous.vrfRef != ""
          - cm_l3out_1_update.proposed.advancedRouteMapRefs.attachedHostRouteRedistRef != ""
          - cm_l3out_1_update.proposed.advancedRouteMapRefs.connectedRouteRedistRef != ""
          - cm_l3out_1_update.proposed.advancedRouteMapRefs.interleakRef != ""
          - cm_l3out_1_update.proposed.advancedRouteMapRefs.routeDampeningV4Ref != ""
          - cm_l3out_1_update.proposed.advancedRouteMapRefs.routeDampeningV6Ref != ""
          - cm_l3out_1_update.proposed.advancedRouteMapRefs.staticRouteRedistRef != ""
          - cm_l3out_1_update.proposed.defaultRouteLeak.always == false
          - cm_l3out_1_update.proposed.defaultRouteLeak.originateDefaultRoute == "only"
          - cm_l3out_1_update.proposed.description == "test description"
          - cm_l3out_1_update.proposed.exportRouteMapRef != ""
          - cm_l3out_1_update.proposed.importRouteControl == true
          - cm_l3out_1_update.proposed.importRouteMapRef != ""
          - cm_l3out_1_update.proposed.l3domain == "ans_l3_domain"
          - cm_l3out_1_update.proposed.name == "l3out_1"
          - cm_l3out_1_update.proposed.ospfAreaConfig.areaType == "regular"
          - cm_l3out_1_update.proposed.ospfAreaConfig.control.originate == true
          - cm_l3out_1_update.proposed.ospfAreaConfig.control.redistribute == true
          - cm_l3out_1_update.proposed.ospfAreaConfig.control.suppressFA == true
          - cm_l3out_1_update.proposed.ospfAreaConfig.cost == 1
          - cm_l3out_1_update.proposed.ospfAreaConfig.id == "0.0.0.1"
          - cm_l3out_1_update.proposed.pim == false
          - cm_l3out_1_update.proposed.routingProtocol == "bgpOspf"
          - cm_l3out_1_update.proposed.tagAnnotations == []
          - cm_l3out_1_update.proposed.targetDscp == "unspecified"
          - cm_l3out_1_update.proposed.uuid is defined
          - cm_l3out_1_update.proposed.vrfRef != ""

    - name: Update L3Out object with normal_mode
      cisco.mso.ndo_l3out_template: &nm_l3out_1_update
        <<: *cm_l3out_1_update
      register: nm_l3out_1_update

    - name: Assertion check for update L3Out object with normal_mode
      ansible.builtin.assert:
        that:
          - nm_l3out_1_update is changed
          - nm_l3out_1_update.current.advancedRouteMapRefs.attachedHostRouteRedistRef != ""
          - nm_l3out_1_update.current.advancedRouteMapRefs.connectedRouteRedistRef != ""
          - nm_l3out_1_update.current.advancedRouteMapRefs.interleakRef != ""
          - nm_l3out_1_update.current.advancedRouteMapRefs.routeDampeningV4Ref != ""
          - nm_l3out_1_update.current.advancedRouteMapRefs.routeDampeningV6Ref != ""
          - nm_l3out_1_update.current.advancedRouteMapRefs.staticRouteRedistRef != ""
          - nm_l3out_1_update.current.defaultRouteLeak.always == false
          - nm_l3out_1_update.current.defaultRouteLeak.originateDefaultRoute == "only"
          - nm_l3out_1_update.current.description == "test description"
          - nm_l3out_1_update.current.exportRouteMapRef != ""
          - nm_l3out_1_update.current.importRouteControl == true
          - nm_l3out_1_update.current.importRouteMapRef != ""
          - nm_l3out_1_update.current.l3domain == "ans_l3_domain"
          - nm_l3out_1_update.current.name == "l3out_1"
          - nm_l3out_1_update.current.ospfAreaConfig.areaType == "regular"
          - nm_l3out_1_update.current.ospfAreaConfig.control.originate == true
          - nm_l3out_1_update.current.ospfAreaConfig.control.redistribute == true
          - nm_l3out_1_update.current.ospfAreaConfig.control.suppressFA == true
          - nm_l3out_1_update.current.ospfAreaConfig.cost == 1
          - nm_l3out_1_update.current.ospfAreaConfig.id == "0.0.0.1"
          - nm_l3out_1_update.current.pim == false
          - nm_l3out_1_update.current.routingProtocol == "bgpOspf"
          - nm_l3out_1_update.current.tagAnnotations == []
          - nm_l3out_1_update.current.targetDscp == "unspecified"
          - nm_l3out_1_update.current.uuid is defined
          - nm_l3out_1_update.current.vrfRef != ""
          - nm_l3out_1_update.previous.importRouteControl == false
          - nm_l3out_1_update.previous.l3domain == ""
          - nm_l3out_1_update.previous.name == "l3out_1"
          - nm_l3out_1_update.previous.pim == false
          - nm_l3out_1_update.previous.routingProtocol == "none"
          - nm_l3out_1_update.previous.tagAnnotations == []
          - nm_l3out_1_update.previous.targetDscp == "unspecified"
          - nm_l3out_1_update.previous.uuid is defined
          - nm_l3out_1_update.previous.vrfRef != ""
          - nm_l3out_1_update.proposed.advancedRouteMapRefs.attachedHostRouteRedistRef != ""
          - nm_l3out_1_update.proposed.advancedRouteMapRefs.connectedRouteRedistRef != ""
          - nm_l3out_1_update.proposed.advancedRouteMapRefs.interleakRef != ""
          - nm_l3out_1_update.proposed.advancedRouteMapRefs.routeDampeningV4Ref != ""
          - nm_l3out_1_update.proposed.advancedRouteMapRefs.routeDampeningV6Ref != ""
          - nm_l3out_1_update.proposed.advancedRouteMapRefs.staticRouteRedistRef != ""
          - nm_l3out_1_update.proposed.defaultRouteLeak.always == false
          - nm_l3out_1_update.proposed.defaultRouteLeak.originateDefaultRoute == "only"
          - nm_l3out_1_update.proposed.description == "test description"
          - nm_l3out_1_update.proposed.exportRouteMapRef != ""
          - nm_l3out_1_update.proposed.importRouteControl == true
          - nm_l3out_1_update.proposed.importRouteMapRef != ""
          - nm_l3out_1_update.proposed.l3domain == "ans_l3_domain"
          - nm_l3out_1_update.proposed.name == "l3out_1"
          - nm_l3out_1_update.proposed.ospfAreaConfig.areaType == "regular"
          - nm_l3out_1_update.proposed.ospfAreaConfig.control.originate == true
          - nm_l3out_1_update.proposed.ospfAreaConfig.control.redistribute == true
          - nm_l3out_1_update.proposed.ospfAreaConfig.control.suppressFA == true
          - nm_l3out_1_update.proposed.ospfAreaConfig.cost == 1
          - nm_l3out_1_update.proposed.ospfAreaConfig.id == "0.0.0.1"
          - nm_l3out_1_update.proposed.pim == false
          - nm_l3out_1_update.proposed.routingProtocol == "bgpOspf"
          - nm_l3out_1_update.proposed.tagAnnotations == []
          - nm_l3out_1_update.proposed.targetDscp == "unspecified"
          - nm_l3out_1_update.proposed.uuid is defined
          - nm_l3out_1_update.proposed.vrfRef != ""

    - name: Update L3Out object with normal_mode - again
      cisco.mso.ndo_l3out_template:
        <<: *nm_l3out_1_update
      register: nm_l3out_1_update_again

    - name: Assertion check for update L3Out object with normal_mode - again
      ansible.builtin.assert:
        that:
          - nm_l3out_1_update_again is not changed
          - nm_l3out_1_update_again.current.advancedRouteMapRefs.attachedHostRouteRedistRef != ""
          - nm_l3out_1_update_again.current.advancedRouteMapRefs.connectedRouteRedistRef != ""
          - nm_l3out_1_update_again.current.advancedRouteMapRefs.interleakRef != ""
          - nm_l3out_1_update_again.current.advancedRouteMapRefs.routeDampeningV4Ref != ""
          - nm_l3out_1_update_again.current.advancedRouteMapRefs.routeDampeningV6Ref != ""
          - nm_l3out_1_update_again.current.advancedRouteMapRefs.staticRouteRedistRef != ""
          - nm_l3out_1_update_again.current.defaultRouteLeak.always == false
          - nm_l3out_1_update_again.current.defaultRouteLeak.originateDefaultRoute == "only"
          - nm_l3out_1_update_again.current.description == "test description"
          - nm_l3out_1_update_again.current.exportRouteMapRef != ""
          - nm_l3out_1_update_again.current.importRouteControl == true
          - nm_l3out_1_update_again.current.importRouteMapRef != ""
          - nm_l3out_1_update_again.current.l3domain == "ans_l3_domain"
          - nm_l3out_1_update_again.current.name == "l3out_1"
          - nm_l3out_1_update_again.current.ospfAreaConfig.areaType == "regular"
          - nm_l3out_1_update_again.current.ospfAreaConfig.control.originate == true
          - nm_l3out_1_update_again.current.ospfAreaConfig.control.redistribute == true
          - nm_l3out_1_update_again.current.ospfAreaConfig.control.suppressFA == true
          - nm_l3out_1_update_again.current.ospfAreaConfig.cost == 1
          - nm_l3out_1_update_again.current.ospfAreaConfig.id == "0.0.0.1"
          - nm_l3out_1_update_again.current.pim == false
          - nm_l3out_1_update_again.current.routingProtocol == "bgpOspf"
          - nm_l3out_1_update_again.current.tagAnnotations == []
          - nm_l3out_1_update_again.current.targetDscp == "unspecified"
          - nm_l3out_1_update_again.current.uuid is defined
          - nm_l3out_1_update_again.current.vrfRef != ""
          - nm_l3out_1_update_again.previous.advancedRouteMapRefs.attachedHostRouteRedistRef != ""
          - nm_l3out_1_update_again.previous.advancedRouteMapRefs.connectedRouteRedistRef != ""
          - nm_l3out_1_update_again.previous.advancedRouteMapRefs.interleakRef != ""
          - nm_l3out_1_update_again.previous.advancedRouteMapRefs.routeDampeningV4Ref != ""
          - nm_l3out_1_update_again.previous.advancedRouteMapRefs.routeDampeningV6Ref != ""
          - nm_l3out_1_update_again.previous.advancedRouteMapRefs.staticRouteRedistRef != ""
          - nm_l3out_1_update_again.previous.defaultRouteLeak.always == false
          - nm_l3out_1_update_again.previous.defaultRouteLeak.originateDefaultRoute == "only"
          - nm_l3out_1_update_again.previous.description == "test description"
          - nm_l3out_1_update_again.previous.exportRouteMapRef != ""
          - nm_l3out_1_update_again.previous.importRouteControl == true
          - nm_l3out_1_update_again.previous.importRouteMapRef != ""
          - nm_l3out_1_update_again.previous.l3domain == "ans_l3_domain"
          - nm_l3out_1_update_again.previous.name == "l3out_1"
          - nm_l3out_1_update_again.previous.ospfAreaConfig.areaType == "regular"
          - nm_l3out_1_update_again.previous.ospfAreaConfig.control.originate == true
          - nm_l3out_1_update_again.previous.ospfAreaConfig.control.redistribute == true
          - nm_l3out_1_update_again.previous.ospfAreaConfig.control.suppressFA == true
          - nm_l3out_1_update_again.previous.ospfAreaConfig.cost == 1
          - nm_l3out_1_update_again.previous.ospfAreaConfig.id == "0.0.0.1"
          - nm_l3out_1_update_again.previous.pim == false
          - nm_l3out_1_update_again.previous.routingProtocol == "bgpOspf"
          - nm_l3out_1_update_again.previous.tagAnnotations == []
          - nm_l3out_1_update_again.previous.targetDscp == "unspecified"
          - nm_l3out_1_update_again.previous.uuid is defined
          - nm_l3out_1_update_again.previous.vrfRef != ""
          - nm_l3out_1_update_again.proposed.advancedRouteMapRefs.attachedHostRouteRedistRef != ""
          - nm_l3out_1_update_again.proposed.advancedRouteMapRefs.connectedRouteRedistRef != ""
          - nm_l3out_1_update_again.proposed.advancedRouteMapRefs.interleakRef != ""
          - nm_l3out_1_update_again.proposed.advancedRouteMapRefs.routeDampeningV4Ref != ""
          - nm_l3out_1_update_again.proposed.advancedRouteMapRefs.routeDampeningV6Ref != ""
          - nm_l3out_1_update_again.proposed.advancedRouteMapRefs.staticRouteRedistRef != ""
          - nm_l3out_1_update_again.proposed.defaultRouteLeak.always == false
          - nm_l3out_1_update_again.proposed.defaultRouteLeak.originateDefaultRoute == "only"
          - nm_l3out_1_update_again.proposed.description == "test description"
          - nm_l3out_1_update_again.proposed.exportRouteMapRef != ""
          - nm_l3out_1_update_again.proposed.importRouteControl == true
          - nm_l3out_1_update_again.proposed.importRouteMapRef != ""
          - nm_l3out_1_update_again.proposed.l3domain == "ans_l3_domain"
          - nm_l3out_1_update_again.proposed.name == "l3out_1"
          - nm_l3out_1_update_again.proposed.ospfAreaConfig.areaType == "regular"
          - nm_l3out_1_update_again.proposed.ospfAreaConfig.control.originate == true
          - nm_l3out_1_update_again.proposed.ospfAreaConfig.control.redistribute == true
          - nm_l3out_1_update_again.proposed.ospfAreaConfig.control.suppressFA == true
          - nm_l3out_1_update_again.proposed.ospfAreaConfig.cost == 1
          - nm_l3out_1_update_again.proposed.ospfAreaConfig.id == "0.0.0.1"
          - nm_l3out_1_update_again.proposed.pim == false
          - nm_l3out_1_update_again.proposed.routingProtocol == "bgpOspf"
          - nm_l3out_1_update_again.proposed.tagAnnotations == []
          - nm_l3out_1_update_again.proposed.targetDscp == "unspecified"
          - nm_l3out_1_update_again.proposed.uuid is defined
          - nm_l3out_1_update_again.proposed.vrfRef != ""

    - name: Update L3Out l3out_1 object name, vrf and pim value
      cisco.mso.ndo_l3out_template:
        <<: *mso_info
        l3out_template: '{{ ansible_l3out_template | default("ansible_test") }}'
        uuid: "{{ nm_l3out_1_update_again.current.uuid}}"
        name: l3out_1_updated
        vrf:
          name: "VRF2"
          schema: '{{ ansible_schema | default("ansible_test") }}'
          template: "Template1"
        pim: true
        target_dscp: "af11"
        state: present
      register: l3out_1_update_vrf

    - name: Assertion check for update L3Out l3out_1 object name, vrf and pim value
      ansible.builtin.assert:
        that:
          - l3out_1_update_vrf is changed
          - l3out_1_update_vrf.current.advancedRouteMapRefs.attachedHostRouteRedistRef != ""
          - l3out_1_update_vrf.current.advancedRouteMapRefs.connectedRouteRedistRef != ""
          - l3out_1_update_vrf.current.advancedRouteMapRefs.interleakRef != ""
          - l3out_1_update_vrf.current.advancedRouteMapRefs.routeDampeningV4Ref != ""
          - l3out_1_update_vrf.current.advancedRouteMapRefs.routeDampeningV6Ref != ""
          - l3out_1_update_vrf.current.advancedRouteMapRefs.staticRouteRedistRef != ""
          - l3out_1_update_vrf.current.defaultRouteLeak.always == false
          - l3out_1_update_vrf.current.defaultRouteLeak.originateDefaultRoute == "only"
          - l3out_1_update_vrf.current.description == "test description"
          - l3out_1_update_vrf.current.exportRouteMapRef != ""
          - l3out_1_update_vrf.current.importRouteControl == true
          - l3out_1_update_vrf.current.importRouteMapRef != ""
          - l3out_1_update_vrf.current.l3domain == "ans_l3_domain"
          - l3out_1_update_vrf.current.name == "l3out_1_updated"
          - l3out_1_update_vrf.current.ospfAreaConfig.areaType == "regular"
          - l3out_1_update_vrf.current.ospfAreaConfig.control.originate == true
          - l3out_1_update_vrf.current.ospfAreaConfig.control.redistribute == true
          - l3out_1_update_vrf.current.ospfAreaConfig.control.suppressFA == true
          - l3out_1_update_vrf.current.ospfAreaConfig.cost == 1
          - l3out_1_update_vrf.current.ospfAreaConfig.id == "0.0.0.1"
          - l3out_1_update_vrf.current.pim == true
          - l3out_1_update_vrf.current.routingProtocol == "bgpOspf"
          - l3out_1_update_vrf.current.tagAnnotations == []
          - l3out_1_update_vrf.current.targetDscp == "af11"
          - l3out_1_update_vrf.current.uuid is defined
          - l3out_1_update_vrf.current.vrfRef != ""
          - l3out_1_update_vrf.previous.advancedRouteMapRefs.attachedHostRouteRedistRef != ""
          - l3out_1_update_vrf.previous.advancedRouteMapRefs.connectedRouteRedistRef != ""
          - l3out_1_update_vrf.previous.advancedRouteMapRefs.interleakRef != ""
          - l3out_1_update_vrf.previous.advancedRouteMapRefs.routeDampeningV4Ref != ""
          - l3out_1_update_vrf.previous.advancedRouteMapRefs.routeDampeningV6Ref != ""
          - l3out_1_update_vrf.previous.advancedRouteMapRefs.staticRouteRedistRef != ""
          - l3out_1_update_vrf.previous.defaultRouteLeak.always == false
          - l3out_1_update_vrf.previous.defaultRouteLeak.originateDefaultRoute == "only"
          - l3out_1_update_vrf.previous.description == "test description"
          - l3out_1_update_vrf.previous.exportRouteMapRef != ""
          - l3out_1_update_vrf.previous.importRouteControl == true
          - l3out_1_update_vrf.previous.importRouteMapRef != ""
          - l3out_1_update_vrf.previous.l3domain == "ans_l3_domain"
          - l3out_1_update_vrf.previous.name == "l3out_1"
          - l3out_1_update_vrf.previous.ospfAreaConfig.areaType == "regular"
          - l3out_1_update_vrf.previous.ospfAreaConfig.control.originate == true
          - l3out_1_update_vrf.previous.ospfAreaConfig.control.redistribute == true
          - l3out_1_update_vrf.previous.ospfAreaConfig.control.suppressFA == true
          - l3out_1_update_vrf.previous.ospfAreaConfig.cost == 1
          - l3out_1_update_vrf.previous.ospfAreaConfig.id == "0.0.0.1"
          - l3out_1_update_vrf.previous.pim == false
          - l3out_1_update_vrf.previous.routingProtocol == "bgpOspf"
          - l3out_1_update_vrf.previous.tagAnnotations == []
          - l3out_1_update_vrf.previous.targetDscp == "unspecified"
          - l3out_1_update_vrf.previous.uuid is defined
          - l3out_1_update_vrf.previous.vrfRef != ""

    - name: Update L3Out l3out_1_updated object bgp route map values
      cisco.mso.ndo_l3out_template:
        <<: *mso_info
        l3out_template: '{{ ansible_l3out_template | default("ansible_test") }}'
        name: l3out_1_updated
        interleak: "ans_route_map_2"
        static_route_redistribution: "ans_route_map_2"
        connected_route_redistribution: "ans_route_map_2"
        attached_host_route_redistribution: "ans_route_map_2"
        bgp:
          route_dampening_ipv4: "ans_route_map_2"
          route_dampening_ipv6: "ans_route_map_2"
          inbound_route_map: "ans_route_map_2"
          outbound_route_map: "ans_route_map_2"
        state: present
      register: l3out_1_update_bgp

    - name: Assertion check for update L3Out l3out_1_updated object bgp route map values
      ansible.builtin.assert:
        that:
          - l3out_1_update_bgp is changed
          - l3out_1_update_bgp.current.advancedRouteMapRefs.attachedHostRouteRedistRef != ""
          - l3out_1_update_bgp.current.advancedRouteMapRefs.connectedRouteRedistRef != ""
          - l3out_1_update_bgp.current.advancedRouteMapRefs.interleakRef != ""
          - l3out_1_update_bgp.current.advancedRouteMapRefs.routeDampeningV4Ref != ""
          - l3out_1_update_bgp.current.advancedRouteMapRefs.routeDampeningV6Ref != ""
          - l3out_1_update_bgp.current.advancedRouteMapRefs.staticRouteRedistRef != ""
          - l3out_1_update_bgp.current.defaultRouteLeak.always == false
          - l3out_1_update_bgp.current.defaultRouteLeak.originateDefaultRoute == "only"
          - l3out_1_update_bgp.current.description == "test description"
          - l3out_1_update_bgp.current.exportRouteMapRef != ""
          - l3out_1_update_bgp.current.importRouteControl == true
          - l3out_1_update_bgp.current.importRouteMapRef != ""
          - l3out_1_update_bgp.current.l3domain == "ans_l3_domain"
          - l3out_1_update_bgp.current.name == "l3out_1_updated"
          - l3out_1_update_bgp.current.ospfAreaConfig.areaType == "regular"
          - l3out_1_update_bgp.current.ospfAreaConfig.control.originate == true
          - l3out_1_update_bgp.current.ospfAreaConfig.control.redistribute == true
          - l3out_1_update_bgp.current.ospfAreaConfig.control.suppressFA == true
          - l3out_1_update_bgp.current.ospfAreaConfig.cost == 1
          - l3out_1_update_bgp.current.ospfAreaConfig.id == "0.0.0.1"
          - l3out_1_update_bgp.current.pim == true
          - l3out_1_update_bgp.current.routingProtocol == "bgpOspf"
          - l3out_1_update_bgp.current.tagAnnotations == []
          - l3out_1_update_bgp.current.targetDscp == "af11"
          - l3out_1_update_bgp.current.uuid is defined
          - l3out_1_update_bgp.current.vrfRef != ""
          - l3out_1_update_bgp.previous.advancedRouteMapRefs.attachedHostRouteRedistRef != ""
          - l3out_1_update_bgp.previous.advancedRouteMapRefs.connectedRouteRedistRef != ""
          - l3out_1_update_bgp.previous.advancedRouteMapRefs.interleakRef != ""
          - l3out_1_update_bgp.previous.advancedRouteMapRefs.routeDampeningV4Ref != ""
          - l3out_1_update_bgp.previous.advancedRouteMapRefs.routeDampeningV6Ref != ""
          - l3out_1_update_bgp.previous.advancedRouteMapRefs.staticRouteRedistRef != ""
          - l3out_1_update_bgp.previous.defaultRouteLeak.always == false
          - l3out_1_update_bgp.previous.defaultRouteLeak.originateDefaultRoute == "only"
          - l3out_1_update_bgp.previous.description == "test description"
          - l3out_1_update_bgp.previous.exportRouteMapRef != ""
          - l3out_1_update_bgp.previous.importRouteControl == true
          - l3out_1_update_bgp.previous.importRouteMapRef != ""
          - l3out_1_update_bgp.previous.l3domain == "ans_l3_domain"
          - l3out_1_update_bgp.previous.name == "l3out_1_updated"
          - l3out_1_update_bgp.previous.ospfAreaConfig.areaType == "regular"
          - l3out_1_update_bgp.previous.ospfAreaConfig.control.originate == true
          - l3out_1_update_bgp.previous.ospfAreaConfig.control.redistribute == true
          - l3out_1_update_bgp.previous.ospfAreaConfig.control.suppressFA == true
          - l3out_1_update_bgp.previous.ospfAreaConfig.cost == 1
          - l3out_1_update_bgp.previous.ospfAreaConfig.id == "0.0.0.1"
          - l3out_1_update_bgp.previous.pim == true
          - l3out_1_update_bgp.previous.routingProtocol == "bgpOspf"
          - l3out_1_update_bgp.previous.tagAnnotations == []
          - l3out_1_update_bgp.previous.targetDscp == "af11"
          - l3out_1_update_bgp.previous.uuid is defined
          - l3out_1_update_bgp.previous.vrfRef != ""

    - name: Set bgp route maps with empty string for L3Out l3out_1_updated object
      cisco.mso.ndo_l3out_template:
        <<: *mso_info
        l3out_template: '{{ ansible_l3out_template | default("ansible_test") }}'
        name: l3out_1_updated
        interleak: "ans_route_map_2"
        static_route_redistribution: "ans_route_map_2"
        connected_route_redistribution: "ans_route_map_2"
        attached_host_route_redistribution: "ans_route_map_2"
        description: "add_log"
        bgp:
          route_dampening_ipv4: ""
          route_dampening_ipv6: ""
          inbound_route_map: ""
          outbound_route_map: ""
        state: present
      register: l3out_1_update_empty_bgp

    - name: Assertion check for set bgp route maps with empty string for L3Out l3out_1_updated object
      ansible.builtin.assert:
        that:
          - l3out_1_update_empty_bgp is changed
          - l3out_1_update_empty_bgp.current.advancedRouteMapRefs.attachedHostRouteRedistRef != ""
          - l3out_1_update_empty_bgp.current.advancedRouteMapRefs.connectedRouteRedistRef != ""
          - l3out_1_update_empty_bgp.current.advancedRouteMapRefs.interleakRef != ""
          - l3out_1_update_empty_bgp.current.advancedRouteMapRefs.routeDampeningV4Ref is not defined
          - l3out_1_update_empty_bgp.current.advancedRouteMapRefs.routeDampeningV6Ref is not defined
          - l3out_1_update_empty_bgp.current.advancedRouteMapRefs.staticRouteRedistRef != ""
          - l3out_1_update_empty_bgp.current.defaultRouteLeak.always == false
          - l3out_1_update_empty_bgp.current.defaultRouteLeak.originateDefaultRoute == "only"
          - l3out_1_update_empty_bgp.current.description == "add_log"
          - l3out_1_update_empty_bgp.current.exportRouteMapRef is not defined
          - l3out_1_update_empty_bgp.current.importRouteControl == false
          - l3out_1_update_empty_bgp.current.importRouteMapRef is not defined
          - l3out_1_update_empty_bgp.current.l3domain == "ans_l3_domain"
          - l3out_1_update_empty_bgp.current.name == "l3out_1_updated"
          - l3out_1_update_empty_bgp.current.ospfAreaConfig.areaType == "regular"
          - l3out_1_update_empty_bgp.current.ospfAreaConfig.control.originate == true
          - l3out_1_update_empty_bgp.current.ospfAreaConfig.control.redistribute == true
          - l3out_1_update_empty_bgp.current.ospfAreaConfig.control.suppressFA == true
          - l3out_1_update_empty_bgp.current.ospfAreaConfig.cost == 1
          - l3out_1_update_empty_bgp.current.ospfAreaConfig.id == "0.0.0.1"
          - l3out_1_update_empty_bgp.current.pim == true
          - l3out_1_update_empty_bgp.current.routingProtocol == "bgpOspf"
          - l3out_1_update_empty_bgp.current.tagAnnotations == []
          - l3out_1_update_empty_bgp.current.targetDscp == "af11"
          - l3out_1_update_empty_bgp.current.uuid is defined
          - l3out_1_update_empty_bgp.current.vrfRef != ""
          - l3out_1_update_empty_bgp.previous.advancedRouteMapRefs.attachedHostRouteRedistRef != ""
          - l3out_1_update_empty_bgp.previous.advancedRouteMapRefs.connectedRouteRedistRef != ""
          - l3out_1_update_empty_bgp.previous.advancedRouteMapRefs.interleakRef != ""
          - l3out_1_update_empty_bgp.previous.advancedRouteMapRefs.routeDampeningV4Ref != ""
          - l3out_1_update_empty_bgp.previous.advancedRouteMapRefs.routeDampeningV6Ref != ""
          - l3out_1_update_empty_bgp.previous.advancedRouteMapRefs.staticRouteRedistRef != ""
          - l3out_1_update_empty_bgp.previous.defaultRouteLeak.always == false
          - l3out_1_update_empty_bgp.previous.defaultRouteLeak.originateDefaultRoute == "only"
          - l3out_1_update_empty_bgp.previous.description == "test description"
          - l3out_1_update_empty_bgp.previous.exportRouteMapRef != ""
          - l3out_1_update_empty_bgp.previous.importRouteControl == true
          - l3out_1_update_empty_bgp.previous.importRouteMapRef != ""
          - l3out_1_update_empty_bgp.previous.l3domain == "ans_l3_domain"
          - l3out_1_update_empty_bgp.previous.name == "l3out_1_updated"
          - l3out_1_update_empty_bgp.previous.ospfAreaConfig.areaType == "regular"
          - l3out_1_update_empty_bgp.previous.ospfAreaConfig.control.originate == true
          - l3out_1_update_empty_bgp.previous.ospfAreaConfig.control.redistribute == true
          - l3out_1_update_empty_bgp.previous.ospfAreaConfig.control.suppressFA == true
          - l3out_1_update_empty_bgp.previous.ospfAreaConfig.cost == 1
          - l3out_1_update_empty_bgp.previous.ospfAreaConfig.id == "0.0.0.1"
          - l3out_1_update_empty_bgp.previous.pim == true
          - l3out_1_update_empty_bgp.previous.routingProtocol == "bgpOspf"
          - l3out_1_update_empty_bgp.previous.tagAnnotations == []
          - l3out_1_update_empty_bgp.previous.targetDscp == "af11"
          - l3out_1_update_empty_bgp.previous.uuid is defined
          - l3out_1_update_empty_bgp.previous.vrfRef != ""

    - name: Update L3Out l3out_1_updated object ospf values
      cisco.mso.ndo_l3out_template:
        <<: *mso_info
        l3out_template: '{{ ansible_l3out_template | default("ansible_test") }}'
        name: l3out_1_updated
        ospf:
          area_id: "0.0.0.1"
          area_type: "regular"
          cost: 1
          send_redistributed_lsas: false
          originate_summary_lsa: false
          suppress_forwarding_addr_translated_lsa: false
          originate_default_route: "in_addition"
          originate_default_route_always: false
        state: present
      register: l3out_1_update_ospf

    - name: Assertion check for update L3Out l3out_1_updated object ospf values
      ansible.builtin.assert:
        that:
          - l3out_1_update_ospf is changed
          - l3out_1_update_ospf.current.advancedRouteMapRefs.attachedHostRouteRedistRef != ""
          - l3out_1_update_ospf.current.advancedRouteMapRefs.connectedRouteRedistRef != ""
          - l3out_1_update_ospf.current.advancedRouteMapRefs.interleakRef != ""
          - l3out_1_update_ospf.current.advancedRouteMapRefs.staticRouteRedistRef != ""
          - l3out_1_update_ospf.current.defaultRouteLeak.always == false
          - l3out_1_update_ospf.current.defaultRouteLeak.originateDefaultRoute == "inAddition"
          - l3out_1_update_ospf.current.description == "add_log"
          - l3out_1_update_ospf.current.importRouteControl == false
          - l3out_1_update_ospf.current.l3domain == "ans_l3_domain"
          - l3out_1_update_ospf.current.name == "l3out_1_updated"
          - l3out_1_update_ospf.current.ospfAreaConfig.areaType == "regular"
          - l3out_1_update_ospf.current.ospfAreaConfig.control.originate == false
          - l3out_1_update_ospf.current.ospfAreaConfig.control.redistribute == false
          - l3out_1_update_ospf.current.ospfAreaConfig.control.suppressFA == false
          - l3out_1_update_ospf.current.ospfAreaConfig.cost == 1
          - l3out_1_update_ospf.current.ospfAreaConfig.id == "0.0.0.1"
          - l3out_1_update_ospf.current.pim == true
          - l3out_1_update_ospf.current.routingProtocol == "bgpOspf"
          - l3out_1_update_ospf.current.tagAnnotations == []
          - l3out_1_update_ospf.current.targetDscp == "af11"
          - l3out_1_update_ospf.current.uuid is defined
          - l3out_1_update_ospf.current.vrfRef != ""
          - l3out_1_update_ospf.previous.advancedRouteMapRefs.attachedHostRouteRedistRef != ""
          - l3out_1_update_ospf.previous.advancedRouteMapRefs.connectedRouteRedistRef != ""
          - l3out_1_update_ospf.previous.advancedRouteMapRefs.interleakRef != ""
          - l3out_1_update_ospf.previous.advancedRouteMapRefs.staticRouteRedistRef != ""
          - l3out_1_update_ospf.previous.defaultRouteLeak.always == false
          - l3out_1_update_ospf.previous.defaultRouteLeak.originateDefaultRoute == "only"
          - l3out_1_update_ospf.previous.description == "add_log"
          - l3out_1_update_ospf.previous.importRouteControl == false
          - l3out_1_update_ospf.previous.l3domain == "ans_l3_domain"
          - l3out_1_update_ospf.previous.name == "l3out_1_updated"
          - l3out_1_update_ospf.previous.ospfAreaConfig.areaType == "regular"
          - l3out_1_update_ospf.previous.ospfAreaConfig.control.originate == true
          - l3out_1_update_ospf.previous.ospfAreaConfig.control.redistribute == true
          - l3out_1_update_ospf.previous.ospfAreaConfig.control.suppressFA == true
          - l3out_1_update_ospf.previous.ospfAreaConfig.cost == 1
          - l3out_1_update_ospf.previous.ospfAreaConfig.id == "0.0.0.1"
          - l3out_1_update_ospf.previous.pim == true
          - l3out_1_update_ospf.previous.routingProtocol == "bgpOspf"
          - l3out_1_update_ospf.previous.tagAnnotations == []
          - l3out_1_update_ospf.previous.targetDscp == "af11"
          - l3out_1_update_ospf.previous.uuid is defined
          - l3out_1_update_ospf.previous.vrfRef != ""

    - name: Clear ospf originate_default_route for L3Out l3out_1_updated object
      cisco.mso.ndo_l3out_template:
        <<: *mso_info
        l3out_template: '{{ ansible_l3out_template | default("ansible_test") }}'
        name: l3out_1_updated
        ospf:
          area_id: "0.0.0.1"
          area_type: "regular"
          cost: 1
          send_redistributed_lsas: false
          originate_summary_lsa: false
          suppress_forwarding_addr_translated_lsa: false
          originate_default_route: ""
          originate_default_route_always: false
        state: present
      register: l3out_1_update_ospf_default_route

    - name: Assertion check for clear ospf originate_default_route for L3Out l3out_1_updated object
      ansible.builtin.assert:
        that:
          - l3out_1_update_ospf_default_route is changed
          - l3out_1_update_ospf_default_route.current.advancedRouteMapRefs.attachedHostRouteRedistRef != ""
          - l3out_1_update_ospf_default_route.current.advancedRouteMapRefs.connectedRouteRedistRef != ""
          - l3out_1_update_ospf_default_route.current.advancedRouteMapRefs.interleakRef != ""
          - l3out_1_update_ospf_default_route.current.advancedRouteMapRefs.staticRouteRedistRef != ""
          - l3out_1_update_ospf_default_route.current.description == "add_log"
          - l3out_1_update_ospf_default_route.current.importRouteControl == false
          - l3out_1_update_ospf_default_route.current.l3domain == "ans_l3_domain"
          - l3out_1_update_ospf_default_route.current.name == "l3out_1_updated"
          - l3out_1_update_ospf_default_route.current.ospfAreaConfig.areaType == "regular"
          - l3out_1_update_ospf_default_route.current.ospfAreaConfig.control.originate == false
          - l3out_1_update_ospf_default_route.current.ospfAreaConfig.control.redistribute == false
          - l3out_1_update_ospf_default_route.current.ospfAreaConfig.control.suppressFA == false
          - l3out_1_update_ospf_default_route.current.ospfAreaConfig.cost == 1
          - l3out_1_update_ospf_default_route.current.ospfAreaConfig.id == "0.0.0.1"
          - l3out_1_update_ospf_default_route.current.pim == true
          - l3out_1_update_ospf_default_route.current.routingProtocol == "bgpOspf"
          - l3out_1_update_ospf_default_route.current.tagAnnotations == []
          - l3out_1_update_ospf_default_route.current.targetDscp == "af11"
          - l3out_1_update_ospf_default_route.current.uuid is defined
          - l3out_1_update_ospf_default_route.current.vrfRef != ""
          - l3out_1_update_ospf_default_route.previous.advancedRouteMapRefs.attachedHostRouteRedistRef != ""
          - l3out_1_update_ospf_default_route.previous.advancedRouteMapRefs.connectedRouteRedistRef != ""
          - l3out_1_update_ospf_default_route.previous.advancedRouteMapRefs.interleakRef != ""
          - l3out_1_update_ospf_default_route.previous.advancedRouteMapRefs.staticRouteRedistRef != ""
          - l3out_1_update_ospf_default_route.previous.defaultRouteLeak.always == false
          - l3out_1_update_ospf_default_route.previous.defaultRouteLeak.originateDefaultRoute == "inAddition"
          - l3out_1_update_ospf_default_route.previous.description == "add_log"
          - l3out_1_update_ospf_default_route.previous.importRouteControl == false
          - l3out_1_update_ospf_default_route.previous.l3domain == "ans_l3_domain"
          - l3out_1_update_ospf_default_route.previous.name == "l3out_1_updated"
          - l3out_1_update_ospf_default_route.previous.ospfAreaConfig.areaType == "regular"
          - l3out_1_update_ospf_default_route.previous.ospfAreaConfig.control.originate == false
          - l3out_1_update_ospf_default_route.previous.ospfAreaConfig.control.redistribute == false
          - l3out_1_update_ospf_default_route.previous.ospfAreaConfig.control.suppressFA == false
          - l3out_1_update_ospf_default_route.previous.ospfAreaConfig.cost == 1
          - l3out_1_update_ospf_default_route.previous.ospfAreaConfig.id == "0.0.0.1"
          - l3out_1_update_ospf_default_route.previous.pim == true
          - l3out_1_update_ospf_default_route.previous.routingProtocol == "bgpOspf"
          - l3out_1_update_ospf_default_route.previous.tagAnnotations == []
          - l3out_1_update_ospf_default_route.previous.targetDscp == "af11"
          - l3out_1_update_ospf_default_route.previous.uuid is defined
          - l3out_1_update_ospf_default_route.previous.vrfRef != ""

    - name: Clear bgp from L3Out l3out_1_updated object
      cisco.mso.ndo_l3out_template:
        <<: *mso_info
        l3out_template: '{{ ansible_l3out_template | default("ansible_test") }}'
        name: l3out_1_updated
        bgp:
          state: disabled
        state: present
      register: l3out_1_update_disable_bgp

    - name: Assertion check for clear bgp from L3Out l3out_1_updated object
      ansible.builtin.assert:
        that:
          - l3out_1_update_disable_bgp is changed
          - l3out_1_update_disable_bgp.current.advancedRouteMapRefs.attachedHostRouteRedistRef != ""
          - l3out_1_update_disable_bgp.current.advancedRouteMapRefs.connectedRouteRedistRef != ""
          - l3out_1_update_disable_bgp.current.advancedRouteMapRefs.interleakRef != ""
          - l3out_1_update_disable_bgp.current.advancedRouteMapRefs.staticRouteRedistRef != ""
          - l3out_1_update_disable_bgp.current.description == "add_log"
          - l3out_1_update_disable_bgp.current.importRouteControl == false
          - l3out_1_update_disable_bgp.current.l3domain == "ans_l3_domain"
          - l3out_1_update_disable_bgp.current.name == "l3out_1_updated"
          - l3out_1_update_disable_bgp.current.ospfAreaConfig.areaType == "regular"
          - l3out_1_update_disable_bgp.current.ospfAreaConfig.control.originate == false
          - l3out_1_update_disable_bgp.current.ospfAreaConfig.control.redistribute == false
          - l3out_1_update_disable_bgp.current.ospfAreaConfig.control.suppressFA == false
          - l3out_1_update_disable_bgp.current.ospfAreaConfig.cost == 1
          - l3out_1_update_disable_bgp.current.ospfAreaConfig.id == "0.0.0.1"
          - l3out_1_update_disable_bgp.current.pim == true
          - l3out_1_update_disable_bgp.current.routingProtocol == "ospf"
          - l3out_1_update_disable_bgp.current.tagAnnotations == []
          - l3out_1_update_disable_bgp.current.targetDscp == "af11"
          - l3out_1_update_disable_bgp.current.uuid is defined
          - l3out_1_update_disable_bgp.current.vrfRef != ""
          - l3out_1_update_disable_bgp.previous.advancedRouteMapRefs.attachedHostRouteRedistRef != ""
          - l3out_1_update_disable_bgp.previous.advancedRouteMapRefs.connectedRouteRedistRef != ""
          - l3out_1_update_disable_bgp.previous.advancedRouteMapRefs.interleakRef != ""
          - l3out_1_update_disable_bgp.previous.advancedRouteMapRefs.staticRouteRedistRef != ""
          - l3out_1_update_disable_bgp.previous.description == "add_log"
          - l3out_1_update_disable_bgp.previous.importRouteControl == false
          - l3out_1_update_disable_bgp.previous.l3domain == "ans_l3_domain"
          - l3out_1_update_disable_bgp.previous.name == "l3out_1_updated"
          - l3out_1_update_disable_bgp.previous.ospfAreaConfig.areaType == "regular"
          - l3out_1_update_disable_bgp.previous.ospfAreaConfig.control.originate == false
          - l3out_1_update_disable_bgp.previous.ospfAreaConfig.control.redistribute == false
          - l3out_1_update_disable_bgp.previous.ospfAreaConfig.control.suppressFA == false
          - l3out_1_update_disable_bgp.previous.ospfAreaConfig.cost == 1
          - l3out_1_update_disable_bgp.previous.ospfAreaConfig.id == "0.0.0.1"
          - l3out_1_update_disable_bgp.previous.pim == true
          - l3out_1_update_disable_bgp.previous.routingProtocol == "bgpOspf"
          - l3out_1_update_disable_bgp.previous.tagAnnotations == []
          - l3out_1_update_disable_bgp.previous.targetDscp == "af11"
          - l3out_1_update_disable_bgp.previous.uuid is defined
          - l3out_1_update_disable_bgp.previous.vrfRef != ""

    - name: Update L3Out l3out_1_updated object ospf originate_default_route_always to true
      cisco.mso.ndo_l3out_template:
        <<: *mso_info
        l3out_template: '{{ ansible_l3out_template | default("ansible_test") }}'
        name: l3out_1_updated
        ospf:
          # when you enable originate_default_route_always, originate_default_route set to "only" when it is not configured and specified in the config
          area_id: "0.0.0.1"
          area_type: "regular"
          originate_default_route_always: true
        state: present
      register: l3out_1_update_ospf_default_route_true

    - name: Assertion check for update L3Out l3out_1_updated object ospf originate_default_route_always to true
      ansible.builtin.assert:
        that:
          - l3out_1_update_ospf_default_route_true is changed
          - l3out_1_update_ospf_default_route_true.current.advancedRouteMapRefs.attachedHostRouteRedistRef != ""
          - l3out_1_update_ospf_default_route_true.current.advancedRouteMapRefs.connectedRouteRedistRef != ""
          - l3out_1_update_ospf_default_route_true.current.advancedRouteMapRefs.interleakRef != ""
          - l3out_1_update_ospf_default_route_true.current.advancedRouteMapRefs.staticRouteRedistRef != ""
          - l3out_1_update_ospf_default_route_true.current.defaultRouteLeak.always == true
          - l3out_1_update_ospf_default_route_true.current.description == "add_log"
          - l3out_1_update_ospf_default_route_true.current.importRouteControl == false
          - l3out_1_update_ospf_default_route_true.current.l3domain == "ans_l3_domain"
          - l3out_1_update_ospf_default_route_true.current.name == "l3out_1_updated"
          - l3out_1_update_ospf_default_route_true.current.ospfAreaConfig.areaType == "regular"
          - l3out_1_update_ospf_default_route_true.current.ospfAreaConfig.control.originate == false
          - l3out_1_update_ospf_default_route_true.current.ospfAreaConfig.control.redistribute == false
          - l3out_1_update_ospf_default_route_true.current.ospfAreaConfig.control.suppressFA == false
          - l3out_1_update_ospf_default_route_true.current.ospfAreaConfig.cost == 1
          - l3out_1_update_ospf_default_route_true.current.ospfAreaConfig.id == "0.0.0.1"
          - l3out_1_update_ospf_default_route_true.current.pim == true
          - l3out_1_update_ospf_default_route_true.current.routingProtocol == "ospf"
          - l3out_1_update_ospf_default_route_true.current.tagAnnotations == []
          - l3out_1_update_ospf_default_route_true.current.targetDscp == "af11"
          - l3out_1_update_ospf_default_route_true.current.uuid is defined
          - l3out_1_update_ospf_default_route_true.current.vrfRef != ""
          - l3out_1_update_ospf_default_route_true.previous.advancedRouteMapRefs.attachedHostRouteRedistRef != ""
          - l3out_1_update_ospf_default_route_true.previous.advancedRouteMapRefs.connectedRouteRedistRef != ""
          - l3out_1_update_ospf_default_route_true.previous.advancedRouteMapRefs.interleakRef != ""
          - l3out_1_update_ospf_default_route_true.previous.advancedRouteMapRefs.staticRouteRedistRef != ""
          - l3out_1_update_ospf_default_route_true.previous.description == "add_log"
          - l3out_1_update_ospf_default_route_true.previous.importRouteControl == false
          - l3out_1_update_ospf_default_route_true.previous.l3domain == "ans_l3_domain"
          - l3out_1_update_ospf_default_route_true.previous.name == "l3out_1_updated"
          - l3out_1_update_ospf_default_route_true.previous.ospfAreaConfig.areaType == "regular"
          - l3out_1_update_ospf_default_route_true.previous.ospfAreaConfig.control.originate == false
          - l3out_1_update_ospf_default_route_true.previous.ospfAreaConfig.control.redistribute == false
          - l3out_1_update_ospf_default_route_true.previous.ospfAreaConfig.control.suppressFA == false
          - l3out_1_update_ospf_default_route_true.previous.ospfAreaConfig.cost == 1
          - l3out_1_update_ospf_default_route_true.previous.ospfAreaConfig.id == "0.0.0.1"
          - l3out_1_update_ospf_default_route_true.previous.pim == true
          - l3out_1_update_ospf_default_route_true.previous.routingProtocol == "ospf"
          - l3out_1_update_ospf_default_route_true.previous.tagAnnotations == []
          - l3out_1_update_ospf_default_route_true.previous.targetDscp == "af11"
          - l3out_1_update_ospf_default_route_true.previous.uuid is defined
          - l3out_1_update_ospf_default_route_true.previous.vrfRef != ""

    - name: Update L3Out l3out_1_updated object ospf area_type, cost and originate_default_route
      cisco.mso.ndo_l3out_template:
        <<: *mso_info
        l3out_template: '{{ ansible_l3out_template | default("ansible_test") }}'
        name: l3out_1_updated
        ospf:
          area_id: "0.0.0.1"
          area_type: "stub"
          cost: 3
          originate_default_route: "only"
        state: present
      register: l3out_1_update_ospf_type_and_cost

    - name: Assertion check for update L3Out l3out_1_updated object ospf area_type, cost and originate_default_route
      ansible.builtin.assert:
        that:
          - l3out_1_update_ospf_type_and_cost is changed
          - l3out_1_update_ospf_type_and_cost.current.advancedRouteMapRefs.attachedHostRouteRedistRef != ""
          - l3out_1_update_ospf_type_and_cost.current.advancedRouteMapRefs.connectedRouteRedistRef != ""
          - l3out_1_update_ospf_type_and_cost.current.advancedRouteMapRefs.interleakRef != ""
          - l3out_1_update_ospf_type_and_cost.current.advancedRouteMapRefs.staticRouteRedistRef != ""
          - l3out_1_update_ospf_type_and_cost.current.defaultRouteLeak.always == true
          - l3out_1_update_ospf_type_and_cost.current.defaultRouteLeak.originateDefaultRoute == "only"
          - l3out_1_update_ospf_type_and_cost.current.description == "add_log"
          - l3out_1_update_ospf_type_and_cost.current.importRouteControl == false
          - l3out_1_update_ospf_type_and_cost.current.l3domain == "ans_l3_domain"
          - l3out_1_update_ospf_type_and_cost.current.name == "l3out_1_updated"
          - l3out_1_update_ospf_type_and_cost.current.ospfAreaConfig.areaType == "stub"
          - l3out_1_update_ospf_type_and_cost.current.ospfAreaConfig.control.originate == false
          - l3out_1_update_ospf_type_and_cost.current.ospfAreaConfig.control.redistribute == false
          - l3out_1_update_ospf_type_and_cost.current.ospfAreaConfig.control.suppressFA == false
          - l3out_1_update_ospf_type_and_cost.current.ospfAreaConfig.cost == 3
          - l3out_1_update_ospf_type_and_cost.current.ospfAreaConfig.id == "0.0.0.1"
          - l3out_1_update_ospf_type_and_cost.current.pim == true
          - l3out_1_update_ospf_type_and_cost.current.routingProtocol == "ospf"
          - l3out_1_update_ospf_type_and_cost.current.tagAnnotations == []
          - l3out_1_update_ospf_type_and_cost.current.targetDscp == "af11"
          - l3out_1_update_ospf_type_and_cost.current.uuid is defined
          - l3out_1_update_ospf_type_and_cost.current.vrfRef != ""
          - l3out_1_update_ospf_type_and_cost.previous.advancedRouteMapRefs.attachedHostRouteRedistRef != ""
          - l3out_1_update_ospf_type_and_cost.previous.advancedRouteMapRefs.connectedRouteRedistRef != ""
          - l3out_1_update_ospf_type_and_cost.previous.advancedRouteMapRefs.interleakRef != ""
          - l3out_1_update_ospf_type_and_cost.previous.advancedRouteMapRefs.staticRouteRedistRef != ""
          - l3out_1_update_ospf_type_and_cost.previous.defaultRouteLeak.always == true
          - l3out_1_update_ospf_type_and_cost.previous.defaultRouteLeak.originateDefaultRoute == "only"
          - l3out_1_update_ospf_type_and_cost.previous.description == "add_log"
          - l3out_1_update_ospf_type_and_cost.previous.importRouteControl == false
          - l3out_1_update_ospf_type_and_cost.previous.l3domain == "ans_l3_domain"
          - l3out_1_update_ospf_type_and_cost.previous.name == "l3out_1_updated"
          - l3out_1_update_ospf_type_and_cost.previous.ospfAreaConfig.areaType == "regular"
          - l3out_1_update_ospf_type_and_cost.previous.ospfAreaConfig.control.originate == false
          - l3out_1_update_ospf_type_and_cost.previous.ospfAreaConfig.control.redistribute == false
          - l3out_1_update_ospf_type_and_cost.previous.ospfAreaConfig.control.suppressFA == false
          - l3out_1_update_ospf_type_and_cost.previous.ospfAreaConfig.cost == 1
          - l3out_1_update_ospf_type_and_cost.previous.ospfAreaConfig.id == "0.0.0.1"
          - l3out_1_update_ospf_type_and_cost.previous.pim == true
          - l3out_1_update_ospf_type_and_cost.previous.routingProtocol == "ospf"
          - l3out_1_update_ospf_type_and_cost.previous.tagAnnotations == []
          - l3out_1_update_ospf_type_and_cost.previous.targetDscp == "af11"
          - l3out_1_update_ospf_type_and_cost.previous.uuid is defined
          - l3out_1_update_ospf_type_and_cost.previous.vrfRef != ""

    - name: Update L3Out l3out_1_updated object ospf area_id
      cisco.mso.ndo_l3out_template:
        <<: *mso_info
        l3out_template: '{{ ansible_l3out_template | default("ansible_test") }}'
        name: l3out_1_updated
        ospf:
          area_id: "0.0.0.2"
          area_type: "stub"
        state: present
      register: l3out_1_update_ospf_id

    - name: Assertion check for update L3Out l3out_1_updated object ospf area_id
      ansible.builtin.assert:
        that:
          - l3out_1_update_ospf_id is changed
          - l3out_1_update_ospf_id.current.advancedRouteMapRefs.attachedHostRouteRedistRef != ""
          - l3out_1_update_ospf_id.current.advancedRouteMapRefs.connectedRouteRedistRef != ""
          - l3out_1_update_ospf_id.current.advancedRouteMapRefs.interleakRef != ""
          - l3out_1_update_ospf_id.current.advancedRouteMapRefs.staticRouteRedistRef != ""
          - l3out_1_update_ospf_id.current.defaultRouteLeak.always == true
          - l3out_1_update_ospf_id.current.defaultRouteLeak.originateDefaultRoute == "only"
          - l3out_1_update_ospf_id.current.description == "add_log"
          - l3out_1_update_ospf_id.current.importRouteControl == false
          - l3out_1_update_ospf_id.current.l3domain == "ans_l3_domain"
          - l3out_1_update_ospf_id.current.name == "l3out_1_updated"
          - l3out_1_update_ospf_id.current.ospfAreaConfig.areaType == "stub"
          - l3out_1_update_ospf_id.current.ospfAreaConfig.control.originate == false
          - l3out_1_update_ospf_id.current.ospfAreaConfig.control.redistribute == false
          - l3out_1_update_ospf_id.current.ospfAreaConfig.control.suppressFA == false
          - l3out_1_update_ospf_id.current.ospfAreaConfig.cost == 3
          - l3out_1_update_ospf_id.current.ospfAreaConfig.id == "0.0.0.2"
          - l3out_1_update_ospf_id.current.pim == true
          - l3out_1_update_ospf_id.current.routingProtocol == "ospf"
          - l3out_1_update_ospf_id.current.tagAnnotations == []
          - l3out_1_update_ospf_id.current.targetDscp == "af11"
          - l3out_1_update_ospf_id.current.uuid is defined
          - l3out_1_update_ospf_id.current.vrfRef != ""
          - l3out_1_update_ospf_id.previous.advancedRouteMapRefs.attachedHostRouteRedistRef != ""
          - l3out_1_update_ospf_id.previous.advancedRouteMapRefs.connectedRouteRedistRef != ""
          - l3out_1_update_ospf_id.previous.advancedRouteMapRefs.interleakRef != ""
          - l3out_1_update_ospf_id.previous.advancedRouteMapRefs.staticRouteRedistRef != ""
          - l3out_1_update_ospf_id.previous.defaultRouteLeak.always == true
          - l3out_1_update_ospf_id.previous.defaultRouteLeak.originateDefaultRoute == "only"
          - l3out_1_update_ospf_id.previous.description == "add_log"
          - l3out_1_update_ospf_id.previous.importRouteControl == false
          - l3out_1_update_ospf_id.previous.l3domain == "ans_l3_domain"
          - l3out_1_update_ospf_id.previous.name == "l3out_1_updated"
          - l3out_1_update_ospf_id.previous.ospfAreaConfig.areaType == "stub"
          - l3out_1_update_ospf_id.previous.ospfAreaConfig.control.originate == false
          - l3out_1_update_ospf_id.previous.ospfAreaConfig.control.redistribute == false
          - l3out_1_update_ospf_id.previous.ospfAreaConfig.control.suppressFA == false
          - l3out_1_update_ospf_id.previous.ospfAreaConfig.cost == 3
          - l3out_1_update_ospf_id.previous.ospfAreaConfig.id == "0.0.0.1"
          - l3out_1_update_ospf_id.previous.pim == true
          - l3out_1_update_ospf_id.previous.routingProtocol == "ospf"
          - l3out_1_update_ospf_id.previous.tagAnnotations == []
          - l3out_1_update_ospf_id.previous.targetDscp == "af11"
          - l3out_1_update_ospf_id.previous.uuid is defined
          - l3out_1_update_ospf_id.previous.vrfRef != ""

    - name: Clear ospf from L3Out l3out_1_updated object
      cisco.mso.ndo_l3out_template:
        <<: *mso_info
        l3out_template: '{{ ansible_l3out_template | default("ansible_test") }}'
        name: l3out_1_updated
        ospf:
          state: disabled
        state: present
      register: l3out_1_disable_ospf

    - name: Assertion check for clear ospf from L3Out l3out_1_updated object
      ansible.builtin.assert:
        that:
          - l3out_1_disable_ospf is changed
          - l3out_1_disable_ospf.current.advancedRouteMapRefs.attachedHostRouteRedistRef != ""
          - l3out_1_disable_ospf.current.advancedRouteMapRefs.connectedRouteRedistRef != ""
          - l3out_1_disable_ospf.current.advancedRouteMapRefs.interleakRef != ""
          - l3out_1_disable_ospf.current.advancedRouteMapRefs.staticRouteRedistRef != ""
          - l3out_1_disable_ospf.current.description == "add_log"
          - l3out_1_disable_ospf.current.importRouteControl == false
          - l3out_1_disable_ospf.current.l3domain == "ans_l3_domain"
          - l3out_1_disable_ospf.current.name == "l3out_1_updated"
          - l3out_1_disable_ospf.current.pim == true
          - l3out_1_disable_ospf.current.routingProtocol == "none"
          - l3out_1_disable_ospf.current.tagAnnotations == []
          - l3out_1_disable_ospf.current.targetDscp == "af11"
          - l3out_1_disable_ospf.current.uuid is defined
          - l3out_1_disable_ospf.current.vrfRef != ""
          - l3out_1_disable_ospf.previous.advancedRouteMapRefs.attachedHostRouteRedistRef != ""
          - l3out_1_disable_ospf.previous.advancedRouteMapRefs.connectedRouteRedistRef != ""
          - l3out_1_disable_ospf.previous.advancedRouteMapRefs.interleakRef != ""
          - l3out_1_disable_ospf.previous.advancedRouteMapRefs.staticRouteRedistRef != ""
          - l3out_1_disable_ospf.previous.defaultRouteLeak.always == true
          - l3out_1_disable_ospf.previous.defaultRouteLeak.originateDefaultRoute == "only"
          - l3out_1_disable_ospf.previous.description == "add_log"
          - l3out_1_disable_ospf.previous.importRouteControl == false
          - l3out_1_disable_ospf.previous.l3domain == "ans_l3_domain"
          - l3out_1_disable_ospf.previous.name == "l3out_1_updated"
          - l3out_1_disable_ospf.previous.ospfAreaConfig.areaType == "stub"
          - l3out_1_disable_ospf.previous.ospfAreaConfig.control.originate == false
          - l3out_1_disable_ospf.previous.ospfAreaConfig.control.redistribute == false
          - l3out_1_disable_ospf.previous.ospfAreaConfig.control.suppressFA == false
          - l3out_1_disable_ospf.previous.ospfAreaConfig.cost == 3
          - l3out_1_disable_ospf.previous.ospfAreaConfig.id == "0.0.0.2"
          - l3out_1_disable_ospf.previous.pim == true
          - l3out_1_disable_ospf.previous.routingProtocol == "ospf"
          - l3out_1_disable_ospf.previous.tagAnnotations == []
          - l3out_1_disable_ospf.previous.targetDscp == "af11"
          - l3out_1_disable_ospf.previous.uuid is defined
          - l3out_1_disable_ospf.previous.vrfRef != ""

    - name: Clear bgp and ospf from L3Out l3out_1_updated object when it is not configured
      cisco.mso.ndo_l3out_template:
        <<: *mso_info
        l3out_template: '{{ ansible_l3out_template | default("ansible_test") }}'
        name: l3out_1_updated
        bgp:
          state: disabled
        ospf:
          state: disabled
        state: present
      register: l3out_1_disable_bgp_ospf_again

    - name: Assertion check for clear bgp and ospf from L3Out l3out_1_updated object when it is not configured
      ansible.builtin.assert:
        that:
          - l3out_1_disable_bgp_ospf_again is not changed
          - l3out_1_disable_bgp_ospf_again.current.advancedRouteMapRefs.attachedHostRouteRedistRef != ""
          - l3out_1_disable_bgp_ospf_again.current.advancedRouteMapRefs.connectedRouteRedistRef != ""
          - l3out_1_disable_bgp_ospf_again.current.advancedRouteMapRefs.interleakRef != ""
          - l3out_1_disable_bgp_ospf_again.current.advancedRouteMapRefs.staticRouteRedistRef != ""
          - l3out_1_disable_bgp_ospf_again.current.description == "add_log"
          - l3out_1_disable_bgp_ospf_again.current.importRouteControl == false
          - l3out_1_disable_bgp_ospf_again.current.l3domain == "ans_l3_domain"
          - l3out_1_disable_bgp_ospf_again.current.name == "l3out_1_updated"
          - l3out_1_disable_bgp_ospf_again.current.pim == true
          - l3out_1_disable_bgp_ospf_again.current.routingProtocol == "none"
          - l3out_1_disable_bgp_ospf_again.current.tagAnnotations == []
          - l3out_1_disable_bgp_ospf_again.current.targetDscp == "af11"
          - l3out_1_disable_bgp_ospf_again.current.uuid is defined
          - l3out_1_disable_bgp_ospf_again.current.vrfRef != ""
          - l3out_1_disable_bgp_ospf_again.previous.advancedRouteMapRefs.attachedHostRouteRedistRef != ""
          - l3out_1_disable_bgp_ospf_again.previous.advancedRouteMapRefs.connectedRouteRedistRef != ""
          - l3out_1_disable_bgp_ospf_again.previous.advancedRouteMapRefs.interleakRef != ""
          - l3out_1_disable_bgp_ospf_again.previous.advancedRouteMapRefs.staticRouteRedistRef != ""
          - l3out_1_disable_bgp_ospf_again.previous.description == "add_log"
          - l3out_1_disable_bgp_ospf_again.previous.importRouteControl == false
          - l3out_1_disable_bgp_ospf_again.previous.l3domain == "ans_l3_domain"
          - l3out_1_disable_bgp_ospf_again.previous.name == "l3out_1_updated"
          - l3out_1_disable_bgp_ospf_again.previous.pim == true
          - l3out_1_disable_bgp_ospf_again.previous.routingProtocol == "none"
          - l3out_1_disable_bgp_ospf_again.previous.tagAnnotations == []
          - l3out_1_disable_bgp_ospf_again.previous.targetDscp == "af11"
          - l3out_1_disable_bgp_ospf_again.previous.uuid is defined
          - l3out_1_disable_bgp_ospf_again.previous.vrfRef != ""

    - name: Create l3out_2 object with full details
      cisco.mso.ndo_l3out_template:
        <<: *mso_info
        l3out_template: '{{ ansible_l3out_template | default("ansible_test") }}'
        name: "l3out_2"
        l3_domain: ans_l3_domain
        vrf:
          name: "VRF1"
          schema: '{{ ansible_schema | default("ansible_test") }}'
          template: "Template1"
        description: "test description"
        pim: false
        target_dscp: "unspecified"
        interleak: "ans_route_map"
        static_route_redistribution: "ans_route_map"
        connected_route_redistribution: "ans_route_map"
        attached_host_route_redistribution: "ans_route_map"
        ospf:
          state: enabled
          area_id: "0.0.0.1"
          area_type: "regular"
          cost: 1
          send_redistributed_lsas: true
          originate_summary_lsa: true
          suppress_forwarding_addr_translated_lsa: true
          originate_default_route: "only"
          originate_default_route_always: false
        bgp:
          state: enabled
          route_dampening_ipv4: "ans_route_map"
          route_dampening_ipv6: "ans_route_map"
          inbound_route_map: "ans_route_map"
          outbound_route_map: "ans_route_map"
        state: "present"
      register: l3out_2_full_config

    - name: Assertion check for create l3out_2 object with full details
      ansible.builtin.assert:
        that:
          - l3out_2_full_config is changed
          - l3out_2_full_config.current.advancedRouteMapRefs.attachedHostRouteRedistRef != ""
          - l3out_2_full_config.current.advancedRouteMapRefs.connectedRouteRedistRef != ""
          - l3out_2_full_config.current.advancedRouteMapRefs.interleakRef != ""
          - l3out_2_full_config.current.advancedRouteMapRefs.routeDampeningV4Ref != ""
          - l3out_2_full_config.current.advancedRouteMapRefs.routeDampeningV6Ref != ""
          - l3out_2_full_config.current.advancedRouteMapRefs.staticRouteRedistRef != ""
          - l3out_2_full_config.current.defaultRouteLeak.always == false
          - l3out_2_full_config.current.defaultRouteLeak.originateDefaultRoute == "only"
          - l3out_2_full_config.current.description == "test description"
          - l3out_2_full_config.current.exportRouteMapRef != ""
          - l3out_2_full_config.current.importRouteControl == true
          - l3out_2_full_config.current.importRouteMapRef != ""
          - l3out_2_full_config.current.l3domain == "ans_l3_domain"
          - l3out_2_full_config.current.name == "l3out_2"
          - l3out_2_full_config.current.ospfAreaConfig.areaType == "regular"
          - l3out_2_full_config.current.ospfAreaConfig.control.originate == true
          - l3out_2_full_config.current.ospfAreaConfig.control.redistribute == true
          - l3out_2_full_config.current.ospfAreaConfig.control.suppressFA == true
          - l3out_2_full_config.current.ospfAreaConfig.cost == 1
          - l3out_2_full_config.current.ospfAreaConfig.id == "0.0.0.1"
          - l3out_2_full_config.current.pim == false
          - l3out_2_full_config.current.routingProtocol == "bgpOspf"
          - l3out_2_full_config.current.targetDscp == "unspecified"
          - l3out_2_full_config.current.vrfRef != ""
          - l3out_2_full_config.previous == {}

    - name: Create l3out_3 object with min config of bgp and ospf
      cisco.mso.ndo_l3out_template:
        <<: *mso_info
        l3out_template: '{{ ansible_l3out_template | default("ansible_test") }}'
        name: "l3out_3"
        l3_domain: ans_l3_domain
        vrf:
          name: "VRF1"
          schema: '{{ ansible_schema | default("ansible_test") }}'
          template: "Template1"
        description: "test description"
        pim: false
        target_dscp: "unspecified"
        interleak: "ans_route_map"
        static_route_redistribution: "ans_route_map"
        connected_route_redistribution: "ans_route_map"
        attached_host_route_redistribution: "ans_route_map"
        ospf:
          state: enabled
          area_id: "0.0.0.1"
          area_type: "regular"
          cost: 1
        bgp:
          state: enabled
        state: "present"
      register: l3out_3_min_config

    - name: Assertion check for create l3out_3 object with min config of bgp and ospf
      ansible.builtin.assert:
        that:
          - l3out_3_min_config is changed
          - l3out_3_min_config.current.advancedRouteMapRefs.attachedHostRouteRedistRef != ""
          - l3out_3_min_config.current.advancedRouteMapRefs.connectedRouteRedistRef != ""
          - l3out_3_min_config.current.advancedRouteMapRefs.interleakRef != ""
          - l3out_3_min_config.current.advancedRouteMapRefs.staticRouteRedistRef != ""
          - l3out_3_min_config.current.description == "test description"
          - l3out_3_min_config.current.importRouteControl == false
          - l3out_3_min_config.current.l3domain == "ans_l3_domain"
          - l3out_3_min_config.current.name == "l3out_3"
          - l3out_3_min_config.current.ospfAreaConfig.areaType == "regular"
          - l3out_3_min_config.current.ospfAreaConfig.cost == 1
          - l3out_3_min_config.current.ospfAreaConfig.id == "0.0.0.1"
          - l3out_3_min_config.current.pim == false
          - l3out_3_min_config.current.routingProtocol == "bgpOspf"
          - l3out_3_min_config.current.targetDscp == "unspecified"
          - l3out_3_min_config.current.vrfRef != ""
          - l3out_3_min_config.previous == {}

    - name: Update l3out_3 object with min config of bgp
      cisco.mso.ndo_l3out_template:
        <<: *mso_info
        l3out_template: '{{ ansible_l3out_template | default("ansible_test") }}'
        name: "l3out_3"
        l3_domain: ans_l3_domain
        vrf:
          name: "VRF1"
          schema: '{{ ansible_schema | default("ansible_test") }}'
          template: "Template1"
        description: "test description"
        pim: false
        target_dscp: "unspecified"
        interleak: "ans_route_map"
        static_route_redistribution: "ans_route_map"
        connected_route_redistribution: "ans_route_map"
        attached_host_route_redistribution: "ans_route_map"
        bgp:
          state: enabled
        state: "present"
      register: update_l3out_3_bgp_min_config

    - name: Assertion check for update l3out_3 object with min config of bgp
      ansible.builtin.assert:
        that:
          - update_l3out_3_bgp_min_config is not changed
          - update_l3out_3_bgp_min_config.current.advancedRouteMapRefs.attachedHostRouteRedistRef != ""
          - update_l3out_3_bgp_min_config.current.advancedRouteMapRefs.connectedRouteRedistRef != ""
          - update_l3out_3_bgp_min_config.current.advancedRouteMapRefs.interleakRef != ""
          - update_l3out_3_bgp_min_config.current.advancedRouteMapRefs.staticRouteRedistRef != ""
          - update_l3out_3_bgp_min_config.current.description == "test description"
          - update_l3out_3_bgp_min_config.current.importRouteControl == false
          - update_l3out_3_bgp_min_config.current.l3domain == "ans_l3_domain"
          - update_l3out_3_bgp_min_config.current.name == "l3out_3"
          - update_l3out_3_bgp_min_config.current.ospfAreaConfig.areaType == "regular"
          - update_l3out_3_bgp_min_config.current.ospfAreaConfig.control.originate == false
          - update_l3out_3_bgp_min_config.current.ospfAreaConfig.control.redistribute == false
          - update_l3out_3_bgp_min_config.current.ospfAreaConfig.control.suppressFA == false
          - update_l3out_3_bgp_min_config.current.ospfAreaConfig.cost == 1
          - update_l3out_3_bgp_min_config.current.ospfAreaConfig.id == "0.0.0.1"
          - update_l3out_3_bgp_min_config.current.pim == false
          - update_l3out_3_bgp_min_config.current.routingProtocol == "bgpOspf"
          - update_l3out_3_bgp_min_config.current.tagAnnotations == []
          - update_l3out_3_bgp_min_config.current.targetDscp == "unspecified"
          - update_l3out_3_bgp_min_config.current.uuid is defined
          - update_l3out_3_bgp_min_config.current.vrfRef != ""
          - update_l3out_3_bgp_min_config.previous.advancedRouteMapRefs.attachedHostRouteRedistRef != ""
          - update_l3out_3_bgp_min_config.previous.advancedRouteMapRefs.connectedRouteRedistRef != ""
          - update_l3out_3_bgp_min_config.previous.advancedRouteMapRefs.interleakRef != ""
          - update_l3out_3_bgp_min_config.previous.advancedRouteMapRefs.staticRouteRedistRef != ""
          - update_l3out_3_bgp_min_config.previous.description == "test description"
          - update_l3out_3_bgp_min_config.previous.importRouteControl == false
          - update_l3out_3_bgp_min_config.previous.l3domain == "ans_l3_domain"
          - update_l3out_3_bgp_min_config.previous.name == "l3out_3"
          - update_l3out_3_bgp_min_config.previous.ospfAreaConfig.areaType == "regular"
          - update_l3out_3_bgp_min_config.previous.ospfAreaConfig.control.originate == false
          - update_l3out_3_bgp_min_config.previous.ospfAreaConfig.control.redistribute == false
          - update_l3out_3_bgp_min_config.previous.ospfAreaConfig.control.suppressFA == false
          - update_l3out_3_bgp_min_config.previous.ospfAreaConfig.cost == 1
          - update_l3out_3_bgp_min_config.previous.ospfAreaConfig.id == "0.0.0.1"
          - update_l3out_3_bgp_min_config.previous.pim == false
          - update_l3out_3_bgp_min_config.previous.routingProtocol == "bgpOspf"
          - update_l3out_3_bgp_min_config.previous.tagAnnotations == []
          - update_l3out_3_bgp_min_config.previous.targetDscp == "unspecified"
          - update_l3out_3_bgp_min_config.previous.uuid is defined
          - update_l3out_3_bgp_min_config.previous.vrfRef != ""

    - name: Query a L3Out with name
      cisco.mso.ndo_l3out_template:
        <<: *mso_info
        l3out_template: '{{ ansible_l3out_template | default("ansible_test") }}'
        name: "l3out_2"
        state: query
      register: query_l3out_with_name

    - name: Query a L3Out with uuid
      cisco.mso.ndo_l3out_template:
        <<: *mso_info
        l3out_template: '{{ ansible_l3out_template | default("ansible_test") }}'
        uuid: "{{ query_l3out_with_name.current.uuid }}"
        state: query
      register: query_l3out_with_uuid

    - name: Assertion check for query l3out with name and uuid
      ansible.builtin.assert:
        that:
          - query_l3out_with_name is not changed
          - query_l3out_with_uuid is not changed
          - query_l3out_with_name.current.name == query_l3out_with_uuid.current.name == "l3out_2"
          - query_l3out_with_name.current.uuid == query_l3out_with_uuid.current.uuid

    - name: Delete l3out_2 object - check_mode
      cisco.mso.ndo_l3out_template: &cm_l3out_2_absent
        <<: *mso_info
        l3out_template: '{{ ansible_l3out_template | default("ansible_test") }}'
        name: "l3out_2"
        state: absent
        output_level: debug
      check_mode: true
      register: cm_l3out_2_absent

    - name: Assertion check for delete l3out_2 object - check_mode
      ansible.builtin.assert:
        that:
          - cm_l3out_2_absent is changed
          - cm_l3out_2_absent.current == {}
          - cm_l3out_2_absent.previous.name == "l3out_2"

    - name: Delete l3out_2 object - normal_mode
      cisco.mso.ndo_l3out_template:
        <<: *cm_l3out_2_absent
      register: nm_l3out_2_absent

    - name: Assertion check for delete l3out_2 object - normal_mode
      ansible.builtin.assert:
        that:
          - nm_l3out_2_absent is changed
          - nm_l3out_2_absent.current == {}
          - nm_l3out_2_absent.previous.name == "l3out_2"

    - name: Delete l3out_2 object - normal_mode again
      cisco.mso.ndo_l3out_template:
        <<: *cm_l3out_2_absent
      register: nm_l3out_2_absent_again

    - name: Assertion check for delete l3out_2 object - normal_mode again
      ansible.builtin.assert:
        that:
          - nm_l3out_2_absent_again is not changed
          - nm_l3out_2_absent_again.current == {}
          - nm_l3out_2_absent_again.previous == {}

    # Negative test part begins
    - name: Update l3out_3 object name using invalid uuid
      cisco.mso.ndo_l3out_template:
        <<: *mso_info
        l3out_template: '{{ ansible_l3out_template | default("ansible_test") }}'
        name: "l3out_3_nt"
        uuid: "invalid_uuid"
        l3_domain: ans_l3_domain
        vrf:
          name: "VRF1"
          schema: '{{ ansible_schema | default("ansible_test") }}'
          template: "Template1"
        state: "present"
      register: update_with_invalid_uuid
      ignore_errors: true

    - name: Assertion check for update l3out_3 object name using invalid uuid
      ansible.builtin.assert:
        that:
          - update_with_invalid_uuid is not changed
          - update_with_invalid_uuid.msg == "L3Out with the uuid{{':'}} 'invalid_uuid' not found"

    - name: Update l3out_3 object without ospf - id and type
      cisco.mso.ndo_l3out_template:
        <<: *mso_info
        l3out_template: '{{ ansible_l3out_template | default("ansible_test") }}'
        name: "l3out_3"
        l3_domain: ans_l3_domain
        vrf:
          name: "VRF1"
          schema: '{{ ansible_schema | default("ansible_test") }}'
          template: "Template1"
        ospf:
          cost: 5
        state: "present"
      register: update_l3out_3_ospf_nt
      ignore_errors: true

    - name: Assertion check for update l3out_3 object without ospf - id and type
      ansible.builtin.assert:
        that:
          - update_l3out_3_ospf_nt is not changed
          - update_l3out_3_ospf_nt.msg == "state is enabled but all of the following are missing{{':'}} area_id, area_type found in ospf"

    - name: Enable pim with L3 Multicast disabled vrf
      cisco.mso.ndo_l3out_template:
        <<: *mso_info
        l3out_template: '{{ ansible_l3out_template | default("ansible_test") }}'
        name: "l3out_nt"
        l3_domain: ans_l3_domain
        vrf:
          name: "VRF1"
          schema: '{{ ansible_schema | default("ansible_test") }}'
          template: "Template1"
        pim: true
        state: present
      register: enable_pim_with_invalid_vrf
      ignore_errors: true

    - name: Assertion check for enable pim with L3 Multicast disabled vrf
      ansible.builtin.assert:
        that:
          - enable_pim_with_invalid_vrf is not changed
          - enable_pim_with_invalid_vrf.msg == "Invalid configuration in L3Out Name{{':'}} l3out_nt, 'PIM' cannot be enabled while using the VRF 'VRF1' with L3 Multicast disabled"

    - name: Update l3out_3 object to enable with L3 Multicast disabled vrf
      cisco.mso.ndo_l3out_template:
        <<: *mso_info
        l3out_template: '{{ ansible_l3out_template | default("ansible_test") }}'
        uuid: "{{ update_l3out_3_bgp_min_config.current.uuid }}"
        l3_domain: ans_l3_domain
        vrf:
          name: "VRF1"
          schema: '{{ ansible_schema | default("ansible_test") }}'
          template: "Template1"
        pim: true
        state: "present"
      register: update_l3out_3_pim_nt
      ignore_errors: true

    - name: Assertion check for update l3out_3 object to enable with L3 Multicast disabled vrf
      ansible.builtin.assert:
        that:
          - update_l3out_3_pim_nt is not changed
          - update_l3out_3_pim_nt.msg is match("Invalid configuration in L3Out UUID.+, 'PIM' cannot be enabled while using the VRF 'VRF1' with L3 Multicast disabled")

    - name: Create L3Out object without ospf area_id
      cisco.mso.ndo_l3out_template:
        <<: *mso_info
        l3out_template: '{{ ansible_l3out_template | default("ansible_test") }}'
        name: "l3out_nt"
        l3_domain: ans_l3_domain
        vrf:
          name: "VRF1"
          schema: '{{ ansible_schema | default("ansible_test") }}'
          template: "Template1"
        ospf:
          area_type: "stub"
        state: present
      register: create_ospf_without_area_id
      ignore_errors: true

    - name: Assertion check for create L3Out object without ospf area_id
      ansible.builtin.assert:
        that:
          - create_ospf_without_area_id is not changed
          - create_ospf_without_area_id.msg == "state is enabled but all of the following are missing{{':'}} area_id found in ospf"

    - name: Create L3Out object without vrf
      cisco.mso.ndo_l3out_template:
        <<: *mso_info
        l3out_template: '{{ ansible_l3out_template | default("ansible_test") }}'
        name: "l3out_nt"
        l3_domain: ans_l3_domain
        state: present
      register: create_without_vrf
      ignore_errors: true

    - name: Assertion check for create L3Out object without vrf
      ansible.builtin.assert:
        that:
          - create_without_vrf is not changed
          - create_without_vrf.msg == "The O(vrf) is required during the creation."
    # Negative test part ends

    - name: Query all L3Out objects
      cisco.mso.ndo_l3out_template:
        <<: *mso_info
        l3out_template: '{{ ansible_l3out_template | default("ansible_test") }}'
        state: "query"
      register: query_all_l3outs

    - name: Assertion check for query all L3Out objects
      ansible.builtin.assert:
        that:
          - query_all_l3outs is not changed
          - query_all_l3outs.current | length == 2

    - name: Delete L3Out using uuid
      cisco.mso.ndo_l3out_template:
        <<: *mso_info
        l3out_template: '{{ ansible_l3out_template | default("ansible_test") }}'
        uuid: "{{ update_l3out_3_bgp_min_config.current.uuid }}"
        state: "absent"
      register: absent_with_uuid

    - name: Assertion check for delete L3Out using uuid
      ansible.builtin.assert:
        that:
          - absent_with_uuid is changed
          - absent_with_uuid.current == {}
          - absent_with_uuid.previous.name == "l3out_3"

    # Cleanup Part
    - name: Remove l3out tenant template
      cisco.mso.ndo_template:
        <<: *ndo_l3out_template_absent

    - name: Remove tenant policy template
      cisco.mso.ndo_template:
        <<: *tenant_pol_template_absent

    - name: Remove fabric_policy template
      cisco.mso.ndo_template:
        <<: *fabric_pol_template_absent

    - name: Remove ansible_test schema template not exist
      cisco.mso.mso_schema_template:
        <<: *mso_schema_template_absent
