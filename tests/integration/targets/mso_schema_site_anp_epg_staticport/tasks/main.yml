# Test code for the MSO modules
# Copyright: (c) 2020, Lionel Hercot (@lhercot) <lhercot@cisco.com>
# Copyright: (c) 2018, Dag Wieers (@dagwieers) <dag@wieers.com> (based on mso_site test case)
# Copyright: (c) 2020, Shreyas Srish (@shrsr) <ssrish@cisco.com>

# GNU General Public License v3.0+ (see LICENSE or https://www.gnu.org/licenses/gpl-3.0.txt)

- name: Test that we have an ACI MultiSite host, username and password
  fail:
    msg: 'Please define the following variables: mso_hostname, mso_username and mso_password.'
  when: mso_hostname is not defined or mso_username is not defined or mso_password is not defined

# CLEAN ENVIRONMENT
- name: Set vars
  set_fact: 
    mso_info: &mso_info
      host: '{{ mso_hostname }}'
      username: '{{ mso_username }}'
      password: '{{ mso_password }}'
      validate_certs: '{{ mso_validate_certs | default(false) }}'
      use_ssl: '{{ mso_use_ssl | default(true) }}'
      use_proxy: '{{ mso_use_proxy | default(true) }}'
      output_level: '{{ mso_output_level | default("info") }}'

- name: Remove Schemas
  mso_schema:
    <<: *mso_info
    schema: '{{ item }}'
    state: absent
  loop:
  - '{{ mso_schema | default("ansible_test") }}_2'
  - '{{ mso_schema | default("ansible_test") }}'

- name: Ensure site exists
  mso_site:
    <<: *mso_info
    site: '{{ mso_site | default("ansible_test") }}'
    apic_username: '{{ apic_username }}'
    apic_password: '{{ apic_password }}'
    apic_site_id: '{{ apic_site_id | default(101) }}'
    urls:
    - https://{{ apic_hostname }}
    state: present

- name: Ensure tenant ansible_test exist
  mso_tenant: 
    <<: *mso_info
    tenant: ansible_test
    users:
    - '{{ mso_username }}'
    sites:
    - '{{ mso_site | default("ansible_test") }}'
    state: present

- name: Ensure schema 1 with Template 1 and 2 exists
  mso_schema_template: 
    <<: *mso_info
    schema: '{{ mso_schema | default("ansible_test") }}'
    tenant: ansible_test
    template: '{{ item }}'
    state: present
  loop:
  - Template 1
  - Template 2

- name: Ensure schema 2 with Template 3 exists
  mso_schema_template:
    <<: *mso_info
    schema: '{{ mso_schema | default("ansible_test") }}_2'
    tenant: ansible_test
    template: Template 3
    state: present

- name: Add a new site to a schema
  mso_schema_site:
    <<: *mso_info
    schema: '{{ mso_schema | default("ansible_test") }}'
    site: '{{ mso_site | default("ansible_test") }}'
    template: Template 1
    state: present

- name: Ensure VRF1 exists
  mso_schema_template_vrf: 
    <<: *mso_info
    schema: '{{ mso_schema | default("ansible_test") }}'
    template: Template 1
    vrf: VRF1
    state: present
    
- name: Add BD1
  mso_schema_template_bd:
    <<: *mso_info
    schema: '{{ mso_schema | default("ansible_test") }}'
    template: Template 1
    bd: BD1
    vrf:
      name: VRF1
    state: present

- name: Ensure Template 1 with AP1 exists
  mso_schema_template_anp:
    <<: *mso_info 
    schema: '{{ mso_schema | default("ansible_test") }}'
    template: Template 1
    anp: AP1
    state: present

- name: Ensure Template 1 and AP1 with EPG1 exists
  mso_schema_template_anp_epg:
    <<: *mso_info
    schema: '{{ mso_schema | default("ansible_test") }}'
    template: Template 1
    anp: AP1
    epg: EPG1
    bd:
      name: BD1
    vrf:
      name: VRF1
    state: present

- name: Ensure Template 1 and AP1 with EPG3 exists
  mso_schema_template_anp_epg:
    <<: *mso_info
    schema: '{{ mso_schema | default("ansible_test") }}'
    template: Template 1
    anp: AP1
    epg: EPG3
    bd:
      name: BD1
    vrf:
      name: VRF1
    state: present

- name: Ensure Template 1 with AP2 exists
  mso_schema_template_anp:
    <<: *mso_info
    schema: '{{ mso_schema | default("ansible_test") }}'
    template: Template 1
    anp: AP2
    state: present

- name: Ensure Template 1 and AP2 with EPG2 exists
  mso_schema_template_anp_epg:
    <<: *mso_info
    schema: '{{ mso_schema | default("ansible_test") }}'
    template: Template 1
    anp: AP2
    epg: EPG2
    bd:
      name: BD1
    vrf:
      name: VRF1
    state: present

- name: Ensure Template 1 and AP2 with EPG4 exists
  mso_schema_template_anp_epg:
    <<: *mso_info
    schema: '{{ mso_schema | default("ansible_test") }}'
    template: Template 1
    anp: AP2
    epg: EPG4
    bd:
      name: BD1
    vrf:
      name: VRF1
    state: present

- name: Ensure Template 1 and AP2 with EPG6 exists
  mso_schema_template_anp_epg:
    <<: *mso_info
    schema: '{{ mso_schema | default("ansible_test") }}'
    template: Template 1
    anp: AP2
    epg: EPG6
    bd:
      name: BD1
    vrf:
      name: VRF1
    state: present

# ADD STATIC PORTS
- name: Add static port 1 to site EPG1 of AP1 (check mode)
  mso_schema_site_anp_epg_staticport: 
    <<: *mso_info
    schema: '{{ mso_schema | default("ansible_test") }}'
    site: '{{ mso_site | default("ansible_test") }}'
    template: Template 1
    anp: AP1
    epg: EPG1
    pod: pod-1
    leaf: 101
    path: eth1/1
    vlan: 126
    mode: 'native'
    type: port
    deployment_immediacy: immediate
    state: present
  check_mode: yes
  register: cm_add_stat1e1

- name: Verify cm_add_stat1e1
  assert:
    that:
    - cm_add_stat1e1 is changed
    - cm_add_stat1e1.previous == {}
    - cm_add_stat1e1.current.deploymentImmediacy == 'immediate'
    - cm_add_stat1e1.current.portEncapVlan == 126
    - cm_add_stat1e1.current.path == 'topology/pod-1/paths-101/pathep-[eth1/1]'
    - cm_add_stat1e1.current.mode == 'native'
    - cm_add_stat1e1.current.type == 'port'

- name: Add static port 1 to site EPG1 of AP1 (normal mode)
  mso_schema_site_anp_epg_staticport:
    <<: *mso_info
    schema: '{{ mso_schema | default("ansible_test") }}'
    site: '{{ mso_site | default("ansible_test") }}'
    template: Template 1
    anp: AP1
    epg: EPG1
    pod: pod-1
    leaf: 101
    path: eth1/1
    vlan: 126
    mode: 'native'
    deployment_immediacy: immediate
    state: present
  register: nm_add_stat1e1

- name: Verify nm_add_stat1e1
  assert:
    that:
    - nm_add_stat1e1 is changed
    - nm_add_stat1e1.previous == {}
    - nm_add_stat1e1.current.deploymentImmediacy == 'immediate'
    - nm_add_stat1e1.current.portEncapVlan == 126
    - nm_add_stat1e1.current.path == 'topology/pod-1/paths-101/pathep-[eth1/1]'
    - nm_add_stat1e1.current.mode == 'native'
    - nm_add_stat1e1.current.type == 'port'

- name: Add static port 2 to site EPG1 of AP1 (normal mode)
  mso_schema_site_anp_epg_staticport:
    <<: *mso_info
    schema: '{{ mso_schema | default("ansible_test") }}'
    site: '{{ mso_site | default("ansible_test") }}'
    template: Template 1
    anp: AP1
    epg: EPG1
    pod: pod-2
    leaf: 102
    path: eth1/2
    vlan: 100
    mode: 'regular'
    type: port
    primary_micro_segment_vlan: 199
    deployment_immediacy: immediate
    state: present
  register: nm_add_stat2e1

- name: Verify nm_add_stat2e1
  assert:
    that:
    - nm_add_stat2e1 is changed
    - nm_add_stat2e1.previous == {}
    - nm_add_stat2e1.current.deploymentImmediacy == 'immediate'
    - nm_add_stat2e1.current.portEncapVlan == 100
    - nm_add_stat2e1.current.path ==  'topology/pod-2/paths-102/pathep-[eth1/2]'
    - nm_add_stat2e1.current.mode == 'regular'
    - nm_add_stat2e1.current.type == 'port'


- name: Add static port 3 (vpc) to site EPG1 of AP1 (normal mode)
  mso_schema_site_anp_epg_staticport:
    <<: *mso_info
    schema: '{{ mso_schema | default("ansible_test") }}'
    site: '{{ mso_site | default("ansible_test") }}'
    template: Template 1
    anp: AP1
    epg: EPG1
    pod: pod-3
    leaf: 103-104
    path: ansible_polgrp
    vlan: 101
    type: vpc
    mode: untagged
    deployment_immediacy: lazy
    state: present
  register: nm_add_stat3e1

- name: Verify nm_add_stat3e1
  assert:
    that:
    - nm_add_stat3e1 is changed
    - nm_add_stat3e1.previous == {}
    - nm_add_stat3e1.current.deploymentImmediacy == 'lazy'
    - nm_add_stat3e1.current.portEncapVlan == 101
    - nm_add_stat3e1.current.path == 'topology/pod-3/protpaths-103-104/pathep-[ansible_polgrp]'
    - nm_add_stat3e1.current.mode == 'untagged'
    - nm_add_stat3e1.current.type == 'vpc'

- name: Add static port 1 to site EPG3 of AP1 (normal mode)
  mso_schema_site_anp_epg_staticport:
    <<: *mso_info
    schema: '{{ mso_schema | default("ansible_test") }}'
    site: '{{ mso_site | default("ansible_test") }}'
    template: Template 1
    anp: AP1
    epg: EPG3
    pod: pod-1
    leaf: 101
    path: eth1/1
    vlan: 126
    mode: 'native'
    type: port
    deployment_immediacy: immediate
    state: present
  register: nm_add_stat1e3

- name: Verify nm_add_stat1e3
  assert:
    that:
    - nm_add_stat1e3 is changed
    - nm_add_stat1e3.previous == {}
    - nm_add_stat1e3.current.deploymentImmediacy == 'immediate'
    - nm_add_stat1e3.current.portEncapVlan == 126
    - nm_add_stat1e3.current.path == 'topology/pod-1/paths-101/pathep-[eth1/1]'
    - nm_add_stat1e3.current.mode == 'native'
    - nm_add_stat1e3.current.type == 'port'
   
- name: Add static port 2 (dpc) to EPG6 of AP2 (normal mode)
  mso_schema_site_anp_epg_staticport:
    <<: *mso_info
    schema: '{{ mso_schema | default("ansible_test") }}'
    site: '{{ mso_site | default("ansible_test") }}'
    template: Template 1
    anp: AP2
    epg: EPG6
    pod: pod-2
    leaf: 102
    path: eth1/2
    vlan: 100
    deployment_immediacy: lazy
    mode: regular
    type: dpc
    primary_micro_segment_vlan: 199
    state: present
  register: nm_add_stat2e6

- name: Verify nm_add_stat2e6
  assert:
    that:
    - nm_add_stat2e6 is changed
    - nm_add_stat2e6.previous == {}
    - nm_add_stat2e6.current.deploymentImmediacy == 'lazy'
    - nm_add_stat2e6.current.portEncapVlan == 100
    - nm_add_stat2e6.current.microSegVlan == 199
    - nm_add_stat2e6.current.path == 'topology/pod-2/paths-102/pathep-[eth1/2]'
    - nm_add_stat2e6.current.mode == 'regular'
    - nm_add_stat2e6.current.type == 'dpc'

# QUERY STATIC PORTS
- name: Query STATIC PORTS of site EPG1 with AP1 (normal mode)
  mso_schema_site_anp_epg_staticport:
    <<: *mso_info
    schema: '{{ mso_schema | default("ansible_test") }}'
    site: '{{ mso_site | default("ansible_test") }}'
    template: Template 1
    anp: AP1
    epg: EPG1
    state: query
  register: nm_query_statse1

- name: Verify nm_query_statse1
  assert:
    that:
    - nm_query_statse1 is not changed

# QUERY A STATIC PORT
- name: Query static port 3 (vpc) of site EPG1 with AP1 (normal mode)
  mso_schema_site_anp_epg_staticport:
    <<: *mso_info
    schema: '{{ mso_schema | default("ansible_test") }}'
    site: '{{ mso_site | default("ansible_test") }}'
    template: Template 1
    anp: AP1
    epg: EPG1
    pod: pod-3
    leaf: 103-104
    path: ansible_polgrp
    vlan: 101
    mode: untagged
    type: vpc
    deployment_immediacy: immediate
    state: query
  register: nm_query_stat3e1

- name: Verify nm_query_stat3e1
  assert:
    that:
    - nm_query_stat3e1 is not changed

# QUERY REMOVED STATIC PORT
- name: Add static port 2 to site EPG2 (normal mode)
  mso_schema_site_anp_epg_staticport:
    <<: *mso_info
    schema: '{{ mso_schema | default("ansible_test") }}'
    site: '{{ mso_site | default("ansible_test") }}'
    template: Template 1
    anp: AP2
    epg: EPG2
    pod: pod-2
    leaf: 102
    path: eth1/2
    vlan: 100
    mode: regular
    type: port
    deployment_immediacy: immediate
    state: present
  register: nm_add_stat2e2

- name: Verify nm_add_stat2e2
  assert:
    that:
    - nm_add_stat2e2 is changed
    - nm_add_stat2e2.previous == {}
    - nm_add_stat2e2.current.deploymentImmediacy == 'immediate'
    - nm_add_stat2e2.current.portEncapVlan == 100
    - nm_add_stat2e2.current.path == 'topology/pod-2/paths-102/pathep-[eth1/2]'
    - nm_add_stat2e2.current.mode == 'regular'
    - nm_add_stat2e2.current.type == 'port'

- name: Remove static port 2 from EPG2 (normal mode)
  mso_schema_site_anp_epg_staticport:
    <<: *mso_info
    schema: '{{ mso_schema | default("ansible_test") }}'
    site: '{{ mso_site | default("ansible_test") }}'
    template: Template 1
    anp: AP2
    epg: EPG2
    pod: pod-2
    leaf: 102
    path: eth1/2
    vlan: 100
    mode: regular
    type: port
    deployment_immediacy: immediate
    state: absent
  register: nm_remove_stat2e2

- name: Verify nm_remove_stat2e2
  assert:
    that:
    - nm_remove_stat2e2 is changed

- name: Query removed static port 2 from EPG2 (normal mode)
  mso_schema_site_anp_epg_staticport:
    <<: *mso_info
    schema: '{{ mso_schema | default("ansible_test") }}'
    site: '{{ mso_site | default("ansible_test") }}'
    template: Template 1
    anp: AP2
    epg: EPG2
    pod: pod-2
    leaf: 102
    path: eth1/2
    vlan: 100
    mode: regular
    type: port
    deployment_immediacy: immediate
    state: query
  ignore_errors: yes
  register: nm_non_existent_dom2e2

- name: Verify non_existing_domain
  assert:
    that:
    - nm_non_existent_dom2e2 is not changed
    - nm_non_existent_dom2e2.msg == "Static port 'topology/pod-2/paths-102/pathep-[eth1/2]' not found"

- name: Remove static port 2 from EPG2 again(normal mode)
  mso_schema_site_anp_epg_staticport:
    <<: *mso_info
    schema: '{{ mso_schema | default("ansible_test") }}'
    site: '{{ mso_site | default("ansible_test") }}'
    template: Template 1
    anp: AP2
    epg: EPG2
    pod: pod-2
    leaf: 101
    path: eth1/2
    vlan: 100
    mode: regular
    type: port
    deployment_immediacy: immediate
    state: absent
  ignore_errors: yes
  register: nm_remove_again_stat2e2

- name: Verify nm_remove_again_stat2e2
  assert:
    that:
    - nm_remove_again_stat2e2 is not changed

# ADD EXISTING STATIC PORT
- name: Add static port 1 to site EPG1 again (normal mode)
  mso_schema_site_anp_epg_staticport:
    <<: *mso_info
    schema: '{{ mso_schema | default("ansible_test") }}'
    site: '{{ mso_site | default("ansible_test") }}'
    template: Template 1
    anp: AP1
    epg: EPG1
    pod: pod-1
    leaf: 101
    path: eth1/1
    vlan: 126
    mode: 'native'
    type: port
    deployment_immediacy: immediate
    state: present
  register: nm_add_stat1e1_2

- name: Verify nm_add_stat1e1_2
  assert:
    that:
    - nm_add_stat1e1_2 is not changed

# ADD STATIC PORT WITH NO STATE
- name: Add static port 1 to site EPG1 again with no state (normal mode)
  mso_schema_site_anp_epg_staticport:
    <<: *mso_info
    schema: '{{ mso_schema | default("ansible_test") }}'
    site: '{{ mso_site | default("ansible_test") }}'
    template: Template 1
    anp: AP1
    epg: EPG1
    pod: pod-1
    leaf: 101
    path: eth1/1
    vlan: 126
    mode: native
    type: port
    deployment_immediacy: immediate
  ignore_errors: yes
  register: nm_add_stateless_stat1e1_2

- name: Verify nm_add_stateless_stat1e1_2
  assert:
    that:
    - nm_add_stateless_stat1e1_2 is not changed

# ADD STATIC FEX PORT
- name: Add static fex port to site EPG1 with AP1 (normal mode)
  mso_schema_site_anp_epg_staticport:
    <<: *mso_info
    schema: '{{ mso_schema | default("ansible_test") }}'
    site: '{{ mso_site | default("ansible_test") }}'
    template: Template 1
    anp: AP1
    epg: EPG1
    pod: pod-4
    leaf: 101
    path: eth1/1
    vlan: 126
    fex: 151
    type: port
    mode: native
    deployment_immediacy: lazy
    state: present
  register: nm_add_statfex

- name: Verify nm_add_statfex
  assert:
    that:
    - nm_add_statfex is changed
    - nm_add_statfex.previous == {}
    - nm_add_statfex.current.deploymentImmediacy == 'lazy'
    - nm_add_statfex.current.portEncapVlan == 126
    - nm_add_statfex.current.path == 'topology/pod-4/paths-101/extpaths-151/pathep-[eth1/1]'
    - nm_add_statfex.current.mode == 'native'
    - nm_add_statfex.current.type == 'port'

# VERIFY NON EXISTENT DEPLOYMENT IMMEDIACY
- name: Add static port 1 to site EPG4 with AP2 with no deployment immediacy (normal mode)
  mso_schema_site_anp_epg_staticport:
    <<: *mso_info
    schema: '{{ mso_schema | default("ansible_test") }}'
    site: '{{ mso_site | default("ansible_test") }}'
    template: Template 1
    anp: AP2
    epg: EPG4
    pod: pod-4
    leaf: 101
    path: eth1/1
    vlan: 126
    type: port
    mode: native
    state: present
  register: nm_add_stat_di

- name: Verify nm_add_stat_di
  assert:
    that:
    - nm_add_stat_di.current.deploymentImmediacy == 'lazy'
   
# VERIFY NON EXISTENT MODE
- name: Add static port 1 to site EPG4 with AP2 with no mode (normal mode)
  mso_schema_site_anp_epg_staticport:
    <<: *mso_info
    schema: '{{ mso_schema | default("ansible_test") }}'
    site: '{{ mso_site | default("ansible_test") }}'
    template: Template 1
    anp: AP2
    epg: EPG4
    pod: pod-4
    leaf: 101
    path: eth1/1
    vlan: 126
    type: port
    deployment_immediacy: lazy
    state: present
  register: nm_add_stat_mode

- name: Verify nm_add_stat_mode
  assert:
    that:
    - nm_add_stat_mode.current.mode == 'untagged'
    
# USE NON-EXISTING EPG and ANP AT TEMPLATE LEVEL
- name: Add static port 1 to non-existent site EPG5 (normal mode)
  mso_schema_site_anp_epg_staticport:
    <<: *mso_info
    schema: '{{ mso_schema | default("ansible_test") }}'
    site: '{{ mso_site | default("ansible_test") }}'
    template: Template 1
    anp: AP5
    epg: EPG5
    pod: pod-1
    leaf: 101
    path: eth1/1
    vlan: 126
    mode: native
    type: port
    deployment_immediacy: immediate
    state: present
  ignore_errors: yes
  register: nm_add_stat1e5

- name: Verify nm_add_stat1e5
  assert:
    that:
    - nm_add_stat1e5 is not changed

# USE NON-EXISTING EPG AT TEMPLATE LEVEL
- name: Add static port 1 to non-existent site EPG5 (normal mode)
  mso_schema_site_anp_epg_staticport:
    <<: *mso_info
    schema: '{{ mso_schema | default("ansible_test") }}'
    site: '{{ mso_site | default("ansible_test") }}'
    template: Template 1
    anp: AP1
    epg: EPG6
    pod: pod-1
    leaf: 101
    path: eth1/1
    vlan: 126
    mode: native
    deployment_immediacy: immediate
    state: present
  ignore_errors: yes
  register: nm_add_stat1e6

- name: Verify nm_add_stat1e6
  assert:
    that:
    - nm_add_stat1e6 is not changed

# USE A NON-EXISTING SCHEMA
- name: Non-existing schema for static port (check_mode)
  mso_schema_site_anp_epg_staticport:
    <<: *mso_info
    schema: non_existing_schema
    site: '{{ mso_site | default("ansible_test") }}'
    template: Template 1
    anp: AP1
    epg: EPG1
    pod: pod-1
    leaf: 101
    path: eth1/1
    vlan: 126
    mode: native
    type: port
    deployment_immediacy: immediate
  check_mode: yes
  ignore_errors: yes
  register: cm_non_existing_schema

- name: Non-existing schema for static port (normal_mode)
  mso_schema_site_anp_epg_staticport:
    <<: *mso_info
    schema: non_existing_schema
    site: '{{ mso_site | default("ansible_test") }}'
    template: Template 1
    anp: AP1
    epg: EPG1
    pod: pod-1
    leaf: 101
    path: eth1/1
    vlan: 126
    type: port
    mode: native
    deployment_immediacy: immediate
  ignore_errors: yes
  register: nm_non_existing_schema

- name: Verify non_existing_schema
  assert:
    that:
    - cm_non_existing_schema is not changed
    - nm_non_existing_schema is not changed
    - cm_non_existing_schema == nm_non_existing_schema
    - cm_non_existing_schema.msg == nm_non_existing_schema.msg == "Provided schema 'non_existing_schema' does not exist."

# USE A NON-EXISTING TEMPLATE
- name: Non-existing template for static port (check_mode)
  mso_schema_site_anp_epg_staticport:
    <<: *mso_info
    schema: '{{ mso_schema | default("ansible_test") }}'
    site: '{{ mso_site | default("ansible_test") }}'
    template: non_existing_template
    anp: AP1
    epg: EPG1
    pod: pod-1
    leaf: 101
    path: eth1/1
    vlan: 126
    type: port
    mode: native
    deployment_immediacy: immediate
  check_mode: yes
  ignore_errors: yes
  register: cm_non_existing_template

- name: Non-existing template for static port (normal_mode)
  mso_schema_site_anp_epg_staticport:
    <<: *mso_info
    schema:  '{{ mso_schema | default("ansible_test") }}'
    site: '{{ mso_site | default("ansible_test") }}'
    template: non_existing_template
    anp: AP1
    epg: EPG1
    pod: pod-1
    leaf: 101
    path: eth1/1
    vlan: 126
    type: port
    mode: native
    deployment_immediacy: immediate
  ignore_errors: yes
  register: nm_non_existing_template

- name: Verify non_existing_template
  assert:
    that:
    - cm_non_existing_template is not changed
    - nm_non_existing_template is not changed
    - cm_non_existing_template == nm_non_existing_template
    - cm_non_existing_template.msg == nm_non_existing_template.msg == "Provided template 'non_existing_template' does not exist. Existing templates{{':'}} Template1, Template2"

# USE A NON-EXISTING SITE
- name: Non-existing site for static port (check_mode)
  mso_schema_site_anp_epg_staticport:
    <<: *mso_info
    schema: '{{ mso_schema | default("ansible_test") }}'
    site: '{{ mso_site | default("ansible_test") }}'
    template: Template 2
    anp: AP1
    epg: EPG1
    pod: pod-1
    leaf: 101
    path: eth1/1
    vlan: 126
    type: port
    mode: native
    deployment_immediacy: immediate
  check_mode: yes
  ignore_errors: yes
  register: cm_non_existing_site

- name: Non-existing site for static port (normal_mode)
  mso_schema_site_anp_epg_staticport:
    <<: *mso_info
    schema: '{{ mso_schema | default("ansible_test") }}'
    site: '{{ mso_site | default("ansible_test") }}'
    template: Template 2
    anp: AP1
    epg: EPG1
    pod: pod-1
    leaf: 101
    path: eth1/1
    vlan: 126
    type: port
    mode: native
    deployment_immediacy: immediate
  ignore_errors: yes
  register: nm_non_existing_site

- name: Verify non_existing_site
  assert:
    that:
    - cm_non_existing_site is not changed
    - nm_non_existing_site is not changed
    - cm_non_existing_site == nm_non_existing_site
    - cm_non_existing_site.msg is match("Provided site/siteId/template 'ansible_test/[0-9a-zA-Z]*/Template2' does not exist. Existing siteIds/templates{{':'}} [0-9a-zA-Z]*/Template1")
    - nm_non_existing_site.msg is match("Provided site/siteId/template 'ansible_test/[0-9a-zA-Z]*/Template2' does not exist. Existing siteIds/templates{{':'}} [0-9a-zA-Z]*/Template1")

# USE A TEMPLATE WITHOUT ANY SITE
- name: Add site EPG static port association to Schema 2 Template 3 without any site associated (check mode)
  mso_schema_site_anp_epg_staticport:
    <<: *mso_info
    schema: '{{ mso_schema | default("ansible_test") }}_2'
    site: '{{ mso_site | default("ansible_test") }}'
    template: Template 3
    anp: AP1
    epg: EPG1
    pod: pod-1
    leaf: 101
    path: eth1/1
    vlan: 126
    type: port
    mode: native
    deployment_immediacy: immediate
  ignore_errors: yes
  check_mode: yes
  register: cm_no_site_associated

- name: Add site EPG static port association to Template 3 without any site associated (normal mode)
  mso_schema_site_anp_epg_staticport:
    <<: *mso_info
    schema: '{{ mso_schema | default("ansible_test") }}_2'
    site: '{{ mso_site | default("ansible_test") }}'
    template: Template 3
    anp: AP1
    epg: EPG1
    pod: pod-1
    leaf: 101
    path: eth1/1
    vlan: 126
    type: port
    mode: native
    deployment_immediacy: immediate
  ignore_errors: yes
  register: nm_no_site_associated

- name: Verify cm_no_site_associated and nm_no_site_associated
  assert:
    that:
    - cm_no_site_associated is not changed
    - nm_no_site_associated is not changed
    - cm_no_site_associated.msg == nm_no_site_associated.msg == "No site associated with template 'Template3'. Associate the site with the template using mso_schema_site."