# Test code for the MSO modules
# Copyright: (c) 2024, Anvitha Jain (@anvjain) <anvjain@cisco.com>

# GNU General Public License v3.0+ (see LICENSE or https://www.gnu.org/licenses/gpl-3.0.txt)

- name: Test that we have an ACI MultiSite host, username and password
  ansible.builtin.fail:
    msg: 'Please define the following variables: mso_hostname, mso_username and mso_password.'
  when: mso_hostname is not defined or mso_username is not defined or mso_password is not defined

# CLEAN ENVIRONMENT
- name: Set vars
  ansible.builtin.set_fact:
    mso_info: &mso_info
      host: '{{ mso_hostname }}'
      username: '{{ mso_username }}'
      password: '{{ mso_password }}'
      validate_certs: '{{ mso_validate_certs | default(false) }}'
      use_ssl: '{{ mso_use_ssl | default(true) }}'
      use_proxy: '{{ mso_use_proxy | default(true) }}'
      output_level: '{{ mso_output_level | default("debug") }}'

# QUERY VERSION
- name: Query MSO version
  cisco.mso.mso_version:
    <<: *mso_info
    state: query
  register: version


- name: Execute tasks only for MSO version >= 4.3
  when: version.current.version is version('4.3', '>=')
  block:
    - name: Remove fabric template
      cisco.mso.ndo_template: &template_absent
        <<: *mso_info
        name: ansible_fabric_policy_template
        type: fabric_policy
        state: absent

    - name: Create a fabric template
      cisco.mso.ndo_template:
        <<: *template_absent
        state: present

    # CREATE

    # MACsec policy interface_type fabric
    - name: Create a MACsec policy of interface_type 'fabric' (check mode)
      cisco.mso.ndo_macsec_policy: &add_macsec_policy
        <<: *mso_info
        template: ansible_fabric_policy_template
        macsec_policy: ansible_macsec_policy
        state: present
      check_mode: true
      register: cm_add_macsec_policy

    - name: Create a MACsec policy of interface_type 'fabric'
      cisco.mso.ndo_macsec_policy:
        <<: *add_macsec_policy
      register: nm_add_macsec_policy

    - name: Create MACsec policy again
      cisco.mso.ndo_macsec_policy:
        <<: *add_macsec_policy
      register: nm_add_macsec_policy_again

    - name: Assert that the MACsec policy was created
      assert:
        that:
          - cm_add_macsec_policy is changed
          - cm_add_macsec_policy.previous == nm_add_macsec_policy.previous == {}
          - cm_add_macsec_policy.current.name == cm_add_macsec_policy.proposed.name == 'ansible_macsec_policy'
          - cm_add_macsec_policy.current.type == cm_add_macsec_policy.proposed.type == 'fabric'
          - nm_add_macsec_policy is changed
          - nm_add_macsec_policy.current.name == 'ansible_macsec_policy'
          - nm_add_macsec_policy.current.type == 'fabric'
          - nm_add_macsec_policy.current.description == ''
          - nm_add_macsec_policy.current.adminState == 'enabled'
          - nm_add_macsec_policy.current.macsecParams.cipherSuite == '256GcmAesXpn'
          - nm_add_macsec_policy.current.macsecParams.sakExpiryTime == 0
          - nm_add_macsec_policy.current.macsecParams.securityPol == 'shouldSecure'
          - nm_add_macsec_policy.current.macsecParams.windowSize == 0
          - nm_add_macsec_policy.current.uuid is defined
          - nm_add_macsec_policy_again is not changed
          - nm_add_macsec_policy_again.previous.name == nm_add_macsec_policy_again.current.name == 'ansible_macsec_policy'
          - nm_add_macsec_policy_again.previous.type == nm_add_macsec_policy_again.current.type == 'fabric'
          - nm_add_macsec_policy_again.previous.description == nm_add_macsec_policy_again.current.description == ''
          - nm_add_macsec_policy_again.previous.uuid is defined
          - nm_add_macsec_policy_again.current.uuid is defined
          - nm_add_macsec_policy_again.previous.macsecParams.cipherSuite == nm_add_macsec_policy_again.current.macsecParams.cipherSuite == '256GcmAesXpn'
          - nm_add_macsec_policy_again.previous.macsecParams.sakExpiryTime == nm_add_macsec_policy_again.current.macsecParams.sakExpiryTime == 0
          - nm_add_macsec_policy_again.previous.macsecParams.securityPol == nm_add_macsec_policy_again.current.macsecParams.securityPol == 'shouldSecure'
          - nm_add_macsec_policy_again.previous.macsecParams.windowSize == nm_add_macsec_policy_again.current.macsecParams.windowSize == 0

    # MACsec policy interface_type access
    - name: Create a MACsec policy of interface_type 'access'
      cisco.mso.ndo_macsec_policy: &add_macsec_policy_access
        <<: *mso_info
        template: ansible_fabric_policy_template
        macsec_policy: ansible_macsec_policy_access
        interface_type: access
        state: present
      register: add_macsec_policy_access

    - name: Assert that the MACsec policy was created
      assert:
        that:
          - add_macsec_policy_access is changed
          - add_macsec_policy_access.previous == {}
          - add_macsec_policy_access.current.name == 'ansible_macsec_policy_access'
          - add_macsec_policy_access.current.type == 'access'
          - add_macsec_policy_access.current.description == ''
          - add_macsec_policy_access.current.adminState == 'enabled'
          - add_macsec_policy_access.current.macsecParams.cipherSuite == '256GcmAesXpn'
          - add_macsec_policy_access.current.macsecParams.sakExpiryTime == 0
          - add_macsec_policy_access.current.macsecParams.securityPol == 'shouldSecure'
          - add_macsec_policy_access.current.macsecParams.windowSize == 64
          - add_macsec_policy_access.current.macsecParams.confOffSet == 'offset0'
          - add_macsec_policy_access.current.macsecParams.keyServerPrio == 16
          - add_macsec_policy_access.current.uuid is defined

    # UPDATE

    # Only one macsec_keys can be added during creation
    - name: Create another MACsec policy of interface_type 'access'
      cisco.mso.ndo_macsec_policy: &add_macsec_policy_2
        <<: *mso_info
        template: ansible_fabric_policy_template
        macsec_policy: ansible_macsec_policy_2
        description: 'Ansible MACsec Policy description'
        admin_state: 'enabled'
        cipher_suite: '256_gcm_aes'
        window_size: 105
        security_policy: 'should_secure'
        sak_expiry_time: 99
        confidentiality_offset: 50
        key_server_priority: 11
        interface_type: access
        macsec_keys:
          - key_name: abc12
            psk: 'AA111111111111111111111111111111111111111111111111111111111111aa'
            start_time: '2029-12-11 11:12:13'
            end_time: '2030-12-11 11:12:13'
          - key_name: ABC
            psk: 'AAabcdabcdabcdabcdabcdabcdabcdab11111111111111111111111111111aaa'
        state: present
      register: nm_add_macsec_policy_2

    - name: Update the MACsec policy of interface_type 'access' (check mode)
      cisco.mso.ndo_macsec_policy: &update_macsec_policy
        <<: *add_macsec_policy_2
        description: 'Updated description'
        admin_state: 'disabled'
        cipher_suite: '128_gcm_aes'
        window_size: 110
        security_policy: 'must_secure'
        sak_expiry_time: 100
        confidentiality_offset: 30
        key_server_priority: 10
        macsec_keys:
          - key_name: abc12
            psk: 'AAabcdabcdabcdabcdabcdabcdabcdab'
            start_time: '2029-12-11 11:12:13'
          - key_name: ABC
            psk: 'AAabcdabcdabcdabcdabcdabcdabcdab'
          - key_name: aaa11
            psk: 'AAabcdabcdabcdabcdabcdabcdabcdab'
            start_time: '2025-10-10 10:12:13'
            end_time: '2026-10-10 10:12:13'
        state: present
      check_mode: true
      register: cm_update_macsec_policy

    - name: Update the MACsec policy of interface_type 'access'
      cisco.mso.ndo_macsec_policy:
        <<: *update_macsec_policy
      register: nm_update_macsec_policy

    # Idempotence for update cannot be checked as the psk is encrypted and the encrypted value changes every time
    - name: Update MACsec policy of interface_type 'access' again
      cisco.mso.ndo_macsec_policy:
        <<: *update_macsec_policy
      register: nm_update_macsec_policy_again

    - name: Assert that the MACsec policy was updated
      assert:
        that:
          - cm_update_macsec_policy is changed
          - cm_update_macsec_policy.previous.description == 'Ansible MACsec Policy description'
          - cm_update_macsec_policy.previous.adminState == 'enabled'
          - cm_update_macsec_policy.previous.macsecParams.cipherSuite == '256GcmAes'
          - cm_update_macsec_policy.previous.macsecParams.windowSize == 105
          - cm_update_macsec_policy.previous.macsecParams.securityPol == 'shouldSecure'
          - cm_update_macsec_policy.previous.macsecParams.sakExpiryTime == 99
          - cm_update_macsec_policy.previous.macsecParams.confOffSet == 'offset50'
          - cm_update_macsec_policy.previous.macsecParams.keyServerPrio == 11
          - cm_update_macsec_policy.current.description == cm_update_macsec_policy.proposed.description == 'Updated description'
          - cm_update_macsec_policy.current.adminState == cm_update_macsec_policy.proposed.adminState == 'disabled'
          - cm_update_macsec_policy.current.macsecParams.cipherSuite == cm_update_macsec_policy.proposed.macsecParams.cipherSuite == '128GcmAes'
          - cm_update_macsec_policy.current.macsecParams.windowSize == cm_update_macsec_policy.proposed.macsecParams.windowSize == 110
          - cm_update_macsec_policy.current.macsecParams.securityPol == cm_update_macsec_policy.proposed.macsecParams.securityPol == 'mustSecure'
          - cm_update_macsec_policy.current.macsecParams.sakExpiryTime == cm_update_macsec_policy.proposed.macsecParams.sakExpiryTime == 100
          - cm_update_macsec_policy.current.macsecParams.confOffSet == cm_update_macsec_policy.proposed.macsecParams.confOffSet == 'offset30'
          - cm_update_macsec_policy.current.macsecParams.keyServerPrio == cm_update_macsec_policy.proposed.macsecParams.keyServerPrio == 10
          - nm_update_macsec_policy is changed
          - nm_update_macsec_policy.previous.description == 'Ansible MACsec Policy description'
          - nm_update_macsec_policy.previous.adminState == 'enabled'
          - nm_update_macsec_policy.previous.macsecParams.cipherSuite == '256GcmAes'
          - nm_update_macsec_policy.previous.macsecParams.windowSize == 105
          - nm_update_macsec_policy.previous.macsecParams.securityPol == 'shouldSecure'
          - nm_update_macsec_policy.previous.macsecParams.sakExpiryTime == 99
          - nm_update_macsec_policy.previous.macsecParams.confOffSet == 'offset50'
          - nm_update_macsec_policy.previous.macsecParams.keyServerPrio == 11
          - nm_update_macsec_policy.previous.macsecKeys | length == 2
          - nm_update_macsec_policy.current.description =='Updated description'
          - nm_update_macsec_policy.current.adminState == 'disabled'
          - nm_update_macsec_policy.current.macsecParams.cipherSuite == '128GcmAes'
          - nm_update_macsec_policy.current.macsecParams.windowSize == 110
          - nm_update_macsec_policy.current.macsecParams.securityPol == 'mustSecure'
          - nm_update_macsec_policy.current.macsecParams.sakExpiryTime == 100
          - nm_update_macsec_policy.current.macsecParams.confOffSet == 'offset30'
          - nm_update_macsec_policy.current.macsecParams.keyServerPrio == 10
          - nm_update_macsec_policy.current.macsecKeys | length == 3
          - nm_update_macsec_policy.current.uuid is defined
          - nm_update_macsec_policy_again is changed
          - nm_update_macsec_policy_again.previous.name == cm_update_macsec_policy.current.name == nm_update_macsec_policy.current.name == 'ansible_macsec_policy_2'
          - nm_update_macsec_policy_again.previous.type == cm_update_macsec_policy.current.type == nm_update_macsec_policy.current.type == 'access'
          - nm_update_macsec_policy_again.previous.description == cm_update_macsec_policy.current.description == nm_update_macsec_policy.current.description == 'Updated description'
          - nm_update_macsec_policy_again.current.uuid is defined
          - nm_update_macsec_policy_again.previous.uuid is defined

    - name: Update the MACsec policy name
      cisco.mso.ndo_macsec_policy:
        <<: *mso_info
        template: ansible_fabric_policy_template
        macsec_policy_uuid: '{{ nm_add_macsec_policy_again.current.uuid }}'
        macsec_policy: ansible_macsec_policy_changed
        state: present
      register: nm_update_macsec_policy_uuid

    - name: Assert that the MACsec policy name was updated
      assert:
        that:
          - nm_update_macsec_policy_uuid is changed
          - nm_update_macsec_policy_uuid.previous.name == 'ansible_macsec_policy'
          - nm_update_macsec_policy_uuid.current.name == 'ansible_macsec_policy_changed'
          - nm_update_macsec_policy_uuid.current.type == nm_update_macsec_policy_uuid.current.type == 'fabric'
          - nm_update_macsec_policy_uuid.current.description == nm_update_macsec_policy_uuid.current.description == ''
          - nm_update_macsec_policy_uuid.current.adminState == nm_update_macsec_policy_uuid.current.adminState == 'enabled'
          - nm_update_macsec_policy_uuid.current.macsecParams.cipherSuite == nm_update_macsec_policy_uuid.current.macsecParams.cipherSuite == '256GcmAesXpn'
          - nm_update_macsec_policy_uuid.current.macsecParams.sakExpiryTime == nm_update_macsec_policy_uuid.current.macsecParams.sakExpiryTime == 0
          - nm_update_macsec_policy_uuid.current.macsecParams.securityPol == nm_update_macsec_policy_uuid.current.macsecParams.securityPol == 'shouldSecure'
          - nm_update_macsec_policy_uuid.current.macsecParams.windowSize == nm_update_macsec_policy_uuid.current.macsecParams.windowSize == 0
          - nm_update_macsec_policy_uuid.previous.uuid == nm_update_macsec_policy_uuid.current.uuid
          - nm_update_macsec_policy_uuid.current.uuid is defined

    - name: Update the MACsec policy by removing the macsec_keys
      cisco.mso.ndo_macsec_policy:
        <<: *update_macsec_policy
        macsec_keys: []
        state: present
      register: rm_update_macsec_policy_key

    - name: Assert that the MACsec policy was updated by removing the macsec_keys
      assert:
        that:
          - rm_update_macsec_policy_key is changed
          - rm_update_macsec_policy_key.previous.macsecKeys | length == 3
          - rm_update_macsec_policy_key.current.macsecKeys is not defined

    # QUERY
    - name: Query a MACsec policy with name
      cisco.mso.ndo_macsec_policy:
        <<: *mso_info
        template: ansible_fabric_policy_template
        macsec_policy: ansible_macsec_policy_changed
        state: query
      register: query_one

    - name: Query all MACsec policies in a template
      cisco.mso.ndo_macsec_policy:
        <<: *mso_info
        template: ansible_fabric_policy_template
        state: query
      register: query_all

    - name: Assert that the MACsec policy was queried
      assert:
        that:
          - query_one is not changed
          - query_one.current.name == 'ansible_macsec_policy_changed'
          - query_one.current.type == 'fabric'
          - query_one.current.description == ''
          - query_all is not changed
          - query_all.current | length >= 2

    - name: Query a MACsec policy with UUID
      cisco.mso.ndo_macsec_policy:
        <<: *mso_info
        template: ansible_fabric_policy_template
        macsec_policy_uuid: '{{ nm_update_macsec_policy_uuid.current.uuid }}'
        state: query
      register: query_uuid

    - name: Assert that the MACsec policy was queried with macsec_policy UUID
      assert:
        that:
          - query_uuid is not changed
          - query_uuid.current.name == 'ansible_macsec_policy_changed'
          - query_uuid.current.type == 'fabric'
          - query_uuid.current.description == ''

    # ERROR
    - name: Update the interface_type of exisiting MACsec policy
      cisco.mso.ndo_macsec_policy:
        <<: *mso_info
        template: ansible_fabric_policy_template
        macsec_policy: ansible_macsec_policy_changed
        interface_type: access
        state: present
      ignore_errors: true
      register: nm_update_macsec_policy_type

    - name: Assert that the MACsec policy interface_type cannot be updated
      assert:
        that:
          - nm_update_macsec_policy_type is failed
          - nm_update_macsec_policy_type.msg == 'Type cannot be changed for an existing MACsec Policy.'

    - name: Validate MACsec policy with invalide time format
      cisco.mso.ndo_macsec_policy:
        <<: *mso_info
        template: ansible_fabric_policy_template
        macsec_policy: ansible_macsec_policy_2
        description: 'Ansible MACsec Policy description'
        interface_type: access
        macsec_keys:
          - key_name: abc12
            psk: 'AA111111111111111111111111111111111111111111111111111111111111aa'
            start_time: 'wrong-time 11:12:13'
            end_time: '2030-12-11 11:12:13'
        state: present
      ignore_errors: true
      register: validate_invalid_time

    - name: Assert that the MACsec policy interface_type cannot be updated
      assert:
        that:
          - validate_invalid_time is failed
          - validate_invalid_time.msg == "ERROR{{":"}} The time must be in 'YYYY-MM-DD HH:MM:SS' format."

    # DELETE
    - name: Delete a MACsec policy with name (check mode)
      cisco.mso.ndo_macsec_policy: &delete_macsec_policy
        <<: *mso_info
        template: ansible_fabric_policy_template
        macsec_policy: ansible_macsec_policy_2
        state: absent
      check_mode: true
      register: cm_delete_macsec_policy

    - name: Delete a MACsec policy with name
      cisco.mso.ndo_macsec_policy:
        <<: *delete_macsec_policy
      register: nm_delete_macsec_policy

    - name: Delete a MACsec policy with name again
      cisco.mso.ndo_macsec_policy:
        <<: *delete_macsec_policy
      register: nm_delete_macsec_policy_again

    - name: Assert that the MACsec policy was deleted
      assert:
        that:
          - cm_delete_macsec_policy is changed
          - nm_delete_macsec_policy is changed
          - nm_delete_macsec_policy_again is not changed
          - nm_delete_macsec_policy.previous.name == 'ansible_macsec_policy_2'
          - nm_delete_macsec_policy.current == {}
          - nm_delete_macsec_policy_again.current == nm_delete_macsec_policy_again.previous == {}

    - name: Delete a MACsec policy with UUID
      cisco.mso.ndo_macsec_policy:
        <<: *mso_info
        template: ansible_fabric_policy_template
        macsec_policy_uuid: '{{ nm_update_macsec_policy_uuid.current.uuid }}'
        state: absent
      register: delete_macsec_policy_uuid

    - name: Assert that the MACsec policy was deleted using UUID
      assert:
        that:
          - delete_macsec_policy_uuid is changed
          - delete_macsec_policy_uuid.previous.name == 'ansible_macsec_policy_changed'
          - delete_macsec_policy_uuid.current == {}

    # CLEANUP
    - name: Remove fabric template
      cisco.mso.ndo_template:
        <<: *template_absent