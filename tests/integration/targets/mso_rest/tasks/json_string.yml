# Test code for the MSO modules
# Copyright: (c) 2020, Anvitha Jain (@anvitha-jain) <anvjain@cisco.com>
#

# GNU General Public License v3.0+ (see LICENSE or https://www.gnu.org/licenses/gpl-3.0.txt)

- name: Test that we have an ACI MultiSite host, username and password
  fail:
    msg: 'Please define the following variables: mso_hostname, mso_username and mso_password.'
  when: mso_hostname is not defined or mso_username is not defined or mso_password is not defined


# CLEAN ENVIRONMENT
- name: Set vars
  set_fact:
    mso_info: &mso_info
      host: '{{ mso_hostname }}'
      username: '{{ mso_username }}'
      password: '{{ mso_password }}'
      validate_certs: '{{ mso_validate_certs | default(false) }}'
      use_ssl: '{{ mso_use_ssl | default(true) }}'
      use_proxy: '{{ mso_use_proxy | default(true) }}'
      output_level: '{{ mso_output_level | default("info") }}'

# QUERY SCHEMAS
- name: Query schema
  mso_rest:
    <<: *mso_info
    path: /mso/api/v1/schemas
    method: get
  register: query_all_schema

- name: Verify query_all_schema
  assert:
    that:
    - query_all_schema is not changed

# ADD tenant
- name: Add tenant
  mso_rest:
    <<: *mso_info
    path: /mso/api/v1/tenants
    method: post
    content: |
      {
          "displayName": "mso_tenant",
          "name": "mso_tenant",
          "description": "",
          "siteAssociations": [],
          "userAssociations": [],
          "_updateVersion": 0
      }
  register: add_tenant

- name: Verify add_tenant
  assert:
    that:
    - add_tenant is changed

- name: debug fact
  debug:
    msg: "{{ add_tenant.jsondata.id }}"

# ADD schema
- name: Add schema
  mso_rest:
    <<: *mso_info
    path: /mso/api/v1/schemas
    method: post
    content: |
      {
          "displayName": "mso_schema",
          "templates": [{
              "name": "Template_1",
              "tenantId": "{{ add_tenant.jsondata.id }}",
              "displayName": "Template_1",
              "templateSubType": [],
              "templateType": "stretched-template",
              "anps": [],
              "contracts": [],
              "vrfs": [],
              "bds": [],
              "filters": [],
              "externalEpgs": [],
              "serviceGraphs": [],
              "intersiteL3outs": []
          }],
          "sites": [],
          "_updateVersion": 0
      }
  register: add_schema

- name: Verify add_schema
  assert:
    that:
    - add_schema is changed

- name: debug fact
  debug:
    msg: "{{ add_schema.jsondata.id }}"

# PUT schema
- name: Put schema
  mso_rest:
    <<: *mso_info
    path: "/mso/api/v1/schemas/{{ add_schema.jsondata.id }}"
    method: put
    content: |
      {
          "displayName": "mso_schema_1",
          "templates": [{
              "name": "Template_1",
              "tenantId": "{{ add_tenant.jsondata.id }}",
              "displayName": "Template_1",
              "templateSubType": [],
              "templateType": "stretched-template",
              "anps": [],
              "contracts": [],
              "vrfs": [],
              "bds": [],
              "filters": [],
              "externalEpgs": [],
              "serviceGraphs": [],
              "intersiteL3outs": []
          }],
          "sites": [],
          "_updateVersion": 0
      }
  register: put_schema

- name: Verify put_schema
  assert:
    that:
    - put_schema is changed


# PATCH schema
- name: Patch schema
  mso_rest:
    <<: *mso_info
    path: "/mso/api/v1/schemas/{{ add_schema.jsondata.id }}"
    method: patch
    content: |
      [
          {
              "op": "add",
              "path": "/templates/Template_1/anps/-",
              "value": { "name": "AP2", "displayName": "AP2", "epgs": [] },
              "_updateVersion": 0
          }
      ]
  register: patch_schema

- name: Verify patch_schema
  assert:
    that:
    - patch_schema is changed

# DELETE the schema
- name: Delete the schema
  mso_rest:
    <<: *mso_info
    path: "/mso/api/v1/schemas/{{ add_schema.jsondata.id }}"
    method: delete
  register: delete_schema

- name: Verify delete_schema
  assert:
    that:
    - delete_schema is changed

# DELETE TENANT
- name: Delete the tenant
  mso_rest:
    <<: *mso_info
    path: "/mso/api/v1/tenants/{{ add_tenant.jsondata.id }}"
    method: delete
  register: delete_tenant

- name: Verify delete_tenant
  assert:
    that:
    - delete_tenant is changed