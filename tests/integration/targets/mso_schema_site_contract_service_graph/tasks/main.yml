# Test code for the MSO modules
# Copyright: (c) 2024, Sabari Jaganathan (@sajagana) <sajagana@cisco.com>

# GNU General Public License v3.0+ (see LICENSE or https://www.gnu.org/licenses/gpl-3.0.txt)

- name: Test that we have an ACI MultiSite host, username and password
  ansible.builtin.fail:
    msg: "Please define the following variables: mso_hostname, mso_username and mso_password."
  when: mso_hostname is not defined or mso_username is not defined or mso_password is not defined

# CLEAN ENVIRONMENT
- name: Set vars
  ansible.builtin.set_fact:
    mso_info: &mso_info
      host: "{{ mso_hostname }}"
      username: "{{ mso_username }}"
      password: "{{ mso_password }}"
      validate_certs: "{{ mso_validate_certs | default(false) }}"
      use_ssl: "{{ mso_use_ssl | default(true) }}"
      use_proxy: "{{ mso_use_proxy | default(false) }}"
      output_level: '{{ mso_output_level | default("info") }}'
    aci_info: &aci_info
      host: "{{ apic_hostname }}"
      username: "{{ apic_username }}"
      password: "{{ apic_password }}"
      validate_certs: "{{ apic_validate_certs | default(false) }}"
      use_ssl: "{{ apic_use_ssl | default(true) }}"
      use_proxy: "{{ apic_use_proxy | default(true) }}"
      output_level: '{{ mso_output_level | default("info") }}'

- name: Query MSO version
  cisco.mso.mso_version:
    <<: *mso_info
    state: query
  register: version

# Setup part begins
- name: Set ansible_network_os to cisco.aci.aci and ansible_connection to local
  ansible.builtin.set_fact:
    ansible_connection: local
    ansible_network_os: cisco.aci.aci

- name: Reset the ansible_connection to access the APIC
  ansible.builtin.meta: reset_connection

- name: Remove the redirect_policy2 from the common tenant - setup part
  cisco.aci.aci_rest:
    <<: *aci_info
    path: "/api/node/mo/uni/tn-common/svcCont.json"
    method: post
    content:
      vnsSvcRedirectPol:
        attributes:
          name: redirect_policy2
          status: deleted

- name: Remove ansible_tenant from the APIC - setup part
  cisco.aci.aci_tenant:
    <<: *aci_info
    tenant: ansible_tenant
    state: absent

- name: Add ansible_tenant to the APIC
  cisco.aci.aci_tenant:
    <<: *aci_info
    tenant: ansible_tenant
    state: present

- name: Add devices and cluster interfaces to the ansible_tenant
  cisco.aci.aci_rest:
    <<: *aci_info
    path: "/api/node/mo/uni/tn-{{ item.tenant }}.json"
    method: post
    content:
      vnsLDevVip:
        attributes:
          svcType: "{{ item.type }}"
          managed: "false"
          name: "{{ item.name }}"
        children:
          - vnsCDev:
              attributes:
                name: "{{ item.name }}"
              children:
                - vnsCIf:
                    attributes:
                      name: "{{ item.concrete_interface }}"
                    children:
                      - vnsRsCIfPathAtt:
                          attributes:
                            tDn: "topology/pod-1/paths-101/pathep-[eth1/1]"
          - vnsLIf:
              attributes:
                name: "{{ item.cluster_interface }}"
              children:
                - vnsRsCIfAttN:
                    attributes:
                      tDn: "uni/tn-{{ item.tenant }}/lDevVip-{{ item.name }}/cDev-{{ item.name }}/cIf-[{{ item.concrete_interface }}]"
          - vnsLIf:
              attributes:
                name: "{{ item.cluster_interface }}_2"
              children:
                - vnsRsCIfAttN:
                    attributes:
                      tDn: "uni/tn-{{ item.tenant }}/lDevVip-{{ item.name }}/cDev-{{ item.name }}/cIf-[{{ item.concrete_interface }}]"

  loop:
    - {
        tenant: ansible_tenant,
        type: FW,
        name: ansible_tenant_firewall1,
        cluster_interface: clu_if1,
        concrete_interface: cn_if1,
      }
    - {
        tenant: ansible_tenant,
        type: ADC,
        name: ansible_tenant_adc,
        cluster_interface: clu_if3,
        concrete_interface: cn_if3,
      }
    - {
        tenant: ansible_tenant,
        type: OTHERS,
        name: ansible_tenant_other,
        cluster_interface: clu_if4,
        concrete_interface: cn_if4,
      }

- name: Add redirect policies to the common and ansible_tenant tenants
  cisco.aci.aci_rest:
    <<: *aci_info
    path: "/api/node/mo/uni/tn-{{ item.tenant }}/svcCont.json"
    method: post
    content:
      vnsSvcRedirectPol:
        attributes:
          name: "{{ item.name }}"
  loop:
    - { tenant: ansible_tenant, name: redirect_policy1 }
    - { tenant: common, name: redirect_policy2 }

- name: Set ansible_network_os to cisco.nd.nd and ansible_connection to ansible.netcommon.httpapi
  ansible.builtin.set_fact:
    ansible_connection: ansible.netcommon.httpapi
    ansible_network_os: cisco.nd.nd

- name: Reset the ansible_connection to access the MSO/NDO
  ansible.builtin.meta: reset_connection

- name: Remove ansible_schema to start the test - setup part
  cisco.mso.mso_schema:
    <<: *mso_info
    schema: "ansible_schema"
    state: absent

- name: Remove ansible_tenant tenant to start the test - setup part
  cisco.mso.mso_tenant:
    <<: *mso_info
    tenant: ansible_tenant
    state: absent

- name: Add ansible_tenant tenant
  cisco.mso.mso_tenant:
    <<: *mso_info
    tenant: ansible_tenant
    users: ["{{ mso_username }}"]
    sites: ["{{ mso_site }}"]
    state: present

- name: Ensure ansible_schema with ansible_template1 and ansible_template2 exist
  cisco.mso.mso_schema_template:
    <<: *mso_info
    schema: "ansible_schema"
    tenant: "ansible_tenant"
    template: "{{ item }}"
    state: present
  loop:
    - "ansible_template1"
    - "ansible_template2"

- name: Create ansible_service_graph schema template service graph
  cisco.mso.mso_schema_template_service_graph:
    <<: *mso_info
    schema: "ansible_schema"
    template: "ansible_template1"
    service_graph: "ansible_service_graph"
    display_name: "ansible_service_graph"
    service_nodes:
      - type: firewall
      - type: load-balancer
      - type: other
    filter_after_first_node: allow_all
    state: present

- name: Bind ansible_test site with ansible_template1 and ansible_template2
  cisco.mso.mso_schema_site:
    <<: *mso_info
    schema: "ansible_schema"
    template: "{{ item }}"
    site: "{{ mso_site }}"
    state: present
  loop:
    - "ansible_template1"
    - "ansible_template2"

- name: Configure the site service graph ansible_service_graph
  cisco.mso.mso_schema_site_service_graph:
    <<: *mso_info
    schema: "ansible_schema"
    template: "ansible_template1"
    service_graph: "ansible_service_graph"
    site: "{{ mso_site }}"
    tenant: "ansible_tenant"
    devices:
      - name: ansible_tenant_firewall1
      - name: ansible_tenant_adc
      - name: ansible_tenant_other
    state: present

- name: Add Filter1 to ansible_template1
  cisco.mso.mso_schema_template_filter_entry: &filter_present
    <<: *mso_info
    schema: "ansible_schema"
    template: "ansible_template1"
    filter: Filter1
    entry: Filter1Entry
    state: present

- name: Add Filter2 to ansible_template1
  cisco.mso.mso_schema_template_filter_entry:
    <<: *filter_present
    filter: Filter2
    entry: Filter2Entry
    state: present

- name: Add Contract1 contract to ansible_template1
  cisco.mso.mso_schema_template_contract_filter:
    <<: *mso_info
    schema: "ansible_schema"
    template: "ansible_template1"
    contract: Contract1
    filter: Filter1
    state: present

- name: Add Contract3 contract to ansible_template1
  cisco.mso.mso_schema_template_contract_filter:
    <<: *mso_info
    schema: "ansible_schema"
    template: "ansible_template1"
    filter_template: "ansible_template1"
    contract: Contract3
    filter: Filter2
    state: present

- name: Add a VRF1 to ansible_template1
  cisco.mso.mso_schema_template_vrf:
    <<: *mso_info
    schema: "ansible_schema"
    template: "ansible_template1"
    vrf: VRF1
    state: present

- name: Add a VRF2 to ansible_template1
  cisco.mso.mso_schema_template_vrf:
    <<: *mso_info
    schema: "ansible_schema"
    template: "ansible_template1"
    vrf: VRF2
    state: present

- name: Add BD1 to ansible_template1
  mso_schema_template_bd:
    <<: *mso_info
    schema: "ansible_schema"
    template: "ansible_template1"
    bd: BD1
    vrf:
      name: VRF1
    state: present

- name: Add BD2 to ansible_template1
  mso_schema_template_bd:
    <<: *mso_info
    schema: "ansible_schema"
    template: "ansible_template1"
    bd: BD2
    vrf:
      name: VRF2
    state: present

- name: Add AP1 to ansible_template1
  cisco.mso.mso_schema_template_anp:
    <<: *mso_info
    schema: "ansible_schema"
    template: "ansible_template1"
    anp: AP1
    state: present

- name: Add EPG1 to AP1 in ansible_template1
  cisco.mso.mso_schema_template_anp_epg:
    <<: *mso_info
    schema: "ansible_schema"
    template: "ansible_template1"
    anp: AP1
    epg: EPG1
    bd:
      name: BD1
    state: present

- name: Bind Contract1 with EPG1 provider
  cisco.mso.mso_schema_template_anp_epg_contract:
    <<: *mso_info
    schema: "ansible_schema"
    template: "ansible_template1"
    anp: AP1
    epg: EPG1
    contract:
      name: Contract1
      type: provider
    state: present

- name: Bind Contract1 with EPG1 consumer
  cisco.mso.mso_schema_template_anp_epg_contract:
    <<: *mso_info
    schema: "ansible_schema"
    template: "ansible_template1"
    anp: AP1
    epg: EPG1
    contract:
      name: Contract1
      type: consumer
    state: present

- name: Bind Contract1 with template service graph - ansible_service_graph
  cisco.mso.mso_schema_template_contract_service_graph:
    <<: *mso_info
    schema: "ansible_schema"
    template: "ansible_template1"
    contract: Contract1
    service_graph: ansible_service_graph
    service_nodes:
      - provider: BD1
        consumer: BD2
      - provider: BD1
        consumer: BD2
      - provider: BD1
        consumer: BD2
    state: present

# # Test part
- name: Bind the Contract1 with site service graph - ansible_service_graph - check_mode
  cisco.mso.mso_schema_site_contract_service_graph: &add_site_con_sg_cm
    <<: *mso_info
    tenant: ansible_tenant
    schema: ansible_schema
    template: ansible_template1
    site: ansible_test
    contract: Contract1
    service_graph_schema: ansible_schema
    service_graph_template: ansible_template1
    service_graph: ansible_service_graph
    node_relationship:
      - cluster_interface_device: ansible_tenant_firewall1
        provider_connector_cluster_interface: clu_if1
        provider_connector_redirect_policy: redirect_policy1
        consumer_connector_cluster_interface: clu_if1
        consumer_connector_redirect_policy: redirect_policy1
      - cluster_interface_device: ansible_tenant_adc
        provider_connector_cluster_interface: clu_if3
        provider_connector_redirect_policy: redirect_policy1
        consumer_connector_cluster_interface: clu_if3
        consumer_connector_redirect_policy: redirect_policy1
        consumer_subnet_ips: ["1.1.1.1/24", "4.4.4.4/24"]
      - cluster_interface_device: ansible_tenant_other
        provider_connector_cluster_interface: clu_if4
        provider_connector_redirect_policy: redirect_policy1
        consumer_connector_cluster_interface: clu_if4
        consumer_connector_redirect_policy: redirect_policy1
    state: present
  check_mode: true
  ignore_errors: true
  register: add_sg_cm

- name: Bind the Contract1 with site service graph - ansible_service_graph - normal_mode
  cisco.mso.mso_schema_site_contract_service_graph:
    <<: *add_site_con_sg_cm
  ignore_errors: true
  register: add_sg_nm

- name: Bind the Contract1 with site service graph - ansible_service_graph - normal_mode - again
  cisco.mso.mso_schema_site_contract_service_graph:
    <<: *add_site_con_sg_cm
  ignore_errors: true
  register: add_sg_nm_again

- name: Assertions check for the bind site contract service graph
  assert:
    that:
      - add_sg_cm is changed
      - add_sg_cm.current != {}
      - add_sg_cm.previous == {}
      - add_sg_nm is changed
      - add_sg_nm.current != {}
      - add_sg_nm.current.serviceGraphRef.serviceGraphName == "ansible_service_graph"
      - add_sg_nm.current.serviceGraphRef.templateName == "ansible_template1"
      - add_sg_nm.current.serviceNodesRelationship.1.consumerConnector.subnets | length == 2
      - add_sg_nm.current.serviceNodesRelationship.2.consumerConnector.clusterInterface.dn == "uni/tn-ansible_tenant/lDevVip-ansible_tenant_other/lIf-clu_if4"
      - add_sg_nm.current.serviceNodesRelationship.2.consumerConnector.redirectPolicy.dn == "uni/tn-ansible_tenant/svcCont/svcRedirectPol-redirect_policy1"
      - add_sg_nm.current.serviceNodesRelationship.2.providerConnector.clusterInterface.dn == "uni/tn-ansible_tenant/lDevVip-ansible_tenant_other/lIf-clu_if4"
      - add_sg_nm.current.serviceNodesRelationship.2.providerConnector.redirectPolicy.dn == "uni/tn-ansible_tenant/svcCont/svcRedirectPol-redirect_policy1"
      - add_sg_nm.previous == {}
      - add_sg_nm_again is not changed
      - add_sg_nm_again.current != {}

- name: Update the Contract1 - site service graph - ansible_service_graph - node properties - check_mode
  cisco.mso.mso_schema_site_contract_service_graph: &update_site_con_sg_cm
    <<: *mso_info
    tenant: ansible_tenant
    schema: ansible_schema
    template: ansible_template1
    site: ansible_test
    contract: Contract1
    service_graph_schema: ansible_schema
    service_graph_template: ansible_template1
    service_graph: ansible_service_graph
    node_relationship:
      - cluster_interface_device: ansible_tenant_firewall1
        provider_connector_cluster_interface: clu_if1
        provider_connector_redirect_policy: redirect_policy1
        consumer_connector_cluster_interface: clu_if1
        consumer_connector_redirect_policy: redirect_policy1
      - cluster_interface_device: ansible_tenant_adc
        provider_connector_cluster_interface: clu_if3
        provider_connector_redirect_policy: redirect_policy1
        consumer_connector_cluster_interface: clu_if3
        consumer_connector_redirect_policy: redirect_policy1
        consumer_subnet_ips: ["1.1.1.1/24", "4.4.4.4/24"]
      - cluster_interface_device: ansible_tenant_other
        provider_connector_cluster_interface: clu_if4
        provider_connector_redirect_policy_tenant: common
        provider_connector_redirect_policy: redirect_policy2
        consumer_connector_cluster_interface: clu_if4
        consumer_connector_redirect_policy_tenant: common
        consumer_connector_redirect_policy: redirect_policy2
    state: present
  check_mode: true
  ignore_errors: true
  register: update_sg_cm

- name: Update the Contract1 - site service graph - ansible_service_graph - node properties - normal_mode
  cisco.mso.mso_schema_site_contract_service_graph:
    <<: *update_site_con_sg_cm
  ignore_errors: true
  register: update_sg_nm

- name: Update the Contract1 - site service graph - ansible_service_graph - node properties - normal_mode again
  cisco.mso.mso_schema_site_contract_service_graph:
    <<: *update_site_con_sg_cm
  ignore_errors: true
  register: update_sg_nm_again

- name: Assertions check for the update site contract service graph
  assert:
    that:
      - update_sg_cm is changed
      - update_sg_cm.current != {}
      - update_sg_cm.previous != {}
      - update_sg_cm.current.serviceGraphRef.serviceGraphName == "ansible_service_graph"
      - update_sg_cm.current.serviceGraphRef.templateName ==  "ansible_template1"
      - update_sg_cm.current.serviceNodesRelationship.2.consumerConnector.clusterInterface.dn == "uni/tn-ansible_tenant/lDevVip-ansible_tenant_other/lIf-clu_if4"
      - update_sg_cm.current.serviceNodesRelationship.2.consumerConnector.redirectPolicy.dn == "uni/tn-common/svcCont/svcRedirectPol-redirect_policy2"
      - update_sg_cm.current.serviceNodesRelationship.2.providerConnector.clusterInterface.dn == "uni/tn-ansible_tenant/lDevVip-ansible_tenant_other/lIf-clu_if4"
      - update_sg_cm.current.serviceNodesRelationship.2.providerConnector.redirectPolicy.dn == "uni/tn-common/svcCont/svcRedirectPol-redirect_policy2"
      - update_sg_cm.previous.serviceNodesRelationship.2.consumerConnector.clusterInterface.dn == "uni/tn-ansible_tenant/lDevVip-ansible_tenant_other/lIf-clu_if4"
      - update_sg_cm.previous.serviceNodesRelationship.2.consumerConnector.redirectPolicy.dn == "uni/tn-ansible_tenant/svcCont/svcRedirectPol-redirect_policy1"
      - update_sg_cm.previous.serviceNodesRelationship.2.providerConnector.clusterInterface.dn == "uni/tn-ansible_tenant/lDevVip-ansible_tenant_other/lIf-clu_if4"
      - update_sg_cm.previous.serviceNodesRelationship.2.providerConnector.redirectPolicy.dn == "uni/tn-ansible_tenant/svcCont/svcRedirectPol-redirect_policy1"
      - update_sg_nm is changed
      - update_sg_nm.current != {}
      - update_sg_nm.current.serviceGraphRef.serviceGraphName == "ansible_service_graph"
      - update_sg_nm.current.serviceGraphRef.templateName == "ansible_template1"
      - update_sg_nm.current.serviceNodesRelationship.1.consumerConnector.subnets | length == 2
      - update_sg_nm.current.serviceNodesRelationship.2.consumerConnector.clusterInterface.dn == "uni/tn-ansible_tenant/lDevVip-ansible_tenant_other/lIf-clu_if4"
      - update_sg_nm.current.serviceNodesRelationship.2.consumerConnector.redirectPolicy.dn == "uni/tn-common/svcCont/svcRedirectPol-redirect_policy2"
      - update_sg_nm.current.serviceNodesRelationship.2.providerConnector.clusterInterface.dn == "uni/tn-ansible_tenant/lDevVip-ansible_tenant_other/lIf-clu_if4"
      - update_sg_nm.current.serviceNodesRelationship.2.providerConnector.redirectPolicy.dn == "uni/tn-common/svcCont/svcRedirectPol-redirect_policy2"
      - update_sg_nm.previous.serviceNodesRelationship.2.consumerConnector.clusterInterface.dn == "uni/tn-ansible_tenant/lDevVip-ansible_tenant_other/lIf-clu_if4"
      - update_sg_nm.previous.serviceNodesRelationship.2.consumerConnector.redirectPolicy.dn == "uni/tn-ansible_tenant/svcCont/svcRedirectPol-redirect_policy1"
      - update_sg_nm.previous.serviceNodesRelationship.2.providerConnector.clusterInterface.dn == "uni/tn-ansible_tenant/lDevVip-ansible_tenant_other/lIf-clu_if4"
      - update_sg_nm.previous.serviceNodesRelationship.2.providerConnector.redirectPolicy.dn == "uni/tn-ansible_tenant/svcCont/svcRedirectPol-redirect_policy1"
      - update_sg_nm_again is not changed
      - update_sg_nm_again.current != {}
      - update_sg_nm_again.current.serviceGraphRef.serviceGraphName == "ansible_service_graph"
      - update_sg_nm_again.current.serviceGraphRef.templateName == "ansible_template1"

- name: Negative test - use invalid service graph schema to check the failure
  cisco.mso.mso_schema_site_contract_service_graph:
    <<: *mso_info
    tenant: ansible_tenant
    schema: ansible_schema
    template: ansible_template1
    site: ansible_test
    contract: Contract1
    service_graph_schema: ansible_schema_temp
    service_graph_template: ansible_template1
    service_graph: ansible_service_graph
    node_relationship:
      - cluster_interface_device: ansible_tenant_firewall1
        provider_connector_cluster_interface: clu_if1
        provider_connector_redirect_policy: redirect_policy1
        consumer_connector_cluster_interface: clu_if1
        consumer_connector_redirect_policy: redirect_policy1
      - cluster_interface_device: ansible_tenant_adc
        provider_connector_cluster_interface: clu_if3
        provider_connector_redirect_policy: redirect_policy1
        consumer_connector_cluster_interface: clu_if3
        consumer_connector_redirect_policy: redirect_policy1
        consumer_subnet_ips: ["1.1.1.1/24", "4.4.4.4/24"]
      - cluster_interface_device: ansible_tenant_other
        provider_connector_cluster_interface: clu_if3
        provider_connector_redirect_policy_tenant: common
        provider_connector_redirect_policy: redirect_policy2
        consumer_connector_cluster_interface: clu_if3
        consumer_connector_redirect_policy_tenant: common
        consumer_connector_redirect_policy: redirect_policy2
    state: present
  ignore_errors: true
  register: nt_with_invalid_sg_schema

- name: Negative test - Add site contract service graph without node_relationship
  cisco.mso.mso_schema_site_contract_service_graph:
    <<: *mso_info
    tenant: ansible_tenant
    schema: ansible_schema
    template: ansible_template1
    site: ansible_test
    contract: Contract1
    service_graph: ansible_service_graph
    state: present
  ignore_errors: true
  register: nt_add_sg_without_node_relationship

- name: Negative test - Add site contract service graph without tenant
  cisco.mso.mso_schema_site_contract_service_graph:
    <<: *mso_info
    schema: ansible_schema
    template: ansible_template1
    site: ansible_test
    contract: Contract1
    service_graph_template: ansible_template1
    service_graph: ansible_service_graph
    node_relationship:
      - cluster_interface_device: ansible_tenant_firewall1
        provider_connector_cluster_interface: clu_if1
        provider_connector_redirect_policy: redirect_policy1
        consumer_connector_cluster_interface: clu_if1
        consumer_connector_redirect_policy: redirect_policy1
      - cluster_interface_device: ansible_tenant_adc
        provider_connector_cluster_interface: clu_if3
        provider_connector_redirect_policy: redirect_policy1
        consumer_connector_cluster_interface: clu_if3
        consumer_connector_redirect_policy: redirect_policy1
        consumer_subnet_ips: ["1.1.1.1/24", "4.4.4.4/24"]
      - cluster_interface_device: ansible_tenant_other
        provider_connector_cluster_interface: clu_if3
        provider_connector_redirect_policy_tenant: common
        provider_connector_redirect_policy: redirect_policy2
        consumer_connector_cluster_interface: clu_if3
        consumer_connector_redirect_policy_tenant: common
        consumer_connector_redirect_policy: redirect_policy2
    state: present
  ignore_errors: true
  register: nt_add_sg_without_tenant

- name: Assertions check for the negative site contract tests
  assert:
    that:
      - nt_with_invalid_sg_schema is not changed
      - nt_with_invalid_sg_schema.current == {}
      - nt_with_invalid_sg_schema.msg == "Provided service_graph_schema{{':'}} 'ansible_schema_temp' does not exist."
      - nt_add_sg_without_node_relationship is not changed
      - nt_add_sg_without_node_relationship.current == {}
      - nt_add_sg_without_node_relationship.msg == "Missing either node_relationship or tenant required attribute."
      - nt_add_sg_without_tenant is not changed
      - nt_add_sg_without_tenant.current == {}
      - nt_add_sg_without_tenant.msg == "Missing either node_relationship or tenant required attribute."

- name: Query a invalid site contract ansible_service_graph_temp
  cisco.mso.mso_schema_site_contract_service_graph:
    <<: *mso_info
    schema: ansible_schema
    template: ansible_template1
    site: ansible_test
    contract: Contract1
    service_graph: ansible_service_graph_temp
    state: query
  ignore_errors: true
  register: query_sg_with_wrong_name

- name: Query a empty site contract without passing the service graph name
  cisco.mso.mso_schema_site_contract_service_graph:
    <<: *mso_info
    schema: ansible_schema
    template: ansible_template1
    site: ansible_test
    contract: Contract3
    state: query
  ignore_errors: true
  register: query_empty_contract_without_sg_name

- name: Query a invalid site contract without passing the service graph value
  cisco.mso.mso_schema_site_contract_service_graph:
    <<: *mso_info
    schema: ansible_schema
    template: ansible_template1
    site: ansible_test
    contract: Contract4
    state: query
  ignore_errors: true
  register: query_invalid_contract_sg

- name: Query all site contract service graphs with an empty template
  cisco.mso.mso_schema_site_contract_service_graph:
    <<: *mso_info
    schema: ansible_schema
    template: ansible_template2
    site: ansible_test
    service_graph: ansible_service_graph
    state: query
  ignore_errors: true
  register: query_all_sg_with_empty_template

- name: Query a site contract - Contract1 service graph without passing service graph name
  cisco.mso.mso_schema_site_contract_service_graph:
    <<: *mso_info
    schema: ansible_schema
    template: ansible_template1
    contract: Contract1
    site: ansible_test
    state: query
  ignore_errors: true
  register: query_sg_without_name

- name: Query all site contract service graphs without passing the service_graph and contract name
  cisco.mso.mso_schema_site_contract_service_graph:
    <<: *mso_info
    schema: ansible_schema
    template: ansible_template1
    site: ansible_test
    state: query
  ignore_errors: true
  register: query_all_sg_without_contract_sg

- name: Assertions check for the query results
  assert:
    that:
      - query_sg_with_wrong_name is not changed
      - query_sg_with_wrong_name.current == {}
      - query_empty_contract_without_sg_name is not changed
      - query_empty_contract_without_sg_name.current == {}
      - query_invalid_contract_sg is not changed
      - query_invalid_contract_sg.current == {}
      - query_invalid_contract_sg.msg == "The site contract{{':'}} Contract4 does not exist."
      - query_all_sg_with_empty_template is not changed
      - query_all_sg_with_empty_template.current == {}
      - query_sg_without_name is not changed # Need to rerun the below task
      - query_sg_without_name.current != {}
      - query_sg_without_name.current.serviceGraphRef is match(".+/templates/ansible_template1/serviceGraphs/ansible_service_graph")
      - query_all_sg_without_contract_sg is not changed
      - query_all_sg_without_contract_sg.current.0.serviceGraphRef != ""

- name: Remove the site contract Contract1 - service graph from the ansible_template1 - check_mode
  cisco.mso.mso_schema_site_contract_service_graph:
    <<: *mso_info
    schema: ansible_schema
    template: ansible_template1
    site: ansible_test
    contract: Contract1
    state: absent
  check_mode: true
  ignore_errors: true
  register: site_con_sg_absent_cm

- name: Remove the site contract Contract1 - service graph from the ansible_template1 - normal_mode
  cisco.mso.mso_schema_site_contract_service_graph:
    <<: *mso_info
    schema: ansible_schema
    template: ansible_template1
    site: ansible_test
    contract: Contract1
    state: absent
  ignore_errors: true
  register: site_con_sg_absent_nm

- name: Remove the site contract Contract1 - service graph from the ansible_template1 - normal_mode again
  cisco.mso.mso_schema_site_contract_service_graph:
    <<: *mso_info
    schema: ansible_schema
    template: ansible_template1
    site: ansible_test
    contract: Contract1
    state: absent
  ignore_errors: true
  register: site_con_sg_absent_nm_again

- name: Assertions check for remove the site contract Contract1 - service graph from the ansible_template1
  assert:
    that:
      - site_con_sg_absent_cm is changed
      - site_con_sg_absent_cm.current == {}
      - site_con_sg_absent_cm.previous != {}
      - site_con_sg_absent_nm is changed
      - site_con_sg_absent_nm.current == {}
      - site_con_sg_absent_nm.previous != {}
      - site_con_sg_absent_nm_again is not changed
      - site_con_sg_absent_nm_again.current == {}
      - site_con_sg_absent_nm_again.previous == {}

# Cleanup part
- name: Remove the site association for the ansible_schema templates
  cisco.mso.mso_schema_site:
    <<: *mso_info
    schema: "ansible_schema"
    template: "{{ item }}"
    site: "{{ mso_site }}"
    state: present
  loop:
    - "ansible_template1"
    - "ansible_template2"

- name: Remove the ansible_schema schema
  cisco.mso.mso_schema:
    <<: *mso_info
    schema: "ansible_schema"
    state: absent

- name: Remove the ansible_tenant tenant
  cisco.mso.mso_tenant:
    <<: *mso_info
    tenant: ansible_tenant
    state: absent

- name: Set ansible_network_os to cisco.aci.aci and ansible_connection to local
  ansible.builtin.set_fact:
    ansible_connection: local
    ansible_network_os: cisco.aci.aci

- name: Reset the ansible_connection to access the APIC
  ansible.builtin.meta: reset_connection

- name: Remove the common tenant redirect policy
  cisco.aci.aci_rest:
    host: "{{ apic_hostname }}"
    username: "{{ apic_username }}"
    password: "{{ apic_password }}"
    validate_certs: no
    path: "/api/node/mo/uni/tn-common/svcCont.json"
    method: post
    content:
      vnsSvcRedirectPol:
        attributes:
          name: redirect_policy2
          status: deleted

- name: Remove the ansible_tenant from the APIC
  cisco.aci.aci_tenant:
    <<: *aci_info
    tenant: ansible_tenant
    state: absent
