# Test code for the MSO modules
# Copyright: (c) 2025, Akini Ross (@akinross) <akinross@cisco.com>

# GNU General Public License v3.0+ (see LICENSE or https://www.gnu.org/licenses/gpl-3.0.txt)

- name: Test that we have an ACI MultiSite host, username and password
  ansible.builtin.fail:
    msg: "Please define the following variables: mso_hostname, mso_username and mso_password."
  when: mso_hostname is not defined or mso_username is not defined or mso_password is not defined

- name: Set vars
  ansible.builtin.set_fact:
    mso_info: &mso_info
      host: "{{ mso_hostname }}"
      username: "{{ mso_username }}"
      password: "{{ mso_password }}"
      validate_certs: "{{ mso_validate_certs | default(false) }}"
      use_ssl: "{{ mso_use_ssl | default(true) }}"
      use_proxy: "{{ mso_use_proxy | default(true) }}"
      output_level: '{{ mso_output_level | default("debug") }}'

# QUERY VERSION

- name: Query MSO version
  cisco.mso.mso_version:
    <<: *mso_info
    state: query
  register: version

- name: Execute tasks only for NDO version >= 4.4
  when: version.current.version is version('4.4', '>=')
  block:
    
    # CLEAN ENVIRONMENT - ENSURE CLEAN ENVIRONMENT FOR TESTS

    - name: Ensure ansible_test tenant exist
      cisco.mso.mso_tenant:
        <<: *mso_info
        tenant: '{{ mso_tenant | default("ansible_test") }}'
        users:
          - '{{ mso_username }}'
        sites:
          - '{{ mso_site | default("ansible_test") }}'
        state: present

    - name: Ensure L3out template does not exist
      cisco.mso.ndo_template: &ndo_l3out_template_absent
        <<: *mso_info
        template: '{{ mso_l3out_template | default("ansible_test") }}'
        template_type: l3out
        tenant: '{{ mso_tenant | default("ansible_test") }}'
        sites:
          - name: '{{ mso_site | default("ansible_test") }}'
        state: absent

    - name: Ensure ansible_test schema does not exist
      cisco.mso.mso_schema_template: &mso_schema_template_absent
        <<: *mso_info
        schema: '{{ mso_schema | default("ansible_test") }}'
        tenant: '{{ mso_tenant | default("ansible_test") }}'
        template: template_1
        state: absent

    - name: Ensure ansible_fabric_resource_template does not exist
      cisco.mso.ndo_template: &ndo_fabric_resource_template_absent
        <<: *mso_info
        name: '{{ mso_fabric_resource_template | default("ansible_test") }}'
        template_type: fabric_resource
        sites:
          - name: '{{ mso_site | default("ansible_test") }}'
        state: absent

    - name: Ensure ansible_fabric_policy_template does not exist
      cisco.mso.ndo_template: &ndo_fabric_policy_template_absent
        <<: *mso_info
        name: '{{ mso_fabric_policy_template | default("ansible_test") }}'
        template_type: fabric_policy
        sites:
          - name: '{{ mso_site | default("ansible_test") }}'
        state: absent

    # CLEAN ENVIRONMENT - REQUIRED FOR TESTS

    - name: Create a fabric_policy template
      cisco.mso.ndo_template:
        <<: *ndo_fabric_policy_template_absent
        state: present

    - name: Create a VLAN pool in the fabric_policy template
      cisco.mso.ndo_vlan_pool:
        <<: *mso_info
        template: '{{ mso_fabric_policy_template | default("ansible_test") }}'
        vlan_pool: ansible_test_vlan_pool_1
        vlan_ranges:
          - from_vlan: 100
            to_vlan: 200
        state: present

    - name: Create a L3 domain in the fabric_policy template
      cisco.mso.ndo_l3_domain:
        <<: *mso_info
        template: '{{ mso_fabric_policy_template | default("ansible_test") }}'
        l3_domain: ansible_test_l3_domain
        pool: ansible_test_vlan_pool_1
        state: present

    - name: Create a schema template
      cisco.mso.mso_schema_template:
        <<: *mso_schema_template_absent
        state: present

    - name: Create a VRF in the schema template
      cisco.mso.mso_schema_template_vrf:
        <<: *mso_info
        schema: '{{ mso_schema | default("ansible_test") }}'
        template: template_1
        vrf: vrf_1
        state: present

    - name: Create a new L3Out template
      cisco.mso.ndo_template:
        <<: *ndo_l3out_template_absent
        state: present
      register: l3out_template

    - name: Create L3Out object in the L3Out template
      cisco.mso.ndo_l3out_template:
        <<: *mso_info
        l3out_template: '{{ mso_l3out_template | default("ansible_test") }}'
        name: l3out_1
        vrf:
          name: vrf_1
          schema: '{{ mso_schema | default("ansible_test") }}'
          template: template_1
        l3_domain: ansible_test_l3_domain
        ospf:
          state: enabled
          area_id: 0.0.0.1
          area_type: regular
        bgp:
          state: enabled
        state: present
      register: mso_l3out

    - name: Create L3Out node group policy
      cisco.mso.ndo_l3out_node_group_policy:
        <<: *mso_info
        template: '{{ mso_l3out_template | default("ansible_test") }}'
        l3out: l3out_1
        name: node_group_policy_1
        state: present

    - name: Create L3Out interface group policy
      cisco.mso.ndo_l3out_interface_group_policy:
        <<: *mso_info
        template: '{{ mso_l3out_template | default("ansible_test") }}'
        l3out: l3out_1
        name: interface_group_policy_1
        state: present

    # CREATE

    - name: Create a L3out floating svi interface (check mode)
      cisco.mso.ndo_l3out_floating_svi_interface: &create_floating_svi_interface
        <<: *mso_info
        template: '{{ mso_l3out_template | default("ansible_test") }}'
        l3out: l3out_1
        node_id: 101
        encapsulation_type: vlan
        encapsulation_value: 100
        ipv4_address: 10.0.0.1/24
        mac: 00:22:BD:F8:19:FF
        mtu: inherit
        node_router_id: 1.1.1.1
        state: present
      check_mode: true
      register: cm_create_floating_svi_interface
    
    - name: Create a L3out floating svi interface 
      cisco.mso.ndo_l3out_floating_svi_interface:
        <<: *create_floating_svi_interface
      register: nm_create_floating_svi_interface

    - name: Create a L3out floating svi interface again
      cisco.mso.ndo_l3out_floating_svi_interface:
        <<: *create_floating_svi_interface
      register: nm_create_floating_svi_interface_again

    - name: Assert that the L3out floating svi interface was created
      ansible.builtin.assert:
        that:
          - cm_create_floating_svi_interface is changed
          - cm_create_floating_svi_interface.previous == {}
          - cm_create_floating_svi_interface.proposed == cm_create_floating_svi_interface.current
          - cm_create_floating_svi_interface.current.addresses.primaryV4 == "10.0.0.1/24"
          - cm_create_floating_svi_interface.current.addresses.primaryV6 is not defined
          - cm_create_floating_svi_interface.current.addresses.linkLocalV6 is not defined
          - cm_create_floating_svi_interface.current.addresses.ipV6DAD is not defined
          - cm_create_floating_svi_interface.current.encap.encapType == "vlan"
          - cm_create_floating_svi_interface.current.encap.value == 100
          - cm_create_floating_svi_interface.current.group is not defined
          - cm_create_floating_svi_interface.current.mac == "00:22:BD:F8:19:FF"
          - cm_create_floating_svi_interface.current.mtu == "inherit"
          - cm_create_floating_svi_interface.current.node.nodeID == "101"
          - cm_create_floating_svi_interface.current.node.podID == "1"
          - cm_create_floating_svi_interface.current.node.routerID == "1.1.1.1"
          - cm_create_floating_svi_interface.current.node.useRouteIDAsLoopback is not defined
          - cm_create_floating_svi_interface.current.node.loopbackIPs is not defined
          - cm_create_floating_svi_interface.current.node.group is not defined
          - cm_create_floating_svi_interface.current.nodeID == "101"
          - cm_create_floating_svi_interface.current.pathType == "anchorNode"
          - cm_create_floating_svi_interface.current.podID == "1"
          - cm_create_floating_svi_interface.current.targetDscp is not defined
          - cm_create_floating_svi_interface.current.templateId is defined
          - cm_create_floating_svi_interface.current.templateName is defined
          - nm_create_floating_svi_interface is changed
          - nm_create_floating_svi_interface.previous == {}
          - nm_create_floating_svi_interface.proposed == cm_create_floating_svi_interface.current
          - nm_create_floating_svi_interface.current != cm_create_floating_svi_interface.current
          - nm_create_floating_svi_interface.current.addresses.primaryV4 == "10.0.0.1/24"
          - nm_create_floating_svi_interface.current.addresses.primaryV6 is not defined
          - nm_create_floating_svi_interface.current.addresses.linkLocalV6 is not defined
          - nm_create_floating_svi_interface.current.addresses.ipV6DAD == "enabled"
          - nm_create_floating_svi_interface.current.encap.encapType == "vlan"
          - nm_create_floating_svi_interface.current.encap.value == 100
          - nm_create_floating_svi_interface.current.group == ""
          - nm_create_floating_svi_interface.current.mac == "00:22:BD:F8:19:FF"
          - nm_create_floating_svi_interface.current.mtu == "inherit"
          - nm_create_floating_svi_interface.current.node.group == ""
          - nm_create_floating_svi_interface.current.node.nodeID == "101"
          - nm_create_floating_svi_interface.current.node.podID == "1"
          - nm_create_floating_svi_interface.current.node.routerID == "1.1.1.1"
          - nm_create_floating_svi_interface.current.node.useRouteIDAsLoopback == false
          - nm_create_floating_svi_interface.current.node.loopbackIPs is not defined
          - nm_create_floating_svi_interface.current.nodeID == "101"
          - nm_create_floating_svi_interface.current.pathType == "anchorNode"
          - nm_create_floating_svi_interface.current.podID == "1"
          - nm_create_floating_svi_interface.current.targetDscp == "unspecified"
          - nm_create_floating_svi_interface.current.templateId is defined
          - nm_create_floating_svi_interface.current.templateName is defined
          - nm_create_floating_svi_interface.current.svi.autostate == "disabled"
          - nm_create_floating_svi_interface.current.svi.mode == None
          - nm_create_floating_svi_interface.current.templateId is defined
          - nm_create_floating_svi_interface.current.templateName is defined
          - nm_create_floating_svi_interface_again is not changed
          - nm_create_floating_svi_interface_again.previous == nm_create_floating_svi_interface_again.current == nm_create_floating_svi_interface.current

    # UPDATE

    - name: Update a L3out floating svi interface (check mode)
      cisco.mso.ndo_l3out_floating_svi_interface: &update_floating_svi_interface
        <<: *create_floating_svi_interface
        ipv4_address: 10.0.0.2/24
        ipv6_address: 2::101/16
        ipv6_link_local_address: FE80::10
        ipv6_dad: disabled
        mac: 00:22:BD:F8:19:FE
        mtu: 1000
        interface_group_policy: interface_group_policy_1
        node_group_policy: node_group_policy_1
        target_dscp: af11
        encapsulation_scope: vrf
        encapsulation_mode: trunk_native
        auto_state: enabled
      check_mode: true
      register: cm_update_floating_svi_interface

    - name: Update a L3out floating svi interface 
      cisco.mso.ndo_l3out_floating_svi_interface:
        <<: *update_floating_svi_interface
      register: nm_update_floating_svi_interface

    - name: Update a L3out floating svi interface again
      cisco.mso.ndo_l3out_floating_svi_interface:
        <<: *update_floating_svi_interface
      register: nm_update_floating_svi_interface_again

    - name: Assert that the L3out floating svi interface was updated
      ansible.builtin.assert:
        that:
          - cm_update_floating_svi_interface is changed
          - cm_update_floating_svi_interface.previous == nm_create_floating_svi_interface_again.current
          - cm_update_floating_svi_interface.previous != cm_update_floating_svi_interface.current
          - cm_update_floating_svi_interface.proposed == cm_update_floating_svi_interface.current
          - cm_update_floating_svi_interface.current.addresses.primaryV4 == "10.0.0.2/24"
          - cm_update_floating_svi_interface.current.addresses.primaryV6 == "2::101/16"
          - cm_update_floating_svi_interface.current.addresses.linkLocalV6 == "FE80::10"
          - cm_update_floating_svi_interface.current.addresses.ipV6DAD == "disabled"
          - cm_update_floating_svi_interface.current.encap.encapType == "vlan"
          - cm_update_floating_svi_interface.current.encap.value == 100
          - cm_update_floating_svi_interface.current.group == "interface_group_policy_1"
          - cm_update_floating_svi_interface.current.mac == "00:22:BD:F8:19:FE"
          - cm_update_floating_svi_interface.current.mtu == "1000"
          - cm_update_floating_svi_interface.current.node.group == "node_group_policy_1"
          - cm_update_floating_svi_interface.current.node.nodeID == "101"
          - cm_update_floating_svi_interface.current.node.podID == "1"
          - cm_update_floating_svi_interface.current.node.routerID == "1.1.1.1"
          - cm_update_floating_svi_interface.current.node.useRouteIDAsLoopback == false
          - cm_update_floating_svi_interface.current.node.loopbackIPs is not defined
          - cm_update_floating_svi_interface.current.nodeID == "101"
          - cm_update_floating_svi_interface.current.pathType == "anchorNode"
          - cm_update_floating_svi_interface.current.podID == "1"
          - cm_update_floating_svi_interface.current.targetDscp == "af11"
          - cm_update_floating_svi_interface.current.svi.autostate == "enabled"
          - cm_update_floating_svi_interface.current.svi.mode == "access8021p"
          - cm_update_floating_svi_interface.current.templateId is defined
          - cm_update_floating_svi_interface.current.templateName is defined
          - nm_update_floating_svi_interface is changed
          - nm_update_floating_svi_interface is changed
          - nm_update_floating_svi_interface.previous == nm_create_floating_svi_interface_again.current
          - nm_update_floating_svi_interface.previous != nm_update_floating_svi_interface.current
          - nm_update_floating_svi_interface.proposed == nm_update_floating_svi_interface.current == cm_update_floating_svi_interface.current
          - nm_update_floating_svi_interface_again is not changed
          - nm_update_floating_svi_interface_again.previous == nm_update_floating_svi_interface_again.current == nm_update_floating_svi_interface.current

    - name: Remove the ipv4_address from a L3out floating svi interface
      cisco.mso.ndo_l3out_floating_svi_interface: &removed_ipv4_address
        <<: *update_floating_svi_interface
        ipv4_address: ''
      register: nm_update_floating_svi_interface_ipv4_removed

    - name: Add the ipv4_address back to the L3out floating svi interface for ipv6 removal
      cisco.mso.ndo_l3out_floating_svi_interface:
        <<: *removed_ipv4_address
        ipv4_address: 10.0.0.2/24
      
    - name: Remove the ipv6_address from a L3out floating svi interface
      cisco.mso.ndo_l3out_floating_svi_interface:
        <<: *update_floating_svi_interface
        ipv6_address: ''
      register: nm_update_floating_svi_interface_ipv6_removed

    - name: Remove the ipv6_link_local_address from a L3out floating svi interface
      cisco.mso.ndo_l3out_floating_svi_interface:
        <<: *removed_ipv4_address
        ipv6_link_local_address: ''
      register: nm_update_floating_svi_interface_ipv6_link_local_removed

    - name: Assert that the ipv4_address, ipv6_address and ipv6_link_local_address were removed
      ansible.builtin.assert:
        that:
          - nm_update_floating_svi_interface_ipv4_removed is changed
          - nm_update_floating_svi_interface_ipv4_removed.previous.addresses.primaryV4 == "10.0.0.2/24"
          - nm_update_floating_svi_interface_ipv4_removed.current.addresses.primaryV4 is not defined
          - nm_update_floating_svi_interface_ipv6_removed is changed
          - nm_update_floating_svi_interface_ipv6_removed.previous.addresses.primaryV6 == "2::101/16"
          - nm_update_floating_svi_interface_ipv6_removed.current.addresses.primaryV6 is not defined
          - nm_update_floating_svi_interface_ipv6_link_local_removed is changed
          - nm_update_floating_svi_interface_ipv6_link_local_removed.previous.addresses.linkLocalV6 == "FE80::10"
          - nm_update_floating_svi_interface_ipv6_link_local_removed.current.addresses.linkLocalV6 is not defined

    - name: Update a L3out floating svi interface to use defined loopback as router id
      cisco.mso.ndo_l3out_floating_svi_interface:
        <<: *update_floating_svi_interface
        use_router_id_as_loopback: false
        node_loopback_ip: 3.3.3.3
      register: nm_update_floating_svi_interface_defined_loopback_as_router_id

    - name: Update a L3out floating svi interface to use router id as loopback
      cisco.mso.ndo_l3out_floating_svi_interface:
        <<: *update_floating_svi_interface
        use_router_id_as_loopback: true
        node_loopback_ip: ""
      register: nm_update_floating_svi_interface_router_id_as_loopback

    - name: Assert that the L3out floating svi interface with router id as loopback was updated
      ansible.builtin.assert:
        that:
          - nm_update_floating_svi_interface_defined_loopback_as_router_id is changed
          - nm_update_floating_svi_interface_defined_loopback_as_router_id.previous.node.useRouteIDAsLoopback == false
          - nm_update_floating_svi_interface_defined_loopback_as_router_id.previous.node.loopbackIPs is not defined
          - nm_update_floating_svi_interface_defined_loopback_as_router_id.current.node.useRouteIDAsLoopback == false
          - nm_update_floating_svi_interface_defined_loopback_as_router_id.current.node.loopbackIPs == ["3.3.3.3"]
          - nm_update_floating_svi_interface_router_id_as_loopback is changed
          - nm_update_floating_svi_interface_router_id_as_loopback.previous.node.useRouteIDAsLoopback == false
          - nm_update_floating_svi_interface_router_id_as_loopback.previous.node.loopbackIPs == ["3.3.3.3"]
          - nm_update_floating_svi_interface_router_id_as_loopback.current.node.useRouteIDAsLoopback == true
          - nm_update_floating_svi_interface_router_id_as_loopback.current.node.loopbackIPs is not defined

    # ERROR HANDLING

    - name: Create L3out floating svi interface with template and template_id
      cisco.mso.ndo_l3out_floating_svi_interface:
        <<: *create_floating_svi_interface
        template: l3out_template.current.name
        template_id: l3out_template.current.templateId
      register: error_floating_svi_interface_template_and_template_id
      ignore_errors: true

    - name: Create L3out floating svi interface with l3out and l3out_uuid
      cisco.mso.ndo_l3out_floating_svi_interface:
        <<: *create_floating_svi_interface
        l3out: mso_l3out.current.name
        l3out_uuid: mso_l3out.current.uuid
      register: error_floating_svi_interface_l3out_and_l3out_uuid
      ignore_errors: true

    - name: Create L3out floating svi interface without template or template_id
      cisco.mso.ndo_l3out_floating_svi_interface:
        <<: *mso_info
        l3out: l3out_1
        state: present
      register: error_floating_svi_interface_without_template_or_template_id
      ignore_errors: true

    - name: Create L3out floating svi interface without l3out or l3out_uuid
      cisco.mso.ndo_l3out_floating_svi_interface:
        <<: *mso_info
        template: '{{ mso_l3out_template | default("ansible_test") }}'
        state: present
      register: error_floating_svi_interface_without_l3out_or_l3out_uuid
      ignore_errors: true

    - name: Create a L3out floating svi interface without node_id
      cisco.mso.ndo_l3out_floating_svi_interface:
        <<: *mso_info
        template: '{{ mso_l3out_template | default("ansible_test") }}'
        l3out: l3out_1
        encapsulation_type: vlan
        encapsulation_value: 100
        state: present
      ignore_errors: true
      register: error_floating_svi_interface_without_node_id

    - name: Create a L3out floating svi interface without encapsulation_type
      cisco.mso.ndo_l3out_floating_svi_interface:
        <<: *mso_info
        template: '{{ mso_l3out_template | default("ansible_test") }}'
        l3out: l3out_1
        node_id: 101
        encapsulation_value: 100
        state: present
      ignore_errors: true
      register: error_floating_svi_interface_without_encapsulation_type

    - name: Create a L3out floating svi interface without encapsulation_value
      cisco.mso.ndo_l3out_floating_svi_interface:
        <<: *mso_info
        template: '{{ mso_l3out_template | default("ansible_test") }}'
        l3out: l3out_1
        node_id: 101
        encapsulation_type: vlan
        state: present
      ignore_errors: true
      register: error_floating_svi_interface_without_encapsulation_value

    - name: Set error message for svi interfaces
      ansible.builtin.set_fact:
        error_message_floating_svi_interface_without_encapsulation_type: "missing parameter(s) required by 'node_id': encapsulation_type"
        error_message_floating_svi_interface_without_encapsulation_value: "missing parameter(s) required by 'node_id': encapsulation_value" 

    - name: Assert that the error handling for svi interface creation works
      ansible.builtin.assert:
        that:
          - error_floating_svi_interface_template_and_template_id is failed
          - 'error_floating_svi_interface_template_and_template_id.msg == "parameters are mutually exclusive: template|template_id"'
          - error_floating_svi_interface_l3out_and_l3out_uuid is failed
          - 'error_floating_svi_interface_l3out_and_l3out_uuid.msg == "parameters are mutually exclusive: l3out|l3out_uuid"'
          - error_floating_svi_interface_without_template_or_template_id is failed
          - 'error_floating_svi_interface_without_template_or_template_id.msg == "one of the following is required: template, template_id"'
          - error_floating_svi_interface_without_l3out_or_l3out_uuid is failed
          - 'error_floating_svi_interface_without_l3out_or_l3out_uuid.msg == "one of the following is required: l3out, l3out_uuid"'
          - error_floating_svi_interface_without_node_id is failed
          - 'error_floating_svi_interface_without_node_id.msg == "state is present but all of the following are missing: node_id"'
          - error_floating_svi_interface_without_encapsulation_type is failed
          - error_floating_svi_interface_without_encapsulation_type.msg == error_message_floating_svi_interface_without_encapsulation_type
          - error_floating_svi_interface_without_encapsulation_value is failed
          - error_floating_svi_interface_without_encapsulation_value.msg == error_message_floating_svi_interface_without_encapsulation_value

    # QUERY

    - name: Create another L3out floating svi interface with vxlan for query all 
      cisco.mso.ndo_l3out_floating_svi_interface: &create_floating_svi_interface_2
        <<: *create_floating_svi_interface
        template: '{{ mso_l3out_template | default("ansible_test") }}'
        l3out: l3out_1
        node_id: 102
        encapsulation_type: vxlan
        encapsulation_value: 5000
        ipv4_address: 10.0.0.1/24
        mac: 00:22:BD:F8:19:FF
        mtu: inherit
        node_router_id: 2.2.2.2
      register: create_floating_svi_interface_2

    - name: Get a L3out floating svi interface
      cisco.mso.ndo_l3out_floating_svi_interface:
        <<: *create_floating_svi_interface
        state: query
      register: query_floating_svi_interface

    - name: Get a L3out floating svi interface 2
      cisco.mso.ndo_l3out_floating_svi_interface:
        <<: *create_floating_svi_interface_2
        state: query
      register: query_floating_svi_interface_2

    - name: Query all L3out floating svi interfaces
      cisco.mso.ndo_l3out_floating_svi_interface:
        <<: *mso_info
        template: '{{ mso_l3out_template | default("ansible_test") }}'
        l3out: l3out_1
        state: query
      register: query_all_floating_svi_interfaces

    - name: Assert that the L3out floating svi interfaces are queried
      ansible.builtin.assert:
        that:
          - query_floating_svi_interface is not changed
          - query_floating_svi_interface.current.podID == "1"
          - query_floating_svi_interface.current.nodeID == "101"
          - query_floating_svi_interface.current.pathType == "anchorNode"
          - query_floating_svi_interface.current.encap.encapType == "vlan"
          - query_floating_svi_interface.current.encap.value == 100
          - query_floating_svi_interface_2 is not changed
          - query_floating_svi_interface_2.current.podID == "1"
          - query_floating_svi_interface_2.current.nodeID == "102"
          - query_floating_svi_interface_2.current.pathType == "anchorNode"
          - query_floating_svi_interface_2.current.encap.encapType == "vxlan"
          - query_floating_svi_interface_2.current.encap.value == 5000
          - query_all_floating_svi_interfaces is not changed
          - query_all_floating_svi_interfaces.current | length == 2

    # DELETE

    - name: Delete a L3out floating svi interface (check mode)
      cisco.mso.ndo_l3out_floating_svi_interface: &delete_floating_svi_interface
        <<: *create_floating_svi_interface
        state: absent
      check_mode: true
      register: cm_delete_floating_svi_interface

    - name: Delete a L3out floating svi interface 
      cisco.mso.ndo_l3out_floating_svi_interface:
        <<: *delete_floating_svi_interface
      register: nm_delete_floating_svi_interface 

    - name: Delete a L3out floating svi interface again
      cisco.mso.ndo_l3out_floating_svi_interface:
        <<: *delete_floating_svi_interface
      register: nm_delete_floating_svi_interface_again 

    - name: Assert that the L3out floating svi interface was deleted
      ansible.builtin.assert:
        that:
          - cm_delete_floating_svi_interface is changed
          - cm_delete_floating_svi_interface.previous == query_floating_svi_interface.current
          - cm_delete_floating_svi_interface.proposed == cm_delete_floating_svi_interface.current == {}
          - nm_delete_floating_svi_interface is changed
          - nm_delete_floating_svi_interface.previous == query_floating_svi_interface.current
          - nm_delete_floating_svi_interface.proposed == nm_delete_floating_svi_interface.current == {}
          - nm_delete_floating_svi_interface_again is not changed
          - nm_delete_floating_svi_interface_again.previous == nm_delete_floating_svi_interface_again.proposed == nm_delete_floating_svi_interface_again.current == {}

    # CLEANUP TEMPLATE

    - name: Remove l3out template
      cisco.mso.ndo_template:
        <<: *ndo_l3out_template_absent

    - name: Remove ansible_test schema template
      cisco.mso.mso_schema_template:
        <<: *mso_schema_template_absent

    - name: Remove ansible_fabric_policy_template fabric_policy template
      cisco.mso.ndo_template:
        <<: *ndo_fabric_policy_template_absent
