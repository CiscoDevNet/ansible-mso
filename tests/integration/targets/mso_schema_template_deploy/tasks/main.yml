# Test code for the MSO modules
# Copyright: (c) 2020, Cindy Zhao (@cizhao) <cizhao@cisco.com>

# GNU General Public License v3.0+ (see LICENSE or https://www.gnu.org/licenses/gpl-3.0.txt)

- name: Test that we have an ACI MultiSite host, username and password
  fail:
    msg: 'Please define the following variables: mso_hostname, mso_username and mso_password.'
  when: mso_hostname is not defined or mso_username is not defined or mso_password is not defined


# CLEAN ENVIRONMENT
- name: Set vars
  set_fact:
    mso_info: &mso_info
      host: '{{ mso_hostname }}'
      username: '{{ mso_username }}'
      password: '{{ mso_password }}'
      validate_certs: '{{ mso_validate_certs | default(false) }}'
      use_ssl: '{{ mso_use_ssl | default(true) }}'
      use_proxy: '{{ mso_use_proxy | default(true) }}'
      output_level: '{{ mso_output_level | default("info") }}'

- name: Ensure site exist
  mso_site: &site_present
    <<: *mso_info
    site: '{{ mso_site | default("ansible_test") }}'
    apic_username: '{{ apic_username }}'
    apic_password: '{{ apic_password }}'
    apic_site_id: '{{ apic_site_id | default(101) }}'
    urls:
    - https://{{ apic_hostname }}
    state: present

- name: Undeploy template
  mso_schema_template_deploy:
    <<: *mso_info
    schema: ansible_test
    template: "{{ item }}"
    site: '{{ mso_site | default("ansible_test") }}'
    state: undeploy
  ignore_errors: yes
  loop:
    - Template 1
    - Template 2
    - Template 3
    - Template 4
    - Template_5
    - Template 5
    - Template5

- name: Remove schemas
  mso_schema:
    <<: *mso_info
    schema: '{{ item }}'
    state: absent
  loop:
  - '{{ mso_schema | default("ansible_test") }}_2'
  - '{{ mso_schema | default("ansible_test") }}'

- name: Ensure tenant ansible_test exists
  mso_tenant: 
    <<: *mso_info
    tenant: ansible_test
    users:
      - '{{ mso_username }}'
    sites:
    - '{{ mso_site | default("ansible_test") }}'
    state: present

- name: Ensure schema 1 with Template 1, and Template 2, Template 3 exist
  mso_schema_template:
    <<: *mso_info
    schema: '{{ mso_schema | default("ansible_test") }}'
    tenant: ansible_test
    template: '{{ item }}'
    state: present
  loop:
  - Template 1
  - Template 2
  - Template 3
  - Template 4
  - Template_5

- name: Add physical site to a schema
  mso_schema_site:
    <<: *mso_info
    schema: '{{ mso_schema | default("ansible_test") }}'
    site: '{{ mso_site | default("ansible_test") }}'
    template: '{{ item }}'
    state: present
  loop:
  - Template 1
  - Template 2
  - Template 3
  - Template 4
  - Template_5

- name: Deploy templates (check_mode)
  mso_schema_template_deploy: &schema_deploy
    <<: *mso_info
    schema: ansible_test
    template: "{{ item }}"
    site: '{{ mso_site | default("ansible_test") }}'
    state: deploy
  check_mode: yes
  register: cm_deploy_template
  loop:
  - Template 1
  - Template 2
  - Template 3
  - Template 4
  - Template_5

- name: Verify cm_deploy_template
  assert:
    that:
    - item is not changed
  loop: "{{ cm_deploy_template.results }}"

- name: Deploy templates (normal_mode)
  mso_schema_template_deploy:
    <<: *schema_deploy
    schema: ansible_test
    template: "{{ item }}"
    site: '{{ mso_site | default("ansible_test") }}'
    state: deploy
  register: nm_deploy_template
  loop:
  - Template 1
  - Template 2
  - Template 3
  - Template 4
  - Template_5

- name: Verify nm_deploy_template
  assert:
    that:
    - item is not changed
    - item.msg == "Successfully deployed"
  loop: "{{ nm_deploy_template.results }}"

- name: Get deployment status
  mso_schema_template_deploy: 
    <<: *schema_deploy
    schema: ansible_test
    template: "{{ item }}"
    state: status
  register: query_deploy_status
  loop:
  - Template 1
  - Template 2
  - Template 3
  - Template 4
  - Template_5

- name: Verify query_deploy_status
  assert:
    that:
    - item is not changed
    - item.status.0.status.siteStatus == "Succeeded"
  loop: "{{ query_deploy_status.results }}"

- name: Undeploy templates
  mso_schema_template_deploy:
    <<: *schema_deploy
    schema: ansible_test
    template: '{{ item }}'
    site: '{{ mso_site | default("ansible_test") }}'
    state: undeploy
  register: undeploy_template
  loop:
    - Template 1
    - Template 2
    - Template 3
    - Template 4
    - Template_5

- name: Verify undeploy_template
  assert:
    that:
    - item is not changed
    - item.msg == "Successfully deployed"
  loop: "{{ undeploy_template.results }}"