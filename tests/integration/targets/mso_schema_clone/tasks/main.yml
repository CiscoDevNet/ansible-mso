# Test code for the MSO modules
# Copyright: (c) 2020, Cindy Zhao (@cizhao) <cizhao@cisco.com>

# GNU General Public License v3.0+ (see LICENSE or https://www.gnu.org/licenses/gpl-3.0.txt)

- name: Test that we have an ACI MultiSite host, username and password
  fail:
    msg: 'Please define the following variables: mso_hostname, mso_username and mso_password.'
  when: mso_hostname is not defined or mso_username is not defined or mso_password is not defined

# CLEAN ENVIRONMENT
- name: Set vars
  set_fact:
    mso_info: &mso_info
      host: '{{ mso_hostname }}'
      username: '{{ mso_username }}'
      password: '{{ mso_password }}'
      validate_certs: '{{ mso_validate_certs | default(false) }}'
      use_ssl: '{{ mso_use_ssl | default(true) }}'
      use_proxy: '{{ mso_use_proxy | default(true) }}'
      output_level: '{{ mso_output_level | default("info") }}'

- name: Remove schemas
  cisco.mso.mso_schema:
    <<: *mso_info
    schema: '{{ item }}'
    state: absent
  ignore_errors: yes
  loop:
  - Destination_Schema
  - Source_Schema

- name: Ensure tenant ansible_test exists
  mso_tenant: 
    <<: *mso_info
    tenant: ansible_test
    users:
      - '{{ mso_username }}'
    sites:
    - '{{ mso_site | default("ansible_test") }}'
    state: present

- name: Create schema 1 with Template 1, and Template 2, Template 3 exist
  cisco.mso.mso_schema_template:
    <<: *mso_info
    schema: Source_Schema
    tenant: ansible_test
    template: '{{item.template}}'
    state: present
  loop:
  - { template: Template 1}
  - { template: Template 2}
  - { template: Template 3}

- name: Clone schema
  cisco.mso.mso_schema_clone:
    <<: *mso_info
    source_schema: Source_Schema
    destination_schema: Destination_Schema
    state: clone
  register: add_schema

- name: Clone schema
  cisco.mso.mso_schema_clone:
    <<: *mso_info
    source_schema: Source_Schema
    destination_schema: Source_Schema
    state: clone
  ignore_errors: yes
  register: add_same_schema

- name: Verify add_same_schema
  assert:
    that:
    - add_same_schema is not changed
    - add_same_schema.current == {}
    - add_same_schema.msg == "Schema with the name 'Source_Schema' already exists. Please use another name."

- name: Remove schemas
  cisco.mso.mso_schema:
    <<: *mso_info
    schema: '{{ item }}'
    state: absent
  register: rm_schema
  loop:
  - Destination_Schema
  - Source_Schema

- name: Verify rm_schema
  assert:
    that:
    - rm_schema is changed

